{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/keqing1.webp","path":"images/keqing1.webp","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"3eb412d2680b075243a17fa7ece84bf2bbdf1ac2","modified":1674095635729},{"_id":"source/_posts/Hello.md","hash":"c05d4324713b0fc7c8b031edd650b45f9cbca3d5","modified":1680487351936},{"_id":"source/_posts/Rider 快捷键.md","hash":"98a446da2b2964e88f560bd42de6ca37621949a1","modified":1676545839725},{"_id":"source/_posts/文章加密.md","hash":"54713a37eeb9f721ead24a812add7392c9ee266a","modified":1675168349346},{"_id":"source/_posts/Git/git缓存设置.md","hash":"4dcce0cbf075256b2166cc42b5ba45c51c823210","modified":1680226505289},{"_id":"source/_posts/Git/git网络配置.md","hash":"d98d8743439ee9f1882ddc44786a50b60efb1c14","modified":1680226505290},{"_id":"source/categories/index.md","hash":"76ade2c3c4e288d8c19276ee831d03374eb6432d","modified":1674973028743},{"_id":"source/_posts/RO/RO上手流程梳理(4).md","hash":"604b67be03014f404893dc24ff5b7c71f3865d22","modified":1680371788123},{"_id":"source/_posts/RO/RO上手流程梳理(1).md","hash":"34ef4f3515e3ffb3598860dfcd80488b9b08a15c","modified":1680226819398},{"_id":"source/_posts/RO/RO笔记.md","hash":"939defd177eee64e46f911c0381f77aad5b174d6","modified":1680258346116},{"_id":"source/_posts/RO/RO上手流程梳理(2).md","hash":"e428ffa7a0e795b23f0d50e5a4ea21f6f282677b","modified":1680226817748},{"_id":"source/_posts/RO/RO上手流程梳理(3).md","hash":"8f1e17fc8668bf4ca26755d27249cb97b5b874f5","modified":1680226821719},{"_id":"source/_posts/网站搭建/hexo笔记.md","hash":"6306d43f16de8fb1708eade4691180ed9d089730","modified":1680226505291},{"_id":"source/_posts/网站搭建/markdown常用语法.md","hash":"4f54fcde549169100d2e644b9aee53dcc71b6249","modified":1675167608916},{"_id":"source/_posts/计算机基础/信息表示.md","hash":"ad821faa45385937e1840a4b13b3ca01a6cb7ff1","modified":1680485288614},{"_id":"source/_posts/我是学生/rider学习版.md","hash":"d12ff9eb5422f719256571423b2d56871b8b3832","modified":1678894464591},{"_id":"source/_posts/Lua语言/lua元表.md","hash":"76540a394c167d4ab478fbd9aa827f0d09fb0e5c","modified":1675264989771},{"_id":"source/_posts/我是学生/unity学习版.md","hash":"937e74b16ea32381a50211ae9aa9547b287167b0","modified":1680156153042},{"_id":"source/images/keqing1.webp","hash":"f2ea89b3ad10906c588c9d6ea09b34cb29ec1ecf","modified":1674995911886},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1674099156598},{"_id":"themes/butterfly/README.md","hash":"15e7f6386b4fd3fa4a6c179ddf641e1ae57eafa2","modified":1674099156599},{"_id":"themes/butterfly/README_CN.md","hash":"d0f7a24732855ae340f94e8286085d5387850cde","modified":1674099156600},{"_id":"themes/butterfly/_config.yml","hash":"8bdf336009bab115ec7778d0d4761979c16082a2","modified":1674099156600},{"_id":"themes/butterfly/package.json","hash":"822d83111feefd6a026b14fedef7871960ab434f","modified":1674099156657},{"_id":"themes/butterfly/plugins.yml","hash":"8e3b5e44ff0e7e9c5779234bf21e1e70aeec5ae8","modified":1674099156658},{"_id":"themes/butterfly/languages/default.yml","hash":"a62bfe75c32dd0c2754b6fc70df027947ed1e711","modified":1674099156601},{"_id":"themes/butterfly/languages/en.yml","hash":"9d83a52e3fe3c086eadcdd9bca50829ca9b3a188","modified":1674099156602},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"c2f1111d0cffddbf04248a7daa55c7895b9e4cf3","modified":1674099156602},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"30b69c969394392e4bdd3763873ceed0d473cfcb","modified":1674099156602},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1674099156603},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1674099156603},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1674099156655},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1674099156655},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1674099156656},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1674099156656},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1674099156596},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1674099156596},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1674099156597},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1674099156597},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1674099156598},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1674099156604},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"bfc28cb79e81f55c09672fb8e4372a71e0994761","modified":1674099156605},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1674099156605},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ab32b8d4ef682bd1d9b727b9d25a19dc06f3e68e","modified":1674099156605},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"25cd2d7c4d3f6836a157b73a2442a7712ff40b34","modified":1674099156613},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1674099156618},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"5f96a28a4eac046b68ccc10e8c24ab01525e3245","modified":1674099156620},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1674099156621},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1674099156658},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"39a2f0088841abb89b3b801469266cc9568fced0","modified":1674099156659},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1674099156659},{"_id":"themes/butterfly/scripts/events/init.js","hash":"72605a00bf623b6cbc9fa0f90069ea2ae584c5c0","modified":1674099156659},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1674099156660},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1674099156660},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1674099156661},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"d33f0a055bacaa96ee5b69f821292d87658f4b0c","modified":1674099156661},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1674099156662},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1674099156662},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1674099156662},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"40f85785d041b976f47a2828b0dc54346dcb62b0","modified":1674099156663},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"ade8ce15cc7f41587e616f8e40f565081aee1c37","modified":1674099156664},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1674099156664},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1674099156665},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1674099156665},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"bc74b7701ac07ff679b699d63e706935b37a8b7b","modified":1674099156665},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1674099156666},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1674099156666},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1674099156667},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1674099156667},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1674099156667},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1674099156668},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1674099156668},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1674099156690},{"_id":"themes/butterfly/source/css/var.styl","hash":"63f12a6a847738b1479ce782c8caac5e0cf16a6b","modified":1674099156691},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1674099156692},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1674099156692},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1674099156693},{"_id":"themes/butterfly/source/js/main.js","hash":"f049b166073c4bcdccc6d8348774941a4e2c6d7b","modified":1674099156694},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"c4dac81869b33fa1590fae60a45b2e915a59c3ec","modified":1674099156695},{"_id":"themes/butterfly/source/js/utils.js","hash":"85a4f6e680ad2500ed114918158557ed85a8d89a","modified":1674099156696},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1674099156606},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1674099156606},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"f4b80b4a3ff5dd877b447b42d078f01ee3ecab24","modified":1674099156607},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1674099156608},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1674099156608},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1674099156608},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1674099156609},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1674099156609},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1674099156609},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"e9f952f1b66a0116fccb812b14db0f229666e586","modified":1674099156610},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1674099156611},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"40efa8e29460746b0d1253ce19b87eb035e25c47","modified":1674099156611},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1674099156612},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1674099156613},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"767ca9b4dad126ba5fbd2f3ea5ca8d07c0d2b32c","modified":1674099156614},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1674099156615},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"39847b8a1f0fad7889954a4ac936b7681949f16c","modified":1674099156615},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1674099156616},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"39c205027296dbd9fc9eb3cfd9d033bc5bd031b7","modified":1674099156616},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1674099156617},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1674099156617},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"a60d9cc9083142e3d92b618561abd557fcab502b","modified":1674099156617},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1674099156618},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1674099156619},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1674099156620},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1674099156622},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1674099156637},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1674099156644},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1674099156644},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1674099156644},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d4836a2ce1c87a59cfa8e4986346bf353710277f","modified":1674099156649},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1674099156649},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1674099156649},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1674099156650},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1674099156650},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1674099156651},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1674099156651},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1674099156652},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1674099156652},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1674099156653},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1674099156653},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1674099156654},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1674099156654},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1674099156654},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"6a7a926b72c5083aa14051a0eca8d49e1c6261f1","modified":1674099156670},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c424b1a3119ffb8396d80bb3585f48bd6777c917","modified":1674099156670},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1674099156671},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1674099156674},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"7a12719a1ef2bce7d4056f2241251a71e92cd72c","modified":1674099156674},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1674099156675},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1674099156675},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"077ce6932261cf51696834a25d1d988fec6cd7d0","modified":1674099156676},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"d33f2d9001a82d9a72d6f4088743762fbd016e4c","modified":1674099156676},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1674099156677},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1674099156676},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"b0ba6f72848bc711bcf534c56b04ae14ab21b320","modified":1674099156677},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1674099156678},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1674099156678},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1674099156678},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1674099156679},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"956ed11cc5d65941b49192b9be47cecfaed57a91","modified":1674099156679},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"5dabc3a5330cc28f0666d1cd8db0d67f553fd854","modified":1674099156679},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"d072872714854cdc3d2975fb131ac31cb82b13e3","modified":1674099156680},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1674099156680},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1674099156681},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1674099156681},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1674099156681},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d83389e07f8851f1b9afafe0eacd1bf10ad334ef","modified":1674099156683},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1674099156682},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1674099156683},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"e3e1b234a2595824576b8c9ed87af6d933f4e125","modified":1674099156684},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1674099156684},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"72a38c1dad7f55564b02c7a23e6ef39219edcd80","modified":1674099156685},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1674099156685},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1674099156686},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1674099156686},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1674099156687},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1674099156687},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1674099156688},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1674099156688},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1674099156689},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1674099156689},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1674099156690},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"73027a5e8b49d62b5b5a4d51663d5189f8eb7b4c","modified":1674099156694},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"44b6d3fb2c9b437d85de751d83e2e92a0830451d","modified":1674099156695},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1674099156622},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1674099156623},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"aff5c34b6061b281c66a986cf017e9021dc11ac6","modified":1674099156624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1674099156624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1674099156625},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1674099156625},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1674099156626},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3f59333064c4fc754c638f13a417b7be2569ca09","modified":1674099156626},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1674099156627},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1674099156627},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1674099156628},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1674099156628},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"a5ddcf84ce8855c7801289270009e29c3a103150","modified":1674099156628},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e703319ae5395273e81de11ba2366f21a104cf47","modified":1674099156629},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1674099156630},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"d6a2a828689d619943838d42f2c3a45551e2c6c4","modified":1674099156630},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1674099156631},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"ca1337586aafc85e7f6d730ed0a1984a1a12aba7","modified":1674099156631},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"fe599836225b835bd19fe1a6831fb4d41bcec071","modified":1674099156631},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1674099156632},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"77729ecfae68ad21ff1d22ff2c8aa212f4d405c6","modified":1674099156632},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1674099156633},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1674099156633},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1674099156634},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1674099156634},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1674099156635},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1674099156635},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1674099156635},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"6b0d28671afd5ed286a714f25ba16256a2e7d880","modified":1674099156636},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1674099156637},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1674099156638},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"2a39dd634a80a735359206a2481f8468f34a0b5c","modified":1674099156638},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1674099156639},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"77ac27a24b8347668c4df9d5c44c9461c69eaec9","modified":1674099156640},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1674099156641},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1674099156641},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1674099156642},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1674099156642},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1674099156643},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1674099156643},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"f434dce30f8faee0db5a8e4d2c81196b0e3605f4","modified":1674099156643},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1674099156646},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1674099156646},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1674099156647},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1674099156646},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1674099156647},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1674099156648},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1674099156648},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1674099156671},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1674099156672},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1674099156672},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1674099156673},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1674099156673},{"_id":"public/archives/index.html","hash":"c53b189da44d425ba3d6b9607f015e79a8fe64a8","modified":1680487414784},{"_id":"public/archives/page/2/index.html","hash":"1de4ee27fa158cb5312a9b4bfd3f26e5a75b8d46","modified":1680487414784},{"_id":"public/archives/2023/index.html","hash":"6e11efb2abfbd013063bae021a8fe7a55291dbfd","modified":1680487414784},{"_id":"public/archives/2023/page/2/index.html","hash":"60245b0c7e553285520ceb31a43c765c7b317c13","modified":1680487414784},{"_id":"public/archives/2023/01/index.html","hash":"37b094f5f79e410a55b353b2a50289cc1952ce8d","modified":1680487414784},{"_id":"public/archives/2023/02/index.html","hash":"95b0096ad35b735d44d28c662df96a0edf7547b1","modified":1680487414784},{"_id":"public/archives/2023/03/index.html","hash":"9b046e40ff51938a4d7b122cb557e6b3354a2816","modified":1680487414784},{"_id":"public/categories/index.html","hash":"d2050ee1c6b0a9c43d85f631561f334cbf0b2bd1","modified":1680487414784},{"_id":"public/2023/03/30/RO/RO笔记/index.html","hash":"3146eed0aa7625fa2896e14abe018e64b455e2ed","modified":1680487414784},{"_id":"public/2023/03/12/我是学生/rider学习版/index.html","hash":"e317166cdaf48cd2278b3ac36d6534eb1f24f5f7","modified":1680487414784},{"_id":"public/2023/03/12/我是学生/unity学习版/index.html","hash":"78752d25a8e24f4de1587b55d7ca66f420282c63","modified":1680487414784},{"_id":"public/2023/03/10/网站搭建/hexo笔记/index.html","hash":"7a15526d71ac11b885c8c783042883104a560fa4","modified":1680487414784},{"_id":"public/2023/03/10/Git/git缓存设置/index.html","hash":"e3f2808d2ff070825083631f7c9438de9ef689f6","modified":1680487414784},{"_id":"public/2023/02/21/RO/RO上手流程梳理(4)/index.html","hash":"516ae2e7350f389c1d855bc48a7e721f1f8af9eb","modified":1680487414784},{"_id":"public/2023/02/16/Rider 快捷键/index.html","hash":"b5ad5982fb7c102462c53e50deba7176d72244fa","modified":1680487414784},{"_id":"public/2023/02/01/Lua语言/lua元表/index.html","hash":"79ba3b83b14425dcf91cca88826e7510761dfdf8","modified":1680487414784},{"_id":"public/2023/02/01/RO/RO上手流程梳理(3)/index.html","hash":"35996069461aa1223ecbdeb57938e8e4cb2b7e8a","modified":1680487414784},{"_id":"public/2023/02/01/RO/RO上手流程梳理(2)/index.html","hash":"cb5c4e3b1d90c87be035368f496cb3081bc30d02","modified":1680487414784},{"_id":"public/2023/01/31/RO/RO上手流程梳理(1)/index.html","hash":"16af1626624a1573d2ac5c5c59e3a3292c905fd6","modified":1680487414784},{"_id":"public/2023/01/31/文章加密/index.html","hash":"12b11a5be20b462c5060e8f3a2b9290d78127314","modified":1680487414784},{"_id":"public/2023/01/30/Hello/index.html","hash":"dae77498dfbf2781c79410f2c5170b0ee102b993","modified":1680487414784},{"_id":"public/2023/01/30/Git/git网络配置/index.html","hash":"432b453db0d69ad36827c1c272890697dfff0507","modified":1680487414784},{"_id":"public/2023/01/29/网站搭建/markdown常用语法/index.html","hash":"5b33aa8ae8d1dc162608447a42074ddc02dd6c3e","modified":1680487414784},{"_id":"public/2023/01/29/计算机基础/信息表示/index.html","hash":"7837cfeedc4eb3728c2c40581d3576947c6ca237","modified":1680487414784},{"_id":"public/index.html","hash":"b29ca8d1812bb55d88ca7e38c3e0cbe9b65e6aa8","modified":1680487414784},{"_id":"public/page/2/index.html","hash":"906b0fb32286bd767e155abdb8f7f19dfe4021ac","modified":1680487414784},{"_id":"public/tags/IDE/index.html","hash":"8ae33dbc6406ded12173febc55dc56f7d509b453","modified":1680487414784},{"_id":"public/tags/加密/index.html","hash":"be48976d073d4060c0b34910f8658b6c205086ea","modified":1680487414784},{"_id":"public/tags/git/index.html","hash":"ee85efa95493585152f6c5c55770635f5e4c80fd","modified":1680487414784},{"_id":"public/tags/网络代理/index.html","hash":"f94b066f570fa20b0b89390658b187e9534a1e09","modified":1680487414784},{"_id":"public/tags/GitHub/index.html","hash":"6ab249fff1e866dec316527a0465edf4b9debfff","modified":1680487414784},{"_id":"public/tags/RO/index.html","hash":"a2874c8b75d76f67a26bfb4088f6415741450853","modified":1680487414784},{"_id":"public/tags/元表/index.html","hash":"15cc2eb96cd95c504449d3391da1ec2444386df1","modified":1680487414784},{"_id":"public/tags/原方法/index.html","hash":"cc22a6ef7f161374b45523e728dad19eac070fdb","modified":1680487414784},{"_id":"public/tags/rider/index.html","hash":"dbfc7eed618838a4e4a031e6f2af39509c32b770","modified":1680487414784},{"_id":"public/tags/unityHub/index.html","hash":"3f9a76277452ccd7fc1f6ba3af605b1dd92a49df","modified":1680487414784},{"_id":"public/tags/hexo/index.html","hash":"ecc53fdd46fc7c93f2df4f5f5087288cf15a3a2f","modified":1680487414784},{"_id":"public/tags/Markdown/index.html","hash":"d26a6df2a2075042a04a575c92e197407015cc7c","modified":1680487414784},{"_id":"public/categories/编辑器/index.html","hash":"ce0e701f75826b272c1e4afcf53861458e77c313","modified":1680487414784},{"_id":"public/categories/博客搭建/index.html","hash":"07835f9228c8ac89dd149799efdf7f7fcde3da1a","modified":1680487414784},{"_id":"public/categories/git/index.html","hash":"7a46c425a22f757914d3c5da15165322525a2fd8","modified":1680487414784},{"_id":"public/categories/RO/index.html","hash":"654a3d98a8f8b5443b9949bb03deb8e46a92912c","modified":1680487414784},{"_id":"public/categories/Lua语言/index.html","hash":"1573673fd2b18f519d9f67d2486dcc351fe74c9c","modified":1680487414784},{"_id":"public/categories/我是学生/index.html","hash":"648ff27f0c8ede4d5bdc99b927728b86a4d7f0ba","modified":1680487414784},{"_id":"public/categories/网站搭建/index.html","hash":"fcc67b734893ccaaad7fa7616557602fd6077751","modified":1680487414784},{"_id":"public/categories/计算机基础/index.html","hash":"ce4c5d435ed6f1a7c23119937325da679fa2e364","modified":1680487414784},{"_id":"public/CNAME","hash":"3eb412d2680b075243a17fa7ece84bf2bbdf1ac2","modified":1680387145872},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1680387145872},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1680387145872},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1680387145872},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1680387145872},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1680387145872},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1680387145872},{"_id":"public/js/search/algolia.js","hash":"5f4294337c28324e088908ed0ceb237a2a360ae5","modified":1680387145872},{"_id":"public/js/search/local-search.js","hash":"ee86f52bb6558c51a6f31402c2e4ec1dcb81bb55","modified":1680387145872},{"_id":"public/js/utils.js","hash":"c9b4d8ec10a74f29cf1f9c4275f0cae3bd93b427","modified":1680387145872},{"_id":"public/css/index.css","hash":"7e7ca7d8a1827d845cad2a5376719c497304208e","modified":1680387145872},{"_id":"public/js/main.js","hash":"c0a3093c2485fa2121c10741e256170f211c7398","modified":1680387145872},{"_id":"public/js/tw_cn.js","hash":"76d0c5c172cae44b34b0bd3125fd068b2c3cbd4a","modified":1680387145872},{"_id":"public/images/keqing1.webp","hash":"f2ea89b3ad10906c588c9d6ea09b34cb29ec1ecf","modified":1680387145872},{"_id":"source/_posts/信息表示.md","hash":"9111fd4b4038e3452ff04be2aa96187b15e215da","modified":1674980311516},{"_id":"public/2023/01/29/信息表示/index.html","hash":"65382c3df68c35f0cf936704f4d97be58f0a7e64","modified":1680487414784},{"_id":"public/categories/计算机组成原理/index.html","hash":"cb09067030cebc74ebfd34b2ddcc262f82cc8692","modified":1680487414784},{"_id":"public/categories/计算机组成原理/信息表示/index.html","hash":"fdc9fc287408c4237787f4d757845078d6288a88","modified":1680487414784},{"_id":"public/tags/进制/index.html","hash":"4e42c27a6defb828ee323f6c9b7682441f98b12e","modified":1680487414784},{"_id":"public/tags/位运算/index.html","hash":"743c71d88bafe83c219b63d2306cc2ecb4ae59c9","modified":1680487414784}],"Category":[{"name":"编辑器","_id":"clfyj4ces0003t4v6hkscfhse"},{"name":"博客搭建","_id":"clfyj4cew0008t4v6cvan87b5"},{"name":"git","_id":"clfyj4cez000et4v621xn2lga"},{"name":"RO","_id":"clfyj4cf4000pt4v62vcq1bqe"},{"name":"Lua语言","_id":"clfyj4cfa001ft4v6ebhy3tcw"},{"name":"我是学生","_id":"clfyj4cfb001kt4v6hzbxhqr4"},{"name":"网站搭建","_id":"clfyj4cfc001rt4v6gxjmedku"},{"name":"计算机基础","_id":"clfyj4cfd001vt4v60l344qmm"},{"name":"计算机组成原理","_id":"clfzr3zke0001icv66oa2gsfn"},{"name":"信息表示","parent":"clfzr3zke0001icv66oa2gsfn","_id":"clfzr3zkl0004icv60vh2bmas"}],"Data":[],"Page":[{"title":"分类","date":"2023-01-29T06:15:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-01-29 14:15:07\ntype: \"categories\"\n---\n","updated":"2023-01-29T06:17:08.743Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clfyj4cek0000t4v659zp781f","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"Rider 快捷键","date":"2023-02-16T07:06:18.000Z","_content":"\n# Rider 快捷键 #\n\n## 位置相关 ##\n切换上个选项卡 Ctrl + PageUp   \n切换下个选项卡 Ctrl + PageDown   \n后退 Ctrl + -   \n前进 Ctrl + +   \n快速设置书签 Ctrl + K, Ctrl + K   \n显示书签 Ctrl + K, Ctrl + S   \n设置书签 Ctrl + F11   \n快速定义 Alt + F12   \n转到定义 F12   \n\n## 退出 ##\n选项卡关闭 Ctrl + F4   \n退出小窗口 Esc 或 Shift + Esc   \n\n## 提示 ##\n文档提示 Ctrl + K, Ctrl + I   \n\n## 查找替换 ##   \n该文件查找 Ctrl + F   \n全局查找 Shift, Shift   \n该文件内替换 Ctrl + H   \n查找引用 Shift + F12   \n\n## 结构 ##\n折叠 Ctrl + M, Ctrl + M   \n全部收起 Ctrl + M, Ctrl + A   \n全部展开 Ctrl + M, Ctrl + X\n格式化 Ctrl + K, Ctrl + F   ","source":"_posts/Rider 快捷键.md","raw":"---\ntitle: \"Rider 快捷键\"\ndate: 2023-02-16 15:06:18\ntags: [\"IDE\"]\ncategories: [\"编辑器\"]\n---\n\n# Rider 快捷键 #\n\n## 位置相关 ##\n切换上个选项卡 Ctrl + PageUp   \n切换下个选项卡 Ctrl + PageDown   \n后退 Ctrl + -   \n前进 Ctrl + +   \n快速设置书签 Ctrl + K, Ctrl + K   \n显示书签 Ctrl + K, Ctrl + S   \n设置书签 Ctrl + F11   \n快速定义 Alt + F12   \n转到定义 F12   \n\n## 退出 ##\n选项卡关闭 Ctrl + F4   \n退出小窗口 Esc 或 Shift + Esc   \n\n## 提示 ##\n文档提示 Ctrl + K, Ctrl + I   \n\n## 查找替换 ##   \n该文件查找 Ctrl + F   \n全局查找 Shift, Shift   \n该文件内替换 Ctrl + H   \n查找引用 Shift + F12   \n\n## 结构 ##\n折叠 Ctrl + M, Ctrl + M   \n全部收起 Ctrl + M, Ctrl + A   \n全部展开 Ctrl + M, Ctrl + X\n格式化 Ctrl + K, Ctrl + F   ","slug":"Rider 快捷键","published":1,"updated":"2023-02-16T11:10:39.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfyj4cen0001t4v69h3ueejo","content":"<h1 id=\"Rider-快捷键\"><a href=\"#Rider-快捷键\" class=\"headerlink\" title=\"Rider 快捷键\"></a>Rider 快捷键</h1><h2 id=\"位置相关\"><a href=\"#位置相关\" class=\"headerlink\" title=\"位置相关\"></a>位置相关</h2><p>切换上个选项卡 Ctrl + PageUp<br>切换下个选项卡 Ctrl + PageDown<br>后退 Ctrl + -<br>前进 Ctrl + +<br>快速设置书签 Ctrl + K, Ctrl + K<br>显示书签 Ctrl + K, Ctrl + S<br>设置书签 Ctrl + F11<br>快速定义 Alt + F12<br>转到定义 F12   </p>\n<h2 id=\"退出\"><a href=\"#退出\" class=\"headerlink\" title=\"退出\"></a>退出</h2><p>选项卡关闭 Ctrl + F4<br>退出小窗口 Esc 或 Shift + Esc   </p>\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>文档提示 Ctrl + K, Ctrl + I   </p>\n<h2 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h2><p>该文件查找 Ctrl + F<br>全局查找 Shift, Shift<br>该文件内替换 Ctrl + H<br>查找引用 Shift + F12   </p>\n<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><p>折叠 Ctrl + M, Ctrl + M<br>全部收起 Ctrl + M, Ctrl + A<br>全部展开 Ctrl + M, Ctrl + X<br>格式化 Ctrl + K, Ctrl + F   </p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"Rider-快捷键\"><a href=\"#Rider-快捷键\" class=\"headerlink\" title=\"Rider 快捷键\"></a>Rider 快捷键</h1><h2 id=\"位置相关\"><a href=\"#位置相关\" class=\"headerlink\" title=\"位置相关\"></a>位置相关</h2><p>切换上个选项卡 Ctrl + PageUp<br>切换下个选项卡 Ctrl + PageDown<br>后退 Ctrl + -<br>前进 Ctrl + +<br>快速设置书签 Ctrl + K, Ctrl + K<br>显示书签 Ctrl + K, Ctrl + S<br>设置书签 Ctrl + F11<br>快速定义 Alt + F12<br>转到定义 F12   </p>\n<h2 id=\"退出\"><a href=\"#退出\" class=\"headerlink\" title=\"退出\"></a>退出</h2><p>选项卡关闭 Ctrl + F4<br>退出小窗口 Esc 或 Shift + Esc   </p>\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>文档提示 Ctrl + K, Ctrl + I   </p>\n<h2 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h2><p>该文件查找 Ctrl + F<br>全局查找 Shift, Shift<br>该文件内替换 Ctrl + H<br>查找引用 Shift + F12   </p>\n<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><p>折叠 Ctrl + M, Ctrl + M<br>全部收起 Ctrl + M, Ctrl + A<br>全部展开 Ctrl + M, Ctrl + X<br>格式化 Ctrl + K, Ctrl + F   </p>\n"},{"title":"Hello","date":"2023-01-30T13:41:08.000Z","sticky":1,"cover":"https://s2.loli.net/2023/01/30/K3ZALsFq7mk8j12.webp","index_enable":true,"aside_enable":true,"archives_enable":true,"position":"right","toc":true,"toc_number":true,"_content":"\n欢迎来到我的博客~","source":"_posts/Hello.md","raw":"---\ntitle: Hello\ndate: 2023-01-30 21:41:08\n\n# 置顶优先级\nsticky: 1\n\n# 封面图\ncover: https://s2.loli.net/2023/01/30/K3ZALsFq7mk8j12.webp\n# 主页是否显示封面\nindex_enable: true\n# 侧栏是否显示封面\naside_enable: true\n# 时间轴是否显示封面\narchives_enable: true\n# 封面显示位置\nposition: right\n\ntoc: true\ntoc_number: true\n\n---\n\n欢迎来到我的博客~","slug":"Hello","published":1,"updated":"2023-04-03T02:02:31.936Z","_id":"clfyj4ceq0002t4v6gyj4g9tb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>欢迎来到我的博客~</p>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<p>欢迎来到我的博客~</p>\n"},{"title":"文章加密","date":"2023-01-31T11:39:16.000Z","_content":"\n# 通过 hexo-blog-encrypt 插件快速进行文章加密 #\n\n1. 安装 hexo-blog-encrypt 插件\n    ```DOS\n    npm install --save hexo-blog-encrypt\n    ```\n2. 在需要加密的文章 Post Front-matter 上添加密码\n    ```Markdown\n    password: hello\n    ```\n3. 使用``hexo clean && hexo g && hexo s``进行加密文章的预览。\n\n\n---\n\n# 回车键无反应的问题 #\n\n当问题出现符合下列情况时，   \n1. 在本地预览时正常，通过``hexo d``发布后的文章回车键无反应。\n2. 博客的页面为http非https。\n\n可以尝试将http改为https加载，更改方法如下: ``进入Github博客的代码仓库-> Settings-> Pages -> 勾选Enforce HTTPS``进行强制https加载。\n\n---\n\n其他问题和详细配置请访问插件官网   \n<https://github.com/D0n9X1n/hexo-blog-encrypt>","source":"_posts/文章加密.md","raw":"---\ntitle: 文章加密\ndate: 2023-01-31 19:39:16\ntags: \"加密\"\ncategories: \"博客搭建\"\n---\n\n# 通过 hexo-blog-encrypt 插件快速进行文章加密 #\n\n1. 安装 hexo-blog-encrypt 插件\n    ```DOS\n    npm install --save hexo-blog-encrypt\n    ```\n2. 在需要加密的文章 Post Front-matter 上添加密码\n    ```Markdown\n    password: hello\n    ```\n3. 使用``hexo clean && hexo g && hexo s``进行加密文章的预览。\n\n\n---\n\n# 回车键无反应的问题 #\n\n当问题出现符合下列情况时，   \n1. 在本地预览时正常，通过``hexo d``发布后的文章回车键无反应。\n2. 博客的页面为http非https。\n\n可以尝试将http改为https加载，更改方法如下: ``进入Github博客的代码仓库-> Settings-> Pages -> 勾选Enforce HTTPS``进行强制https加载。\n\n---\n\n其他问题和详细配置请访问插件官网   \n<https://github.com/D0n9X1n/hexo-blog-encrypt>","slug":"文章加密","published":1,"updated":"2023-01-31T12:32:29.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfyj4ceu0005t4v6aj2wbqii","content":"<h1 id=\"通过-hexo-blog-encrypt-插件快速进行文章加密\"><a href=\"#通过-hexo-blog-encrypt-插件快速进行文章加密\" class=\"headerlink\" title=\"通过 hexo-blog-encrypt 插件快速进行文章加密\"></a>通过 hexo-blog-encrypt 插件快速进行文章加密</h1><ol>\n<li>安装 hexo-blog-encrypt 插件 <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>\n<li>在需要加密的文章 Post Front-matter 上添加密码 <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: hello</span><br></pre></td></tr></table></figure></li>\n<li>使用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>进行加密文章的预览。</li>\n</ol>\n<hr>\n<h1 id=\"回车键无反应的问题\"><a href=\"#回车键无反应的问题\" class=\"headerlink\" title=\"回车键无反应的问题\"></a>回车键无反应的问题</h1><p>当问题出现符合下列情况时，   </p>\n<ol>\n<li>在本地预览时正常，通过<code>hexo d</code>发布后的文章回车键无反应。</li>\n<li>博客的页面为http非https。</li>\n</ol>\n<p>可以尝试将http改为https加载，更改方法如下: <code>进入Github博客的代码仓库-&gt; Settings-&gt; Pages -&gt; 勾选Enforce HTTPS</code>进行强制https加载。</p>\n<hr>\n<p>其他问题和详细配置请访问插件官网<br><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt\">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"通过-hexo-blog-encrypt-插件快速进行文章加密\"><a href=\"#通过-hexo-blog-encrypt-插件快速进行文章加密\" class=\"headerlink\" title=\"通过 hexo-blog-encrypt 插件快速进行文章加密\"></a>通过 hexo-blog-encrypt 插件快速进行文章加密</h1><ol>\n<li>安装 hexo-blog-encrypt 插件 <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>\n<li>在需要加密的文章 Post Front-matter 上添加密码 <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: hello</span><br></pre></td></tr></table></figure></li>\n<li>使用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>进行加密文章的预览。</li>\n</ol>\n<hr>\n<h1 id=\"回车键无反应的问题\"><a href=\"#回车键无反应的问题\" class=\"headerlink\" title=\"回车键无反应的问题\"></a>回车键无反应的问题</h1><p>当问题出现符合下列情况时，   </p>\n<ol>\n<li>在本地预览时正常，通过<code>hexo d</code>发布后的文章回车键无反应。</li>\n<li>博客的页面为http非https。</li>\n</ol>\n<p>可以尝试将http改为https加载，更改方法如下: <code>进入Github博客的代码仓库-&gt; Settings-&gt; Pages -&gt; 勾选Enforce HTTPS</code>进行强制https加载。</p>\n<hr>\n<p>其他问题和详细配置请访问插件官网<br><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt\">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p>\n"},{"title":"git缓存设置","date":"2023-03-10T02:09:17.000Z","_content":"# 修改git缓存 #\n默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   \n```CMD\n# 设置缓存为500MB\ngit config --global http.postBuffer 524288000\n\n# 查看当前缓存\ngit config --global http.postBuffer\n```","source":"_posts/Git/git缓存设置.md","raw":"---\ntitle: git缓存设置\ndate: 2023-03-10 10:09:17\ntags: [\"git\"]\ncategories: [\"git\"]\n\n---\n# 修改git缓存 #\n默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   \n```CMD\n# 设置缓存为500MB\ngit config --global http.postBuffer 524288000\n\n# 查看当前缓存\ngit config --global http.postBuffer\n```","slug":"Git/git缓存设置","published":1,"updated":"2023-03-31T01:35:05.289Z","_id":"clfyj4cev0006t4v65vph25fo","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"修改git缓存\"><a href=\"#修改git缓存\" class=\"headerlink\" title=\"修改git缓存\"></a>修改git缓存</h1><p>默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 设置缓存为<span class=\"number\">500</span>MB</span><br><span class=\"line\">git config --global http.postBuffer <span class=\"number\">524288000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 查看当前缓存</span><br><span class=\"line\">git config --global http.postBuffer</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"修改git缓存\"><a href=\"#修改git缓存\" class=\"headerlink\" title=\"修改git缓存\"></a>修改git缓存</h1><p>默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 设置缓存为<span class=\"number\">500</span>MB</span><br><span class=\"line\">git config --global http.postBuffer <span class=\"number\">524288000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 查看当前缓存</span><br><span class=\"line\">git config --global http.postBuffer</span><br></pre></td></tr></table></figure>"},{"title":"git网络代理配置","date":"2023-01-30T01:57:08.000Z","_content":"\n# Git网络配置语句 #\n\n```CMD\n# 查看全部配置\ngit config --global -l\n\n# 查看全局代理\ngit config --global http.proxy\ngit config --global https.proxy \n\n# 设置全局代理\ngit config --global http.proxy \"http://127.0.0.1:端口号\"\ngit config --global https.proxy \"https://127.0.0.1:端口号\"\n\n# 取消全局代理\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n```\n\n---\n\n# 解决在Github上的仓库Push或Clone网络错误的问题 #\n\n```CMD\n# 对Github单独设置代理\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:端口号\ngit config --global https.http://github.com.proxy socks5://127.0.0.1:端口号\n\n# 取消代理\ngit config --global --unset http.https://github.com.proxy \ngit config --global --unset https.http://github.com.proxy \n```\n\n由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  \n1. 创建.bat文件,使用UTF-8编码保存。\n2. 复制以下命令，并在更改自己的端口号\n    ```CMD\n    @ echo off\n    set portValue=7890\n\n    :start\n    echo 请输入数字\n    echo 1.显示git全部配置\n    echo 2.设置git对Github代理\n    echo 3.取消git对Github代理\n    echo 4.设置代理服务器端口号(默认%portValue%)\n    echo 5.查看代理服务器端口号\n    echo 6.退出\n    CHOICE /C 123456 /N\n    if errorlevel 6 goto exit\n    if errorlevel 5 goto showProxyPort\n    if errorlevel 4 goto setProxyPort\n    if errorlevel 3 goto unsetProxy\n    if errorlevel 2 goto setProxy\n    if errorlevel 1 goto showProxy\n\n    :showProxy\n    git config --global -l\n    goto start\n\n    :setProxy\n    :: 在两条git语句末尾 填入自己的代理端口号\n    git config --global http.https://github.com.proxy socks5://127.0.0.1:%portValue%\n    git config --global https.http://github.com.proxy socks5://127.0.0.1:%portValue%\n    goto start\n\n    :unsetProxy\n    git config --global --unset http.https://github.com.proxy \n    git config --global --unset https.http://github.com.proxy \n    goto start\n\n    :setProxyPort\n    set /p portValue=请输入端口号:\n    goto start\n\n    :showProxyPort\n    echo %portValue%\n    goto start\n\n    :exit\n    Pause\n    ```\n3. 运行.bat文件，根据提示输入。   \n\n---   \n\n# 解决在Github上的用户验证问题 #   \n1. 进入Github中生成生成token令牌，``Setting-> Developer settings-> Personal access tokens-> Tokens(classic)-> Generate new token-> Generate new token(classic)``\n2. 保存该token令牌，不保存就找不到了!!\n3. 在仓库地址上添加该令牌的值和一个@符号，``https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git``   \n\n> 第二种使用SSH的方式，参考<https://blog.csdn.net/qq_45491549/article/details/128825216>   \n\n---","source":"_posts/Git/git网络配置.md","raw":"---\ntitle: \"git网络代理配置\"\ndate: 2023-01-30 09:57:08\ntags: [\"git\", \"网络代理\", \"GitHub\"]\ncategories: [\"git\"]\n---\n\n# Git网络配置语句 #\n\n```CMD\n# 查看全部配置\ngit config --global -l\n\n# 查看全局代理\ngit config --global http.proxy\ngit config --global https.proxy \n\n# 设置全局代理\ngit config --global http.proxy \"http://127.0.0.1:端口号\"\ngit config --global https.proxy \"https://127.0.0.1:端口号\"\n\n# 取消全局代理\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n```\n\n---\n\n# 解决在Github上的仓库Push或Clone网络错误的问题 #\n\n```CMD\n# 对Github单独设置代理\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:端口号\ngit config --global https.http://github.com.proxy socks5://127.0.0.1:端口号\n\n# 取消代理\ngit config --global --unset http.https://github.com.proxy \ngit config --global --unset https.http://github.com.proxy \n```\n\n由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  \n1. 创建.bat文件,使用UTF-8编码保存。\n2. 复制以下命令，并在更改自己的端口号\n    ```CMD\n    @ echo off\n    set portValue=7890\n\n    :start\n    echo 请输入数字\n    echo 1.显示git全部配置\n    echo 2.设置git对Github代理\n    echo 3.取消git对Github代理\n    echo 4.设置代理服务器端口号(默认%portValue%)\n    echo 5.查看代理服务器端口号\n    echo 6.退出\n    CHOICE /C 123456 /N\n    if errorlevel 6 goto exit\n    if errorlevel 5 goto showProxyPort\n    if errorlevel 4 goto setProxyPort\n    if errorlevel 3 goto unsetProxy\n    if errorlevel 2 goto setProxy\n    if errorlevel 1 goto showProxy\n\n    :showProxy\n    git config --global -l\n    goto start\n\n    :setProxy\n    :: 在两条git语句末尾 填入自己的代理端口号\n    git config --global http.https://github.com.proxy socks5://127.0.0.1:%portValue%\n    git config --global https.http://github.com.proxy socks5://127.0.0.1:%portValue%\n    goto start\n\n    :unsetProxy\n    git config --global --unset http.https://github.com.proxy \n    git config --global --unset https.http://github.com.proxy \n    goto start\n\n    :setProxyPort\n    set /p portValue=请输入端口号:\n    goto start\n\n    :showProxyPort\n    echo %portValue%\n    goto start\n\n    :exit\n    Pause\n    ```\n3. 运行.bat文件，根据提示输入。   \n\n---   \n\n# 解决在Github上的用户验证问题 #   \n1. 进入Github中生成生成token令牌，``Setting-> Developer settings-> Personal access tokens-> Tokens(classic)-> Generate new token-> Generate new token(classic)``\n2. 保存该token令牌，不保存就找不到了!!\n3. 在仓库地址上添加该令牌的值和一个@符号，``https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git``   \n\n> 第二种使用SSH的方式，参考<https://blog.csdn.net/qq_45491549/article/details/128825216>   \n\n---","slug":"Git/git网络配置","published":1,"updated":"2023-03-31T01:35:05.290Z","_id":"clfyj4cew0007t4v60s9v12fz","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Git网络配置语句\"><a href=\"#Git网络配置语句\" class=\"headerlink\" title=\"Git网络配置语句\"></a>Git网络配置语句</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看全部配置</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看全局代理</span><br><span class=\"line\">git config --global http.proxy</span><br><span class=\"line\">git config --global https.proxy </span><br><span class=\"line\"></span><br><span class=\"line\"># 设置全局代理</span><br><span class=\"line\">git config --global http.proxy &quot;http://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\">git config --global https.proxy &quot;https://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消全局代理</span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"解决在Github上的仓库Push或Clone网络错误的问题\"><a href=\"#解决在Github上的仓库Push或Clone网络错误的问题\" class=\"headerlink\" title=\"解决在Github上的仓库Push或Clone网络错误的问题\"></a>解决在Github上的仓库Push或Clone网络错误的问题</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 对Github单独设置代理</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消代理</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br></pre></td></tr></table></figure>\n\n<p>由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  </p>\n<ol>\n<li>创建.bat文件,使用UTF-8编码保存。</li>\n<li>复制以下命令，并在更改自己的端口号 <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ <span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">set</span> portValue=<span class=\"number\">7890</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"built_in\">start</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 请输入数字</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">1</span>.显示git全部配置</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">2</span>.设置git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">3</span>.取消git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">4</span>.设置代理服务器端口号(默认<span class=\"variable\">%portValue%</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">5</span>.查看代理服务器端口号</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">6</span>.退出</span><br><span class=\"line\">CHOICE /C <span class=\"number\">123456</span> /N</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">6</span> <span class=\"keyword\">goto</span> <span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">5</span> <span class=\"keyword\">goto</span> showProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">4</span> <span class=\"keyword\">goto</span> setProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">3</span> <span class=\"keyword\">goto</span> unsetProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">2</span> <span class=\"keyword\">goto</span> setProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">1</span> <span class=\"keyword\">goto</span> showProxy</span><br><span class=\"line\"></span><br><span class=\"line\">:showProxy</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxy</span><br><span class=\"line\">:: 在两条git语句末尾 填入自己的代理端口号</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:unsetProxy</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxyPort</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p portValue=请输入端口号:</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:showProxyPort</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"built_in\">Pause</span></span><br></pre></td></tr></table></figure></li>\n<li>运行.bat文件，根据提示输入。</li>\n</ol>\n<hr>\n<h1 id=\"解决在Github上的用户验证问题\"><a href=\"#解决在Github上的用户验证问题\" class=\"headerlink\" title=\"解决在Github上的用户验证问题\"></a>解决在Github上的用户验证问题</h1><ol>\n<li>进入Github中生成生成token令牌，<code>Setting-&gt; Developer settings-&gt; Personal access tokens-&gt; Tokens(classic)-&gt; Generate new token-&gt; Generate new token(classic)</code></li>\n<li>保存该token令牌，不保存就找不到了!!</li>\n<li>在仓库地址上添加该令牌的值和一个@符号，<code>https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git</code></li>\n</ol>\n<blockquote>\n<p>第二种使用SSH的方式，参考<a href=\"https://blog.csdn.net/qq_45491549/article/details/128825216\">https://blog.csdn.net/qq_45491549/article/details/128825216</a>   </p>\n</blockquote>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"Git网络配置语句\"><a href=\"#Git网络配置语句\" class=\"headerlink\" title=\"Git网络配置语句\"></a>Git网络配置语句</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看全部配置</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看全局代理</span><br><span class=\"line\">git config --global http.proxy</span><br><span class=\"line\">git config --global https.proxy </span><br><span class=\"line\"></span><br><span class=\"line\"># 设置全局代理</span><br><span class=\"line\">git config --global http.proxy &quot;http://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\">git config --global https.proxy &quot;https://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消全局代理</span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"解决在Github上的仓库Push或Clone网络错误的问题\"><a href=\"#解决在Github上的仓库Push或Clone网络错误的问题\" class=\"headerlink\" title=\"解决在Github上的仓库Push或Clone网络错误的问题\"></a>解决在Github上的仓库Push或Clone网络错误的问题</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 对Github单独设置代理</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消代理</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br></pre></td></tr></table></figure>\n\n<p>由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  </p>\n<ol>\n<li>创建.bat文件,使用UTF-8编码保存。</li>\n<li>复制以下命令，并在更改自己的端口号 <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ <span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">set</span> portValue=<span class=\"number\">7890</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"built_in\">start</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 请输入数字</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">1</span>.显示git全部配置</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">2</span>.设置git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">3</span>.取消git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">4</span>.设置代理服务器端口号(默认<span class=\"variable\">%portValue%</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">5</span>.查看代理服务器端口号</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">6</span>.退出</span><br><span class=\"line\">CHOICE /C <span class=\"number\">123456</span> /N</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">6</span> <span class=\"keyword\">goto</span> <span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">5</span> <span class=\"keyword\">goto</span> showProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">4</span> <span class=\"keyword\">goto</span> setProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">3</span> <span class=\"keyword\">goto</span> unsetProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">2</span> <span class=\"keyword\">goto</span> setProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">1</span> <span class=\"keyword\">goto</span> showProxy</span><br><span class=\"line\"></span><br><span class=\"line\">:showProxy</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxy</span><br><span class=\"line\">:: 在两条git语句末尾 填入自己的代理端口号</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:unsetProxy</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxyPort</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p portValue=请输入端口号:</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:showProxyPort</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"built_in\">Pause</span></span><br></pre></td></tr></table></figure></li>\n<li>运行.bat文件，根据提示输入。</li>\n</ol>\n<hr>\n<h1 id=\"解决在Github上的用户验证问题\"><a href=\"#解决在Github上的用户验证问题\" class=\"headerlink\" title=\"解决在Github上的用户验证问题\"></a>解决在Github上的用户验证问题</h1><ol>\n<li>进入Github中生成生成token令牌，<code>Setting-&gt; Developer settings-&gt; Personal access tokens-&gt; Tokens(classic)-&gt; Generate new token-&gt; Generate new token(classic)</code></li>\n<li>保存该token令牌，不保存就找不到了!!</li>\n<li>在仓库地址上添加该令牌的值和一个@符号，<code>https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git</code></li>\n</ol>\n<blockquote>\n<p>第二种使用SSH的方式，参考<a href=\"https://blog.csdn.net/qq_45491549/article/details/128825216\">https://blog.csdn.net/qq_45491549/article/details/128825216</a>   </p>\n</blockquote>\n<hr>\n"},{"title":"RO上手流程梳理(1)","date":"2023-01-31T12:17:33.000Z","abstract":"不要看不要看!","message":"RO的中文拼音缩写","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# WIN_DEV环境下的流程 #\nmain场景中的SceneControlNode挂载着程序入口脚本GameEntry.cs。   \nGameEntry.cs位于Assets/Runtime/Game/目录下   \n\n## GameEntry.cs生命周期函数 ##\n\n**Start()方法**\n1. 执行``this.Start();``，初始化工作\n   1. 执行``this.initAttr();``，通过Find()获取场景中重要节点的transform\n   2. 执行``this.InitManager();``，初始化各种管理器，一部分管理器通过AddComponent()挂载，一部分直接当成员变量new()出来\n   3. 执行``loadManager.loadVersion(scb, fcb);``，加载版本文件\n      1. scb为加载成功的回调函数\n      2. fcb为加载失败的回调函数\n      3. 这里会直接调用scb\n2. 在scb中执行``this.StartGame();``\n   1. 执行``ResourcesManager.loadFile(path, scb, fcb);``\n      1. 执行``this.editorModelLoadFunctionList.Add();``，将一个匿名的加载函数Add()到List中\n\n**Update()方法**   \n1. 执行加载函数``this._loadFunction();``\n   1. 依次调用this.editorModelLoadFuncitionList链表中的函数，并清空List\n2. 更新组件，遍历m_UpdateComponentList链表的元素(双向链表，非数组)，调用元素的``OnUpdate();``\n3. 更新Socket，原理同上调用元素的``OnUpdate();``\n4. 更新Lua，调用``loop.Update();``，loop为MyLuaLooper类型的变量\n\n## 解析``this.StartGame()``中的``ResourcesManager.loadFile()`` ##\n由上可知执行ResourcesManager.loadFile()实际就是把一个匿名函数交给了一个List，然后在Update()中调用匿名函数。\n但其实在**WIN_DEV**环境下啥也没加载。   \n接着会调用``LuaManager.StartLua();``,一套下去会走执行``require(\"src/updatePackage/updataMain\")``，也就是Lua中的\n```Lua\nrequire('src/updatePackage/updataMain.lua')\n```\n\n## 解析``updataMain.lua`` ##\n1. 执行updateMain.lua的``UpdateMain();``\n2. 执行updateMain.lua的``startMainPackage();``\n3. 执行LuaManager.cs的``StartMain();``\n4. ``require('src/basePackage/mainGame.lua')``\n\n## 解析``mainGame.lua`` ##\n1. ``require(\"src/basePackage/init.lua\")``，在该.lua中主要是使用``require(\"src/basePackage/xxx\")``去加载初始化basePackage目录下的各种模块\n2. 执行mainGame.lua的``Main();``，这里是回到C#层调用的，不太理解为什么不直接在Lua层调用\n3. 执行mainGame.lua的``loadMainRes();``，在该函数内添加下载任务，好像是只下载了一些语言字符串。\n4. 任务下载成功后回调，gameManager.lua的``startGame()``\n\n## 解析gameManager.lua的``startGame()``方法 ##\n1. 使用event.lua模拟mono生命周期的Update, FixedUpdate 和 LateUpdate函数\n    1. event的UpdateBeat，可以看作成Update事件。然后``startGame()``方法会将其他``xxxManager:Update()``方法当成监听者来监听UpdateBeat()\n    2. event的FixedUpdateBeat同上\n    3. event的LateUpdateBeat同上\n2. 执行ProcedureManager.lua的``start();``\n   1. 执行procedureManager.lua的``createProcedureFsm();``，通过fsm.lua来创建 游戏流程状态机\n   2. 执行procedureManager.lua的``changeState(初始状态)``->fsm.lua的``changeState(初始状态)``，设置初始状态","source":"_posts/RO/RO上手流程梳理(1).md","raw":"---\ntitle: RO上手流程梳理(1)\ndate: 2023-01-31 20:17:33\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的中文拼音缩写\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# WIN_DEV环境下的流程 #\nmain场景中的SceneControlNode挂载着程序入口脚本GameEntry.cs。   \nGameEntry.cs位于Assets/Runtime/Game/目录下   \n\n## GameEntry.cs生命周期函数 ##\n\n**Start()方法**\n1. 执行``this.Start();``，初始化工作\n   1. 执行``this.initAttr();``，通过Find()获取场景中重要节点的transform\n   2. 执行``this.InitManager();``，初始化各种管理器，一部分管理器通过AddComponent()挂载，一部分直接当成员变量new()出来\n   3. 执行``loadManager.loadVersion(scb, fcb);``，加载版本文件\n      1. scb为加载成功的回调函数\n      2. fcb为加载失败的回调函数\n      3. 这里会直接调用scb\n2. 在scb中执行``this.StartGame();``\n   1. 执行``ResourcesManager.loadFile(path, scb, fcb);``\n      1. 执行``this.editorModelLoadFunctionList.Add();``，将一个匿名的加载函数Add()到List中\n\n**Update()方法**   \n1. 执行加载函数``this._loadFunction();``\n   1. 依次调用this.editorModelLoadFuncitionList链表中的函数，并清空List\n2. 更新组件，遍历m_UpdateComponentList链表的元素(双向链表，非数组)，调用元素的``OnUpdate();``\n3. 更新Socket，原理同上调用元素的``OnUpdate();``\n4. 更新Lua，调用``loop.Update();``，loop为MyLuaLooper类型的变量\n\n## 解析``this.StartGame()``中的``ResourcesManager.loadFile()`` ##\n由上可知执行ResourcesManager.loadFile()实际就是把一个匿名函数交给了一个List，然后在Update()中调用匿名函数。\n但其实在**WIN_DEV**环境下啥也没加载。   \n接着会调用``LuaManager.StartLua();``,一套下去会走执行``require(\"src/updatePackage/updataMain\")``，也就是Lua中的\n```Lua\nrequire('src/updatePackage/updataMain.lua')\n```\n\n## 解析``updataMain.lua`` ##\n1. 执行updateMain.lua的``UpdateMain();``\n2. 执行updateMain.lua的``startMainPackage();``\n3. 执行LuaManager.cs的``StartMain();``\n4. ``require('src/basePackage/mainGame.lua')``\n\n## 解析``mainGame.lua`` ##\n1. ``require(\"src/basePackage/init.lua\")``，在该.lua中主要是使用``require(\"src/basePackage/xxx\")``去加载初始化basePackage目录下的各种模块\n2. 执行mainGame.lua的``Main();``，这里是回到C#层调用的，不太理解为什么不直接在Lua层调用\n3. 执行mainGame.lua的``loadMainRes();``，在该函数内添加下载任务，好像是只下载了一些语言字符串。\n4. 任务下载成功后回调，gameManager.lua的``startGame()``\n\n## 解析gameManager.lua的``startGame()``方法 ##\n1. 使用event.lua模拟mono生命周期的Update, FixedUpdate 和 LateUpdate函数\n    1. event的UpdateBeat，可以看作成Update事件。然后``startGame()``方法会将其他``xxxManager:Update()``方法当成监听者来监听UpdateBeat()\n    2. event的FixedUpdateBeat同上\n    3. event的LateUpdateBeat同上\n2. 执行ProcedureManager.lua的``start();``\n   1. 执行procedureManager.lua的``createProcedureFsm();``，通过fsm.lua来创建 游戏流程状态机\n   2. 执行procedureManager.lua的``changeState(初始状态)``->fsm.lua的``changeState(初始状态)``，设置初始状态","slug":"RO/RO上手流程梳理(1)","published":1,"updated":"2023-03-31T01:40:19.398Z","_id":"clfyj4cex000bt4v68w8w37nb","comments":1,"layout":"post","photos":[],"link":"","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"c949786e3a8b6797ac2c32c724cda69b57c9febd18de9de0292b0b3290e20fd0\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的中文拼音缩写</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"WIN-DEV环境下的流程\"><a href=\"#WIN-DEV环境下的流程\" class=\"headerlink\" title=\"WIN_DEV环境下的流程\"></a>WIN_DEV环境下的流程</h1><p>main场景中的SceneControlNode挂载着程序入口脚本GameEntry.cs。<br>GameEntry.cs位于Assets&#x2F;Runtime&#x2F;Game&#x2F;目录下   </p>\n<h2 id=\"GameEntry-cs生命周期函数\"><a href=\"#GameEntry-cs生命周期函数\" class=\"headerlink\" title=\"GameEntry.cs生命周期函数\"></a>GameEntry.cs生命周期函数</h2><p><strong>Start()方法</strong></p>\n<ol>\n<li>执行<code>this.Start();</code>，初始化工作<ol>\n<li>执行<code>this.initAttr();</code>，通过Find()获取场景中重要节点的transform</li>\n<li>执行<code>this.InitManager();</code>，初始化各种管理器，一部分管理器通过AddComponent()挂载，一部分直接当成员变量new()出来</li>\n<li>执行<code>loadManager.loadVersion(scb, fcb);</code>，加载版本文件<ol>\n<li>scb为加载成功的回调函数</li>\n<li>fcb为加载失败的回调函数</li>\n<li>这里会直接调用scb</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>在scb中执行<code>this.StartGame();</code><ol>\n<li>执行<code>ResourcesManager.loadFile(path, scb, fcb);</code><ol>\n<li>执行<code>this.editorModelLoadFunctionList.Add();</code>，将一个匿名的加载函数Add()到List中</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p><strong>Update()方法</strong>   </p>\n<ol>\n<li>执行加载函数<code>this._loadFunction();</code><ol>\n<li>依次调用this.editorModelLoadFuncitionList链表中的函数，并清空List</li>\n</ol>\n</li>\n<li>更新组件，遍历m_UpdateComponentList链表的元素(双向链表，非数组)，调用元素的<code>OnUpdate();</code></li>\n<li>更新Socket，原理同上调用元素的<code>OnUpdate();</code></li>\n<li>更新Lua，调用<code>loop.Update();</code>，loop为MyLuaLooper类型的变量</li>\n</ol>\n<h2 id=\"解析this-StartGame-中的ResourcesManager-loadFile\"><a href=\"#解析this-StartGame-中的ResourcesManager-loadFile\" class=\"headerlink\" title=\"解析this.StartGame()中的ResourcesManager.loadFile()\"></a>解析<code>this.StartGame()</code>中的<code>ResourcesManager.loadFile()</code></h2><p>由上可知执行ResourcesManager.loadFile()实际就是把一个匿名函数交给了一个List，然后在Update()中调用匿名函数。<br>但其实在<strong>WIN_DEV</strong>环境下啥也没加载。<br>接着会调用<code>LuaManager.StartLua();</code>,一套下去会走执行<code>require(&quot;src/updatePackage/updataMain&quot;)</code>，也就是Lua中的</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;src/updatePackage/updataMain.lua&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解析updataMain-lua\"><a href=\"#解析updataMain-lua\" class=\"headerlink\" title=\"解析updataMain.lua\"></a>解析<code>updataMain.lua</code></h2><ol>\n<li>执行updateMain.lua的<code>UpdateMain();</code></li>\n<li>执行updateMain.lua的<code>startMainPackage();</code></li>\n<li>执行LuaManager.cs的<code>StartMain();</code></li>\n<li><code>require(&#39;src/basePackage/mainGame.lua&#39;)</code></li>\n</ol>\n<h2 id=\"解析mainGame-lua\"><a href=\"#解析mainGame-lua\" class=\"headerlink\" title=\"解析mainGame.lua\"></a>解析<code>mainGame.lua</code></h2><ol>\n<li><code>require(&quot;src/basePackage/init.lua&quot;)</code>，在该.lua中主要是使用<code>require(&quot;src/basePackage/xxx&quot;)</code>去加载初始化basePackage目录下的各种模块</li>\n<li>执行mainGame.lua的<code>Main();</code>，这里是回到C#层调用的，不太理解为什么不直接在Lua层调用</li>\n<li>执行mainGame.lua的<code>loadMainRes();</code>，在该函数内添加下载任务，好像是只下载了一些语言字符串。</li>\n<li>任务下载成功后回调，gameManager.lua的<code>startGame()</code></li>\n</ol>\n<h2 id=\"解析gameManager-lua的startGame-方法\"><a href=\"#解析gameManager-lua的startGame-方法\" class=\"headerlink\" title=\"解析gameManager.lua的startGame()方法\"></a>解析gameManager.lua的<code>startGame()</code>方法</h2><ol>\n<li>使用event.lua模拟mono生命周期的Update, FixedUpdate 和 LateUpdate函数<ol>\n<li>event的UpdateBeat，可以看作成Update事件。然后<code>startGame()</code>方法会将其他<code>xxxManager:Update()</code>方法当成监听者来监听UpdateBeat()</li>\n<li>event的FixedUpdateBeat同上</li>\n<li>event的LateUpdateBeat同上</li>\n</ol>\n</li>\n<li>执行ProcedureManager.lua的<code>start();</code><ol>\n<li>执行procedureManager.lua的<code>createProcedureFsm();</code>，通过fsm.lua来创建 游戏流程状态机</li>\n<li>执行procedureManager.lua的<code>changeState(初始状态)</code>-&gt;fsm.lua的<code>changeState(初始状态)</code>，设置初始状态</li>\n</ol>\n</li>\n</ol>\n","encrypt":true},{"title":"RO上手流程梳理(2)","date":"2023-02-01T09:42:45.000Z","abstract":"不要看不要看!","message":"RO的中文拼音缩写","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# RO中的Lua面向对象 #\n目录位置 ``src\\basePackage\\core\\luaCore.lua``\n\n## _baseClass ##\n```Lua\nlocal _baseClass = {}\n_bassClass.__index = _baseClass\n\nfunction _bassClass:new(...)\n    local t = {}\n    setmetatable(t, self)\n\n    -- 构造函数会在class定义的时候就执行\n    if t.ctor then\n        t:ctor(...)\n    end\n\n    return t\nend\n\n-- 跟 new(...) 完全相同\nfunction _baseClass:create(...) \n    ...\nend\n```\n\n## class(...) ##\n```Lua\n-- 定义一个class, 参数表示基类\nfunction class(...)\n    local t = {}    -- 用于返回这个 class\n    t.__index = t\n    local supers = {...}    -- 将 ... 参数构造成索引从1开始的表, 表示基类数组\n\n    -- 将 ...表示的基类, 放进 t.__supers表里\n    -- 并将 ...里第一个类作为 t的基类\n    for _, super in ipairs(supers) do\n        t.__supers = t.__supers or {} -- 如果t.__supers是 nil, 则让他为 {}, 否则不变\n        t.__supers[#t.__supers + 1] = super -- 将基类添加到 __supers里\n\n        -- 将 ...中第一个类作为 t的基类\n        if not t.super then\n            t.super = super\n        end\n    end\n\n    -- 第一个条件: 如果 ...没有东西\n    -- 第二个条件: 无法理解为什么还要判断\n    -- 总得来说就是这个 class 没有基类的话\n    if not t.__supers or #t.__supers == 0 then\n        setmetatable(t, _baseClass)\n    else\n    -- 这个 class 有基类的话\n    -- 这里元表的__index的元方法是，从第一个基类开始，遍历所有基类去看有无这个key\n        setmetatable(t,{\n            __index = function(_, key)\n                local supers = t.__supers   -- 拿出t的全部基类\n                for i = 1, #supers do\n                    local super = supers[i]\n                    if super[key] then\n                        return super[key]\n                    end\n                end\n            end\n        })\n\n        -- 是否t以及t的基类是否有new()函数，没有则定义一个，同_bassClass中的new()一样\n        if t.new == nil then\n            t.new = function(myself, ...)\n                local ins = {}\n                setmetatable(ins, t)\n                if ins.ctor then\n                    ins:ctor(...)\n                end\n                return ins\n            end\n        end\n    end\n    return t\nend\n```\nclass(...)中的t的结构    \nt.__index = 自己  \nt.__supers = {表示全部的基类}   \n{__index = 从基类中拿一个 }当有继承时的元表","source":"_posts/RO/RO上手流程梳理(2).md","raw":"---\ntitle: RO上手流程梳理(2)\ndate: 2023-02-01 17:42:45\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的中文拼音缩写\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# RO中的Lua面向对象 #\n目录位置 ``src\\basePackage\\core\\luaCore.lua``\n\n## _baseClass ##\n```Lua\nlocal _baseClass = {}\n_bassClass.__index = _baseClass\n\nfunction _bassClass:new(...)\n    local t = {}\n    setmetatable(t, self)\n\n    -- 构造函数会在class定义的时候就执行\n    if t.ctor then\n        t:ctor(...)\n    end\n\n    return t\nend\n\n-- 跟 new(...) 完全相同\nfunction _baseClass:create(...) \n    ...\nend\n```\n\n## class(...) ##\n```Lua\n-- 定义一个class, 参数表示基类\nfunction class(...)\n    local t = {}    -- 用于返回这个 class\n    t.__index = t\n    local supers = {...}    -- 将 ... 参数构造成索引从1开始的表, 表示基类数组\n\n    -- 将 ...表示的基类, 放进 t.__supers表里\n    -- 并将 ...里第一个类作为 t的基类\n    for _, super in ipairs(supers) do\n        t.__supers = t.__supers or {} -- 如果t.__supers是 nil, 则让他为 {}, 否则不变\n        t.__supers[#t.__supers + 1] = super -- 将基类添加到 __supers里\n\n        -- 将 ...中第一个类作为 t的基类\n        if not t.super then\n            t.super = super\n        end\n    end\n\n    -- 第一个条件: 如果 ...没有东西\n    -- 第二个条件: 无法理解为什么还要判断\n    -- 总得来说就是这个 class 没有基类的话\n    if not t.__supers or #t.__supers == 0 then\n        setmetatable(t, _baseClass)\n    else\n    -- 这个 class 有基类的话\n    -- 这里元表的__index的元方法是，从第一个基类开始，遍历所有基类去看有无这个key\n        setmetatable(t,{\n            __index = function(_, key)\n                local supers = t.__supers   -- 拿出t的全部基类\n                for i = 1, #supers do\n                    local super = supers[i]\n                    if super[key] then\n                        return super[key]\n                    end\n                end\n            end\n        })\n\n        -- 是否t以及t的基类是否有new()函数，没有则定义一个，同_bassClass中的new()一样\n        if t.new == nil then\n            t.new = function(myself, ...)\n                local ins = {}\n                setmetatable(ins, t)\n                if ins.ctor then\n                    ins:ctor(...)\n                end\n                return ins\n            end\n        end\n    end\n    return t\nend\n```\nclass(...)中的t的结构    \nt.__index = 自己  \nt.__supers = {表示全部的基类}   \n{__index = 从基类中拿一个 }当有继承时的元表","slug":"RO/RO上手流程梳理(2)","published":1,"updated":"2023-03-31T01:40:17.748Z","_id":"clfyj4cey000ct4v67evj5wq3","comments":1,"layout":"post","photos":[],"link":"","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"fba0a3642659959f913fabd4f1d94bd499e57bfcceaf991b315c816f57c94053\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的中文拼音缩写</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"RO中的Lua面向对象\"><a href=\"#RO中的Lua面向对象\" class=\"headerlink\" title=\"RO中的Lua面向对象\"></a>RO中的Lua面向对象</h1><p>目录位置 <code>src\\basePackage\\core\\luaCore.lua</code></p>\n<h2 id=\"baseClass\"><a href=\"#baseClass\" class=\"headerlink\" title=\"_baseClass\"></a>_baseClass</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> _baseClass = &#123;&#125;</span><br><span class=\"line\">_bassClass.<span class=\"built_in\">__index</span> = _baseClass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_bassClass:new</span><span class=\"params\">(...)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = &#123;&#125;</span><br><span class=\"line\">    <span class=\"built_in\">setmetatable</span>(t, <span class=\"built_in\">self</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- 构造函数会在class定义的时候就执行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> t.ctor <span class=\"keyword\">then</span></span><br><span class=\"line\">        t:ctor(...)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 跟 new(...) 完全相同</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_baseClass:create</span><span class=\"params\">(...)</span></span> </span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"class-…\"><a href=\"#class-…\" class=\"headerlink\" title=\"class(…)\"></a>class(…)</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 定义一个class, 参数表示基类</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">class</span><span class=\"params\">(...)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = &#123;&#125;    <span class=\"comment\">-- 用于返回这个 class</span></span><br><span class=\"line\">    t.<span class=\"built_in\">__index</span> = t</span><br><span class=\"line\">    <span class=\"keyword\">local</span> supers = &#123;...&#125;    <span class=\"comment\">-- 将 ... 参数构造成索引从1开始的表, 表示基类数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- 将 ...表示的基类, 放进 t.__supers表里</span></span><br><span class=\"line\">    <span class=\"comment\">-- 并将 ...里第一个类作为 t的基类</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _, super <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(supers) <span class=\"keyword\">do</span></span><br><span class=\"line\">        t.__supers = t.__supers <span class=\"keyword\">or</span> &#123;&#125; <span class=\"comment\">-- 如果t.__supers是 nil, 则让他为 &#123;&#125;, 否则不变</span></span><br><span class=\"line\">        t.__supers[#t.__supers + <span class=\"number\">1</span>] = super <span class=\"comment\">-- 将基类添加到 __supers里</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">-- 将 ...中第一个类作为 t的基类</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> t.super <span class=\"keyword\">then</span></span><br><span class=\"line\">            t.super = super</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- 第一个条件: 如果 ...没有东西</span></span><br><span class=\"line\">    <span class=\"comment\">-- 第二个条件: 无法理解为什么还要判断</span></span><br><span class=\"line\">    <span class=\"comment\">-- 总得来说就是这个 class 没有基类的话</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> t.__supers <span class=\"keyword\">or</span> #t.__supers == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(t, _baseClass)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"comment\">-- 这个 class 有基类的话</span></span><br><span class=\"line\">    <span class=\"comment\">-- 这里元表的__index的元方法是，从第一个基类开始，遍历所有基类去看有无这个key</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(t,&#123;</span><br><span class=\"line\">            <span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(_, key)</span></span></span><br><span class=\"line\">                <span class=\"keyword\">local</span> supers = t.__supers   <span class=\"comment\">-- 拿出t的全部基类</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, #supers <span class=\"keyword\">do</span></span><br><span class=\"line\">                    <span class=\"keyword\">local</span> super = supers[i]</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> super[key] <span class=\"keyword\">then</span></span><br><span class=\"line\">                        <span class=\"keyword\">return</span> super[key]</span><br><span class=\"line\">                    <span class=\"keyword\">end</span></span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">-- 是否t以及t的基类是否有new()函数，没有则定义一个，同_bassClass中的new()一样</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> t.new == <span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">            t.new = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(myself, ...)</span></span></span><br><span class=\"line\">                <span class=\"keyword\">local</span> ins = &#123;&#125;</span><br><span class=\"line\">                <span class=\"built_in\">setmetatable</span>(ins, t)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ins.ctor <span class=\"keyword\">then</span></span><br><span class=\"line\">                    ins:ctor(...)</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> ins</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>class(…)中的t的结构<br>t.__index &#x3D; 自己<br>t.__supers &#x3D; {表示全部的基类}<br>{__index &#x3D; 从基类中拿一个 }当有继承时的元表</p>\n","encrypt":true},{"title":"RO上手流程梳理(3)","date":"2023-02-01T11:40:38.000Z","abstract":"不要看不要看!","message":"RO的中文拼音缩写","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# WIN_DEV环境下的流程 #\n以下内容为梳理**fsm**、**procedureManager**和**procedureXXX**的关系，这三者构建成了一个类似有限状态机的模式.   \n**fsm**的目录为 **src\\basePackage\\core\\fsm**   \n**procedureManager**的目录为 **src\\basePackage\\manager**   \n**procedureXXX**的目录为 **src\\basePackage\\procedure**\n\n## FsmBaseState 和 ProcedureXXX ##\n``FsmBaseState``可以当做成状态基类   \n``ProcedureXXX``则是具体的状态类   \n1. ``FsmBaseState``状态基类的方法和变量\n   1. 变量\n      1. ``stateType``表示状态类型\n      2. ``fsm``表示状态机\n   2. 方法\n      1. ``ctor()``构造函数，会在new()的时候执行\n      2. ``init(stateType, fsm)``初始化函数，然后执行onInit()\n      3. ``canChageFrom(lastState)``判断能否转换状态，相同状态不能转换\n      4. ``onInit()``会在init()函数中调用\n      5. ``onEnter(lastState)``进入该状态时调用\n      6. ``onLeave(lastState)``退出该状态时调用\n      7. ``onUpdate(dt, unScaledDt)``每帧调用\n      8. ``onDestroy()``销毁该状态时调用\n2. ``ProcedureXXX``具体状态类,不难理解\n\n## Fsm ##\n\n\n","source":"_posts/RO/RO上手流程梳理(3).md","raw":"---\ntitle: RO上手流程梳理(3)\ndate: 2023-02-01 19:40:38\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的中文拼音缩写\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# WIN_DEV环境下的流程 #\n以下内容为梳理**fsm**、**procedureManager**和**procedureXXX**的关系，这三者构建成了一个类似有限状态机的模式.   \n**fsm**的目录为 **src\\basePackage\\core\\fsm**   \n**procedureManager**的目录为 **src\\basePackage\\manager**   \n**procedureXXX**的目录为 **src\\basePackage\\procedure**\n\n## FsmBaseState 和 ProcedureXXX ##\n``FsmBaseState``可以当做成状态基类   \n``ProcedureXXX``则是具体的状态类   \n1. ``FsmBaseState``状态基类的方法和变量\n   1. 变量\n      1. ``stateType``表示状态类型\n      2. ``fsm``表示状态机\n   2. 方法\n      1. ``ctor()``构造函数，会在new()的时候执行\n      2. ``init(stateType, fsm)``初始化函数，然后执行onInit()\n      3. ``canChageFrom(lastState)``判断能否转换状态，相同状态不能转换\n      4. ``onInit()``会在init()函数中调用\n      5. ``onEnter(lastState)``进入该状态时调用\n      6. ``onLeave(lastState)``退出该状态时调用\n      7. ``onUpdate(dt, unScaledDt)``每帧调用\n      8. ``onDestroy()``销毁该状态时调用\n2. ``ProcedureXXX``具体状态类,不难理解\n\n## Fsm ##\n\n\n","slug":"RO/RO上手流程梳理(3)","published":1,"updated":"2023-03-31T01:40:21.719Z","_id":"clfyj4cez000gt4v66wbp6rww","comments":1,"layout":"post","photos":[],"link":"","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"faee47a70c780e1ab43eb4ac6eacf25518730fe43f39544504ea8c6ff5a52468\">2a77787813ba94ce69ce1ff3adf6f9b31b1e72368cb5379f865ca6338ab9abb823a9fe403549e517d53bbcfa06da5ac54c7d9cf9c244f247899f660512b770c4e2bb19a029ded54149ada4ab8551fad43825be23f6cf8f4f2495509aea593b32d5d7f1c2e135c05f0810f3f10fed9c87f9a257d0fffba4f14bf881f0ed60e19e06a9a7426e246f6166bc538eb7b0b6bca77747abe82b8875028b2128f6142e7a87422e9f6df842708202d5a6cd86d2d3667415ed41f59f34b4bc9cac6098ee0f7980124b9090afb47ee268f6befa53f6da70fde0296762eefa8c8cdf41d403dd88c5dff0cbc159e3426d283a7d90f2fac414a8c6c3a39d8344fb9da53120c785643d222096416740936812c3c21ce25ab5eeb1d9dbef68bfff1cbdf3c5689ff48bf97e5b32dcb1cb238fdbc82e7fa47a07103586a9bf60c57a031e62a38051c5e2e47527759c7329fc1cc75bee0a17292df1fd8d764c7d61d484da6d2f8b3d99f66fdffc4ccacecb5c8969ca3c2b7ca2887ced63b39fb3181ec86dd5ee6d2f9134d8a0077281340c0aebf32b2e9de8f17b8dcde22657555cd8bc00539e7715b32525a8d6e0b46e41065c1d8ebf17636082e0e9052d074fa343e7f7d8476e00c93315244e4b042033d750490830850341bd3560fa669341c16a404e8d5a51fdcce9261c46c643be8b7d2c2b53925d2aa4fc1bfa2f37734f44e085b58eed9f13b16fd0ff63439d8fe01e93966aa5e0b32d660d6110486b9687965befb661e99fbe5a8dc13c91a195ab345274c31a7ded447dc8ecc6c6520ec1307e43943c50d5770ab59c7552b1d6c3512d319df4d6568b6b2879d2e3a2f70403a1f9372bcbbc4783a1fb0f58bebb6b7d50421eef2533de6e64fa5a7e2289b0dc9d1c87e7b65aaf3fd8768eb8997f2c58f02c6425610c0689e4f3566c8df173a6d19e6b295c24fbe9a1062f5cf9fce6fd1e07cf1839f4d5dddf8e939a21d6e58e4d41f160143e8921008f2af5b357649adfcfb1b2794d60237442a84d65fd5be4c593356e6005b594a86497b4fe86fa47a57904b047e8cccf68f5759e0799765b3f85a448845c6d956eea472b2aa417607dc253b6e037be75363e15fb0e0c156a7c9cc9142b7fdf758b004ef5788418dfde26dcabdcfd7a9f24f66df53ef1f6a44d35795ac23bc6177978c9ce4f9ea1196d642d10002f97a44470955c2656ef35efba4329e6b9d98d75f3788953d6756007f1b4b714f78359f3091d3b270dd688a473e15c61db67d141bdbc291ad65095f0e2af5af52a5b077ada758313c78435f95f82cccbc25507e8a7304f13faa33e8c78c49d7762bf06ea20fc842627dc6628cd63f79c47e06eea2387888295b931104b0ecdc040ae8e32c292cae7d36afe7588f0f2229a3c0d81dc7e3984c35b1c60a07e56128cb24d773a009f8f86fcc42862268cd53dfc28b6ea1157932e752f25b4f3fdf8bd0e67bf9f22deeef440880e223017b5fd1ee4d4b4feb96523d640b6d1cd1f1995abd9321810c6168b27e30de632ef2118a953f13152db1f7824db886720560b57c600f3a372443e8d05b2d5ff099b24d016c64350c13f18ba03c2d6d2b3091811f39bd99bccb9ebcc603f3e65b3ffdb83a50ab25e6e2cd9d95db7ce8672f609bd0cbbb0e84730664987f039f74ce62256b2d08d56a414d93ade64c73df6c99bcdfa0dbac9c45b00e8edb009937e977c100c229f7134797d6db60e646bc1c91b145c9597de81ecfa2a6731b618e0c5474657d50bc407b5b96f8f4eb2b060a5461ff7d007c12db5833a1e49c129133652a45504f2c1ea776f949c7954e3df5d130071b64ce13307a4c5326c15eec2007544bf478343d941d6c8783e8c7aa1bcf5922617983f6479864849240046d740524d15464e4f3295c92d7f375ee405939a2c30bc41df27d6aaf7eef69e29fc4a1d8290e33d164338dc00af4f9c8b57bfaf8ee649fbd3bedd96ce11f21dbc53210c339bac082c324e46f00c93d5bc3406cdd1f03f4415a95ddf2b46bec718e3bc3e5d07d6b1daec587dabf7e88ab87ff272341ab6055f1769bef8a8439620d8e60d2e7ce4f120a5aad09734f163e3e790415436d34ba9c52d13c7acd4546ca82c309f39520f6fa101a28db8de25988744a11072a0517dc222a5728bea90364819047dc8f0486ff31188f4ce3a5d3e43585295f64e5b31be98884f4cbec94400610ec2bca7dc24ad196dcb814b48909e569774014b832d168341d0492dbf8f668e3f39d9630216ac931ba852c189fcbadbffe8ce63e6f676e468b72ed5994a134737b0545476878aeaeee1b9915206a164f413c87dd1df5856d110a4ad4df66501828046abe52eee90fb0642bc3f9b4c4fc3f10070bb256c879ce390c4b941840eb5b885545d08b98adeaf1dfacd81dc14dd79603952c8dea916971adb8339dbc7fd8ccb032612f57fc34dc2db3bda23b25f630a1fb01ecdccaf870771d24aca2047488fa78946cefb1100a874837ed9049cc87570d2cd7bd392f62c80e5060986fbe261c7f8e4698eb45cc52240a5fb71ea113ea4b61eb10a6f823e2d97fbc393d7276b15af0b7cdf504e61b3527a3a995fc5942c55f1c52db5c82dd78555f5367149dd</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的中文拼音缩写</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"WIN-DEV环境下的流程\"><a href=\"#WIN-DEV环境下的流程\" class=\"headerlink\" title=\"WIN_DEV环境下的流程\"></a>WIN_DEV环境下的流程</h1><p>以下内容为梳理<strong>fsm</strong>、<strong>procedureManager</strong>和<strong>procedureXXX</strong>的关系，这三者构建成了一个类似有限状态机的模式.<br><strong>fsm</strong>的目录为 <strong>src\\basePackage\\core\\fsm</strong><br><strong>procedureManager</strong>的目录为 <strong>src\\basePackage\\manager</strong><br><strong>procedureXXX</strong>的目录为 <strong>src\\basePackage\\procedure</strong></p>\n<h2 id=\"FsmBaseState-和-ProcedureXXX\"><a href=\"#FsmBaseState-和-ProcedureXXX\" class=\"headerlink\" title=\"FsmBaseState 和 ProcedureXXX\"></a>FsmBaseState 和 ProcedureXXX</h2><p><code>FsmBaseState</code>可以当做成状态基类<br><code>ProcedureXXX</code>则是具体的状态类   </p>\n<ol>\n<li><code>FsmBaseState</code>状态基类的方法和变量<ol>\n<li>变量<ol>\n<li><code>stateType</code>表示状态类型</li>\n<li><code>fsm</code>表示状态机</li>\n</ol>\n</li>\n<li>方法<ol>\n<li><code>ctor()</code>构造函数，会在new()的时候执行</li>\n<li><code>init(stateType, fsm)</code>初始化函数，然后执行onInit()</li>\n<li><code>canChageFrom(lastState)</code>判断能否转换状态，相同状态不能转换</li>\n<li><code>onInit()</code>会在init()函数中调用</li>\n<li><code>onEnter(lastState)</code>进入该状态时调用</li>\n<li><code>onLeave(lastState)</code>退出该状态时调用</li>\n<li><code>onUpdate(dt, unScaledDt)</code>每帧调用</li>\n<li><code>onDestroy()</code>销毁该状态时调用</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><code>ProcedureXXX</code>具体状态类,不难理解</li>\n</ol>\n<h2 id=\"Fsm\"><a href=\"#Fsm\" class=\"headerlink\" title=\"Fsm\"></a>Fsm</h2>","encrypt":true},{"title":"RO上手流程梳理(4)","date":"2023-02-21T08:57:38.000Z","abstract":"不要看不要看!","message":"RO的中文拼音缩写","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# 项目笔记 #\n","source":"_posts/RO/RO上手流程梳理(4).md","raw":"---\ntitle: RO上手流程梳理(4)\ndate: 2023-02-21 16:57:38\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的中文拼音缩写\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# 项目笔记 #\n","slug":"RO/RO上手流程梳理(4)","published":1,"updated":"2023-04-01T17:56:28.123Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfyj4cf0000it4v6dg7vbi6b","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"f97f30f96fc002c9cc0a2e62ce8a8c32ea8de2a2ede3e1c15d3243074e766a7e\">2a77787813ba94ce69ce1ff3adf6f9b31b1e72368cb5379f865ca6338ab9abb889b74bff2693d8205daae0babf27690bbd949b7fe6f98611ce07e3e046c2a9e273de8464d0fa03cf68fd18ae2d5540e09764efad34662cec3d7796ecf2f7b36437584f26e3f3f88429e89bd2c79b6624c83c5d0e86f1e3013652b9face4358cd1396aba512c4ad796af9efddaeec3cea</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的中文拼音缩写</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"项目笔记\"><a href=\"#项目笔记\" class=\"headerlink\" title=\"项目笔记\"></a>项目笔记</h1>","encrypt":true},{"title":"RO笔记","date":"2023-03-30T06:30:47.000Z","abstract":"不要看不要看!","message":"RO的中文拼音缩写","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n# UI #\n## BaseGameNode类 底层基类 ##\n\n### 初始化 ###\n```Lua\n--[[\n    直接在Scene上创建一个Prefab(WIN_DEV下直接同步加载原始资源)\n    然后调用initGameObject()将这个GameObject绑定\n    -@return GameObject\n]]\nBaseGameNode:initPrefabGameObject(path)\n\n\n--[[\n    直接在Scene上创建一个空的GameObject\n    然后调用initGameObject()将这个GameObject绑定\n]]\nBaseGameNode:initEmptyGameObject(name)\n\n\n--[[\n    绑定transform和gameObject到\n    self.pTrasnform和self.pGameObject上\n    -@param obj GameObject\n]]\nBaseGameNode:initGameObject(obj)\n```\n\n### 子父节点 ###  \n```Lua\n--[[\n    第1种情况:\n        -@param nodeChild nil\n        -@param transformChild Transform\n        作用: self.pTransform当作transformChild的父节点,\n                子节点的世界坐标保持不变.\n    第2种情况:\n        -@param nodeChild BaseGameNode\n        -@param transformChild nil\n        作用: self.pTransform当做nodeChild.pTransform的父节点,\n                子节点的世界坐标保持不变,\n                并且self.children会加入nodeChild,\n                nodeChild.parent设置成self\n]]\nBaseGameNode:addChild(nodeChild, transformChild)\n\n\n--[[\n    第1种情况:\n        -@param nodeParent nil\n        -@param transformParent Transform\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变.\n    第2种情况:\n        -@param nodeParent BaseGameNode\n        -@param transformParent Transform | nil\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变,\n                并且self.parent = nodeParent,\n                nodeParent.children会加入self.\n                注意当transformParent为nil时,\n                nodeParent.pTransform会作为self.pTransform的父节点.\n]]\nBaseGameNode.setParent(nodeParent, transformParent)\n\n\n--[[\n    通过cleanup()销毁self.children中所有的BaseGameNode\n]]\nBaseGameNode:removeAllChildren()\n\n\n--[[\n    通过cleanup()销毁self.children中的某个BaseGameNode\n    -@param cleanup boolean 当cleanup为false时,\n        不会使用cleanup()销毁该节点, 只会将该节点从self.children中移除.\n]]\nBaseGameNode:removeChild(child, cleanup)\n\n\n--[[\n    第1种情况:\n        -@param cleanup true\n        作用: 通过cleanup()销毁自己\n    第2中情况:\n        -@param cleanup false\n        作用: 不会是用cleanup()销毁自己, 但会置空self.parent = nil\n]]\nBaseGameNode:removeFromParent(cleanup)\n```\n\n### 销毁 ###\n```Lua\n--[[\n    销毁self.pGameObject  \n    流程:\n        调用回调onCleanUp()\n        移除update事件,\n        移除Action事件,\n        移除监听message事件(只能移除通过self的on监听的事件, 通过messageManager的on监听的事件不行),\n        杀死DOTween动画,\n        销毁GameObject(DestroyImmediate()方法销毁),\n        将所有属性 = nil置空\n]]\nBaseGameNode:cleanup()\nBaseGameNode:onCleanUp()    -- 默认空, 自行重写\n```\n\n### 状态 ###\n```Lua\n--[[\n    设置self.pGameObject的active\n    执行完毕后回调onActiveChange()\n]]\nBaseGameNode:setActive(ac)\nBaseGameNode:onActiveChange(bValue) -- 默认空, 自行重写\n```\n\n### Update功能 ###\n```Lua\n--[[\n    通过EventManager开启Update事件, 每帧调用update()\n]]\nBaseGameNode:triggerUpdate()\nBaseGameNode:update()   -- 默认空(声明都没声明), 自行重写\n\n\n--[[\n    同上\n]]\nBaseGameNode:triggerLateUpdate()\nBaseGameNode:lateUpdate()\n\n\n--[[\n    同上\n]]\nBaseGameNode:triggerFixedUpdate()\nBaseGameNode:fixedUpdate()\n\n\n-- 关闭update 需使用EventManager:removeXXX()\n```\n\n### Action功能 ###\n```Lua\n--[[\n    -@param action Action\n    通过EventManager执行action(其实就是调用action的逻辑函数)\n]]\nBaseGameNode:runAction(action)\n\n\n--[[\n    -@param action Action\n    通过EventManager停止action\n]]\nBaseGameNode:stopAction(action)\n\n\n--[[\n    通过EventManager听说该节点的所有action\n]]\nBaseGameNode:stopAllAction()\n```\n\n### 监听 消息/事件 功能 ###\n```Lua\n--[[\n    添加事件监听, 使用此方法添加的监听不用在节点销毁前手动移除\n    -@param key number 需要在MessageManager定义消息id\n    -@param fun fun(...):nil 回调函数\n    -@param obj BaseGameNode 参数fun的self调用者\n]]\nBaseGameNode:addMessageListener(key, fun, obj)\n\n\n--[[\n    移除事件监听, 参数同上\n]]\nBaseGameNode:removeMessageListener(key, fun, obj)\n\n\n--[[\n    移除所有事件监听, 即使监听obj参数不是自己\n]]\nBaseGameNode:removeAllMessageListener()\n\n\n--[[\n    添加自身事件监听, 使用此方法添加的监听不用在节点销毁前手动移除,\n    但是事件只适用于与在自己类内部使用, 也就是说事件id应该定义在自己类的文件里\n    -@param key number 需要在self内定义消息id\n    -@param fun fun():nil 回调函数\n    -@param BaseGameNode 参数fun的self调用者\n]]\nBaseGameNode:on(key, fun, obj)\n\n\n--[[\n    移除通过BaseGameNode:on()注册的事件, 参数同,\n    如果fun为nil但obj不为nil的话, 则移除所有该key的事件.\n]]\nBaseGameNode:off(key, fun, obj)\n\n\n--[[\n    触发通过BaseGameNode:on()注册的key事件\n    -@param ... any 回调函数的参数\n]]\nBaseGameNode:send(key, ...)\n\n--两种事件形式的区别是: 第一种的事件是所有类都可以监听的, 并且又MessageManager触发.\n--  第二种事件是只有self自己可以监听的, 并且由自身self触发.\n```\n\n\n## BaseUbiUI ##\ndsad\n\n# 网络 #\nasdasd","source":"_posts/RO/RO笔记.md","raw":"---\ntitle: RO笔记\ndate: 2023-03-30 14:30:47\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的中文拼音缩写\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n# UI #\n## BaseGameNode类 底层基类 ##\n\n### 初始化 ###\n```Lua\n--[[\n    直接在Scene上创建一个Prefab(WIN_DEV下直接同步加载原始资源)\n    然后调用initGameObject()将这个GameObject绑定\n    -@return GameObject\n]]\nBaseGameNode:initPrefabGameObject(path)\n\n\n--[[\n    直接在Scene上创建一个空的GameObject\n    然后调用initGameObject()将这个GameObject绑定\n]]\nBaseGameNode:initEmptyGameObject(name)\n\n\n--[[\n    绑定transform和gameObject到\n    self.pTrasnform和self.pGameObject上\n    -@param obj GameObject\n]]\nBaseGameNode:initGameObject(obj)\n```\n\n### 子父节点 ###  \n```Lua\n--[[\n    第1种情况:\n        -@param nodeChild nil\n        -@param transformChild Transform\n        作用: self.pTransform当作transformChild的父节点,\n                子节点的世界坐标保持不变.\n    第2种情况:\n        -@param nodeChild BaseGameNode\n        -@param transformChild nil\n        作用: self.pTransform当做nodeChild.pTransform的父节点,\n                子节点的世界坐标保持不变,\n                并且self.children会加入nodeChild,\n                nodeChild.parent设置成self\n]]\nBaseGameNode:addChild(nodeChild, transformChild)\n\n\n--[[\n    第1种情况:\n        -@param nodeParent nil\n        -@param transformParent Transform\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变.\n    第2种情况:\n        -@param nodeParent BaseGameNode\n        -@param transformParent Transform | nil\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变,\n                并且self.parent = nodeParent,\n                nodeParent.children会加入self.\n                注意当transformParent为nil时,\n                nodeParent.pTransform会作为self.pTransform的父节点.\n]]\nBaseGameNode.setParent(nodeParent, transformParent)\n\n\n--[[\n    通过cleanup()销毁self.children中所有的BaseGameNode\n]]\nBaseGameNode:removeAllChildren()\n\n\n--[[\n    通过cleanup()销毁self.children中的某个BaseGameNode\n    -@param cleanup boolean 当cleanup为false时,\n        不会使用cleanup()销毁该节点, 只会将该节点从self.children中移除.\n]]\nBaseGameNode:removeChild(child, cleanup)\n\n\n--[[\n    第1种情况:\n        -@param cleanup true\n        作用: 通过cleanup()销毁自己\n    第2中情况:\n        -@param cleanup false\n        作用: 不会是用cleanup()销毁自己, 但会置空self.parent = nil\n]]\nBaseGameNode:removeFromParent(cleanup)\n```\n\n### 销毁 ###\n```Lua\n--[[\n    销毁self.pGameObject  \n    流程:\n        调用回调onCleanUp()\n        移除update事件,\n        移除Action事件,\n        移除监听message事件(只能移除通过self的on监听的事件, 通过messageManager的on监听的事件不行),\n        杀死DOTween动画,\n        销毁GameObject(DestroyImmediate()方法销毁),\n        将所有属性 = nil置空\n]]\nBaseGameNode:cleanup()\nBaseGameNode:onCleanUp()    -- 默认空, 自行重写\n```\n\n### 状态 ###\n```Lua\n--[[\n    设置self.pGameObject的active\n    执行完毕后回调onActiveChange()\n]]\nBaseGameNode:setActive(ac)\nBaseGameNode:onActiveChange(bValue) -- 默认空, 自行重写\n```\n\n### Update功能 ###\n```Lua\n--[[\n    通过EventManager开启Update事件, 每帧调用update()\n]]\nBaseGameNode:triggerUpdate()\nBaseGameNode:update()   -- 默认空(声明都没声明), 自行重写\n\n\n--[[\n    同上\n]]\nBaseGameNode:triggerLateUpdate()\nBaseGameNode:lateUpdate()\n\n\n--[[\n    同上\n]]\nBaseGameNode:triggerFixedUpdate()\nBaseGameNode:fixedUpdate()\n\n\n-- 关闭update 需使用EventManager:removeXXX()\n```\n\n### Action功能 ###\n```Lua\n--[[\n    -@param action Action\n    通过EventManager执行action(其实就是调用action的逻辑函数)\n]]\nBaseGameNode:runAction(action)\n\n\n--[[\n    -@param action Action\n    通过EventManager停止action\n]]\nBaseGameNode:stopAction(action)\n\n\n--[[\n    通过EventManager听说该节点的所有action\n]]\nBaseGameNode:stopAllAction()\n```\n\n### 监听 消息/事件 功能 ###\n```Lua\n--[[\n    添加事件监听, 使用此方法添加的监听不用在节点销毁前手动移除\n    -@param key number 需要在MessageManager定义消息id\n    -@param fun fun(...):nil 回调函数\n    -@param obj BaseGameNode 参数fun的self调用者\n]]\nBaseGameNode:addMessageListener(key, fun, obj)\n\n\n--[[\n    移除事件监听, 参数同上\n]]\nBaseGameNode:removeMessageListener(key, fun, obj)\n\n\n--[[\n    移除所有事件监听, 即使监听obj参数不是自己\n]]\nBaseGameNode:removeAllMessageListener()\n\n\n--[[\n    添加自身事件监听, 使用此方法添加的监听不用在节点销毁前手动移除,\n    但是事件只适用于与在自己类内部使用, 也就是说事件id应该定义在自己类的文件里\n    -@param key number 需要在self内定义消息id\n    -@param fun fun():nil 回调函数\n    -@param BaseGameNode 参数fun的self调用者\n]]\nBaseGameNode:on(key, fun, obj)\n\n\n--[[\n    移除通过BaseGameNode:on()注册的事件, 参数同,\n    如果fun为nil但obj不为nil的话, 则移除所有该key的事件.\n]]\nBaseGameNode:off(key, fun, obj)\n\n\n--[[\n    触发通过BaseGameNode:on()注册的key事件\n    -@param ... any 回调函数的参数\n]]\nBaseGameNode:send(key, ...)\n\n--两种事件形式的区别是: 第一种的事件是所有类都可以监听的, 并且又MessageManager触发.\n--  第二种事件是只有self自己可以监听的, 并且由自身self触发.\n```\n\n\n## BaseUbiUI ##\ndsad\n\n# 网络 #\nasdasd","slug":"RO/RO笔记","published":1,"updated":"2023-03-31T10:25:46.116Z","_id":"clfyj4cf2000mt4v6c3ys8r55","comments":1,"layout":"post","photos":[],"link":"","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"4eeb20506a9d77e22e92112e8a9e1f551791b437d17c37698076370b4bf31454\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的中文拼音缩写</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<h1 id=\"UI\"><a href=\"#UI\" class=\"headerlink\" title=\"UI\"></a>UI</h1><h2 id=\"BaseGameNode类-底层基类\"><a href=\"#BaseGameNode类-底层基类\" class=\"headerlink\" title=\"BaseGameNode类 底层基类\"></a>BaseGameNode类 底层基类</h2><h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    直接在Scene上创建一个Prefab(WIN_DEV下直接同步加载原始资源)</span></span><br><span class=\"line\"><span class=\"comment\">    然后调用initGameObject()将这个GameObject绑定</span></span><br><span class=\"line\"><span class=\"comment\">    -@return GameObject</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:initPrefabGameObject(<span class=\"built_in\">path</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    直接在Scene上创建一个空的GameObject</span></span><br><span class=\"line\"><span class=\"comment\">    然后调用initGameObject()将这个GameObject绑定</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:initEmptyGameObject(name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    绑定transform和gameObject到</span></span><br><span class=\"line\"><span class=\"comment\">    self.pTrasnform和self.pGameObject上</span></span><br><span class=\"line\"><span class=\"comment\">    -@param obj GameObject</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:initGameObject(obj)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"子父节点\"><a href=\"#子父节点\" class=\"headerlink\" title=\"子父节点\"></a>子父节点</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    第1种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeChild nil</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformChild Transform</span></span><br><span class=\"line\"><span class=\"comment\">        作用: self.pTransform当作transformChild的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                子节点的世界坐标保持不变.</span></span><br><span class=\"line\"><span class=\"comment\">    第2种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeChild BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformChild nil</span></span><br><span class=\"line\"><span class=\"comment\">        作用: self.pTransform当做nodeChild.pTransform的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                子节点的世界坐标保持不变,</span></span><br><span class=\"line\"><span class=\"comment\">                并且self.children会加入nodeChild,</span></span><br><span class=\"line\"><span class=\"comment\">                nodeChild.parent设置成self</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:addChild(nodeChild, transformChild)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    第1种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeParent nil</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformParent Transform</span></span><br><span class=\"line\"><span class=\"comment\">        作用: transformParent当做self.pTransform的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                自身的世界坐标保持不变.</span></span><br><span class=\"line\"><span class=\"comment\">    第2种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeParent BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformParent Transform | nil</span></span><br><span class=\"line\"><span class=\"comment\">        作用: transformParent当做self.pTransform的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                自身的世界坐标保持不变,</span></span><br><span class=\"line\"><span class=\"comment\">                并且self.parent = nodeParent,</span></span><br><span class=\"line\"><span class=\"comment\">                nodeParent.children会加入self.</span></span><br><span class=\"line\"><span class=\"comment\">                注意当transformParent为nil时,</span></span><br><span class=\"line\"><span class=\"comment\">                nodeParent.pTransform会作为self.pTransform的父节点.</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode.setParent(nodeParent, transformParent)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    通过cleanup()销毁self.children中所有的BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeAllChildren()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    通过cleanup()销毁self.children中的某个BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">    -@param cleanup boolean 当cleanup为false时,</span></span><br><span class=\"line\"><span class=\"comment\">        不会使用cleanup()销毁该节点, 只会将该节点从self.children中移除.</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeChild(child, cleanup)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    第1种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param cleanup true</span></span><br><span class=\"line\"><span class=\"comment\">        作用: 通过cleanup()销毁自己</span></span><br><span class=\"line\"><span class=\"comment\">    第2中情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param cleanup false</span></span><br><span class=\"line\"><span class=\"comment\">        作用: 不会是用cleanup()销毁自己, 但会置空self.parent = nil</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeFromParent(cleanup)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"销毁\"><a href=\"#销毁\" class=\"headerlink\" title=\"销毁\"></a>销毁</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    销毁self.pGameObject  </span></span><br><span class=\"line\"><span class=\"comment\">    流程:</span></span><br><span class=\"line\"><span class=\"comment\">        调用回调onCleanUp()</span></span><br><span class=\"line\"><span class=\"comment\">        移除update事件,</span></span><br><span class=\"line\"><span class=\"comment\">        移除Action事件,</span></span><br><span class=\"line\"><span class=\"comment\">        移除监听message事件(只能移除通过self的on监听的事件, 通过messageManager的on监听的事件不行),</span></span><br><span class=\"line\"><span class=\"comment\">        杀死DOTween动画,</span></span><br><span class=\"line\"><span class=\"comment\">        销毁GameObject(DestroyImmediate()方法销毁),</span></span><br><span class=\"line\"><span class=\"comment\">        将所有属性 = nil置空</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:cleanup()</span><br><span class=\"line\">BaseGameNode:onCleanUp()    <span class=\"comment\">-- 默认空, 自行重写</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"状态\"><a href=\"#状态\" class=\"headerlink\" title=\"状态\"></a>状态</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    设置self.pGameObject的active</span></span><br><span class=\"line\"><span class=\"comment\">    执行完毕后回调onActiveChange()</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:setActive(ac)</span><br><span class=\"line\">BaseGameNode:onActiveChange(bValue) <span class=\"comment\">-- 默认空, 自行重写</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Update功能\"><a href=\"#Update功能\" class=\"headerlink\" title=\"Update功能\"></a>Update功能</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    通过EventManager开启Update事件, 每帧调用update()</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:triggerUpdate()</span><br><span class=\"line\">BaseGameNode:update()   <span class=\"comment\">-- 默认空(声明都没声明), 自行重写</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    同上</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:triggerLateUpdate()</span><br><span class=\"line\">BaseGameNode:lateUpdate()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    同上</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:triggerFixedUpdate()</span><br><span class=\"line\">BaseGameNode:fixedUpdate()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 关闭update 需使用EventManager:removeXXX()</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Action功能\"><a href=\"#Action功能\" class=\"headerlink\" title=\"Action功能\"></a>Action功能</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    -@param action Action</span></span><br><span class=\"line\"><span class=\"comment\">    通过EventManager执行action(其实就是调用action的逻辑函数)</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:runAction(action)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    -@param action Action</span></span><br><span class=\"line\"><span class=\"comment\">    通过EventManager停止action</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:stopAction(action)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    通过EventManager听说该节点的所有action</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:stopAllAction()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监听-消息-x2F-事件-功能\"><a href=\"#监听-消息-x2F-事件-功能\" class=\"headerlink\" title=\"监听 消息&#x2F;事件 功能\"></a>监听 消息&#x2F;事件 功能</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    添加事件监听, 使用此方法添加的监听不用在节点销毁前手动移除</span></span><br><span class=\"line\"><span class=\"comment\">    -@param key number 需要在MessageManager定义消息id</span></span><br><span class=\"line\"><span class=\"comment\">    -@param fun fun(...):nil 回调函数</span></span><br><span class=\"line\"><span class=\"comment\">    -@param obj BaseGameNode 参数fun的self调用者</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:addMessageListener(key, fun, obj)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    移除事件监听, 参数同上</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeMessageListener(key, fun, obj)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    移除所有事件监听, 即使监听obj参数不是自己</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeAllMessageListener()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    添加自身事件监听, 使用此方法添加的监听不用在节点销毁前手动移除,</span></span><br><span class=\"line\"><span class=\"comment\">    但是事件只适用于与在自己类内部使用, 也就是说事件id应该定义在自己类的文件里</span></span><br><span class=\"line\"><span class=\"comment\">    -@param key number 需要在self内定义消息id</span></span><br><span class=\"line\"><span class=\"comment\">    -@param fun fun():nil 回调函数</span></span><br><span class=\"line\"><span class=\"comment\">    -@param BaseGameNode 参数fun的self调用者</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:on(key, fun, obj)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    移除通过BaseGameNode:on()注册的事件, 参数同,</span></span><br><span class=\"line\"><span class=\"comment\">    如果fun为nil但obj不为nil的话, 则移除所有该key的事件.</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:off(key, fun, obj)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    触发通过BaseGameNode:on()注册的key事件</span></span><br><span class=\"line\"><span class=\"comment\">    -@param ... any 回调函数的参数</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:send(key, ...)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--两种事件形式的区别是: 第一种的事件是所有类都可以监听的, 并且又MessageManager触发.</span></span><br><span class=\"line\"><span class=\"comment\">--  第二种事件是只有self自己可以监听的, 并且由自身self触发.</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"BaseUbiUI\"><a href=\"#BaseUbiUI\" class=\"headerlink\" title=\"BaseUbiUI\"></a>BaseUbiUI</h2><p>dsad</p>\n<h1 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h1><p>asdasd</p>\n","encrypt":true},{"title":"lua元表","date":"2023-02-01T13:29:31.000Z","_content":"\n---\n\n# 元表 #\n\n**元表**: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。\n**设置元表 setmetatable(table, metatable)**: 当table已经设置过元表，并且元表内定义了``__metatable``时，再次``setmetatable()``会报错。   \n**获取元表 getmetatable(table)**: 当元表没有使用``setmetatable()``设置过时会返回nil。\n\n# 元方法 #\n**元方法**: 元表中的key表示**事件名**，value表示**元方法**，**元方法既可以是table也可以是function**\n\n# 常用事件名 #\n+ **__index**: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__index是table，那么会输出__index[key]\n  2. 如果__index是function，那么会执行__index(t, key)\n+ **__newindex**: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__newindex是table，那么会赋值给__newindex[key]\n  2. 如果__newindex是function，那么会执行__newindex[t, key, value]\n+ **__metatable**: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身\n+ **__add**: 当t1 + t2时，会执行__add(t1, t2)   \n\n其他事件名请按Lua版本参考   \n5.1: <https://www.codingnow.com/2000/download/lua_manual.html>   \n5.3: <https://www.runoob.com/manual/lua53doc/contents.html>\n","source":"_posts/Lua语言/lua元表.md","raw":"---\ntitle: lua元表\ndate: 2023-02-01 21:29:31\ntags: [元表, 原方法]\ncategories: [Lua语言]\n---\n\n---\n\n# 元表 #\n\n**元表**: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。\n**设置元表 setmetatable(table, metatable)**: 当table已经设置过元表，并且元表内定义了``__metatable``时，再次``setmetatable()``会报错。   \n**获取元表 getmetatable(table)**: 当元表没有使用``setmetatable()``设置过时会返回nil。\n\n# 元方法 #\n**元方法**: 元表中的key表示**事件名**，value表示**元方法**，**元方法既可以是table也可以是function**\n\n# 常用事件名 #\n+ **__index**: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__index是table，那么会输出__index[key]\n  2. 如果__index是function，那么会执行__index(t, key)\n+ **__newindex**: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__newindex是table，那么会赋值给__newindex[key]\n  2. 如果__newindex是function，那么会执行__newindex[t, key, value]\n+ **__metatable**: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身\n+ **__add**: 当t1 + t2时，会执行__add(t1, t2)   \n\n其他事件名请按Lua版本参考   \n5.1: <https://www.codingnow.com/2000/download/lua_manual.html>   \n5.3: <https://www.runoob.com/manual/lua53doc/contents.html>\n","slug":"Lua语言/lua元表","published":1,"updated":"2023-02-01T15:23:09.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfyj4cf3000ot4v6dsf6a3gx","content":"<hr>\n<h1 id=\"元表\"><a href=\"#元表\" class=\"headerlink\" title=\"元表\"></a>元表</h1><p><strong>元表</strong>: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。<br><strong>设置元表 setmetatable(table, metatable)</strong>: 当table已经设置过元表，并且元表内定义了<code>__metatable</code>时，再次<code>setmetatable()</code>会报错。<br><strong>获取元表 getmetatable(table)</strong>: 当元表没有使用<code>setmetatable()</code>设置过时会返回nil。</p>\n<h1 id=\"元方法\"><a href=\"#元方法\" class=\"headerlink\" title=\"元方法\"></a>元方法</h1><p><strong>元方法</strong>: 元表中的key表示<strong>事件名</strong>，value表示<strong>元方法</strong>，<strong>元方法既可以是table也可以是function</strong></p>\n<h1 id=\"常用事件名\"><a href=\"#常用事件名\" class=\"headerlink\" title=\"常用事件名\"></a>常用事件名</h1><ul>\n<li><strong>__index</strong>: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__index是table，那么会输出__index[key]</li>\n<li>如果__index是function，那么会执行__index(t, key)</li>\n</ol>\n</li>\n<li><strong>__newindex</strong>: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__newindex是table，那么会赋值给__newindex[key]</li>\n<li>如果__newindex是function，那么会执行__newindex[t, key, value]</li>\n</ol>\n</li>\n<li><strong>__metatable</strong>: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身</li>\n<li><strong>__add</strong>: 当t1 + t2时，会执行__add(t1, t2)</li>\n</ul>\n<p>其他事件名请按Lua版本参考<br>5.1: <a href=\"https://www.codingnow.com/2000/download/lua_manual.html\">https://www.codingnow.com/2000/download/lua_manual.html</a><br>5.3: <a href=\"https://www.runoob.com/manual/lua53doc/contents.html\">https://www.runoob.com/manual/lua53doc/contents.html</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<hr>\n<h1 id=\"元表\"><a href=\"#元表\" class=\"headerlink\" title=\"元表\"></a>元表</h1><p><strong>元表</strong>: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。<br><strong>设置元表 setmetatable(table, metatable)</strong>: 当table已经设置过元表，并且元表内定义了<code>__metatable</code>时，再次<code>setmetatable()</code>会报错。<br><strong>获取元表 getmetatable(table)</strong>: 当元表没有使用<code>setmetatable()</code>设置过时会返回nil。</p>\n<h1 id=\"元方法\"><a href=\"#元方法\" class=\"headerlink\" title=\"元方法\"></a>元方法</h1><p><strong>元方法</strong>: 元表中的key表示<strong>事件名</strong>，value表示<strong>元方法</strong>，<strong>元方法既可以是table也可以是function</strong></p>\n<h1 id=\"常用事件名\"><a href=\"#常用事件名\" class=\"headerlink\" title=\"常用事件名\"></a>常用事件名</h1><ul>\n<li><strong>__index</strong>: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__index是table，那么会输出__index[key]</li>\n<li>如果__index是function，那么会执行__index(t, key)</li>\n</ol>\n</li>\n<li><strong>__newindex</strong>: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__newindex是table，那么会赋值给__newindex[key]</li>\n<li>如果__newindex是function，那么会执行__newindex[t, key, value]</li>\n</ol>\n</li>\n<li><strong>__metatable</strong>: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身</li>\n<li><strong>__add</strong>: 当t1 + t2时，会执行__add(t1, t2)</li>\n</ul>\n<p>其他事件名请按Lua版本参考<br>5.1: <a href=\"https://www.codingnow.com/2000/download/lua_manual.html\">https://www.codingnow.com/2000/download/lua_manual.html</a><br>5.3: <a href=\"https://www.runoob.com/manual/lua53doc/contents.html\">https://www.runoob.com/manual/lua53doc/contents.html</a></p>\n"},{"title":"rider学习版","date":"2023-03-12T15:02:56.000Z","_content":"\n# 本体下载 #   \n<https://www.jetbrains.com/rider/download/#section=windows>\n\n---\n\n# 学习信息 #   \n+ 学习付费版   \nbilibili:<https://www.bilibili.com/read/cv11200249>   \n解压码:mpvgg   \nqq:3184207379   \n百度云(提取码yj9y):<https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA>\n\n+ 白嫖学习版   \n教程:<https://www.exception.site>   \n公众号:Java学习者社区(回复:idea)\n\n+ 建议正版。。。。。正版比学习版好用多了\n---","source":"_posts/我是学生/rider学习版.md","raw":"---\ntitle: rider学习版\ndate: 2023-03-12 23:02:56\ntags: [\"rider\"]\ncategories: [\"我是学生\"]\n\n---\n\n# 本体下载 #   \n<https://www.jetbrains.com/rider/download/#section=windows>\n\n---\n\n# 学习信息 #   \n+ 学习付费版   \nbilibili:<https://www.bilibili.com/read/cv11200249>   \n解压码:mpvgg   \nqq:3184207379   \n百度云(提取码yj9y):<https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA>\n\n+ 白嫖学习版   \n教程:<https://www.exception.site>   \n公众号:Java学习者社区(回复:idea)\n\n+ 建议正版。。。。。正版比学习版好用多了\n---","slug":"我是学生/rider学习版","published":1,"updated":"2023-03-15T15:34:24.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfyj4cf5000st4v6ey7a0si2","content":"<h1 id=\"本体下载\"><a href=\"#本体下载\" class=\"headerlink\" title=\"本体下载\"></a>本体下载</h1><p><a href=\"https://www.jetbrains.com/rider/download/#section=windows\">https://www.jetbrains.com/rider/download/#section=windows</a></p>\n<hr>\n<h1 id=\"学习信息\"><a href=\"#学习信息\" class=\"headerlink\" title=\"学习信息\"></a>学习信息</h1><ul>\n<li><p>学习付费版<br>bilibili:<a href=\"https://www.bilibili.com/read/cv11200249\">https://www.bilibili.com/read/cv11200249</a><br>解压码:mpvgg<br>qq:3184207379<br>百度云(提取码yj9y):<a href=\"https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA\">https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA</a></p>\n</li>\n<li><p>白嫖学习版<br>教程:<a href=\"https://www.exception.site/\">https://www.exception.site</a><br>公众号:Java学习者社区(回复:idea)</p>\n</li>\n<li><p>建议正版。。。。。正版比学习版好用多了</p>\n</li>\n</ul>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"本体下载\"><a href=\"#本体下载\" class=\"headerlink\" title=\"本体下载\"></a>本体下载</h1><p><a href=\"https://www.jetbrains.com/rider/download/#section=windows\">https://www.jetbrains.com/rider/download/#section=windows</a></p>\n<hr>\n<h1 id=\"学习信息\"><a href=\"#学习信息\" class=\"headerlink\" title=\"学习信息\"></a>学习信息</h1><ul>\n<li><p>学习付费版<br>bilibili:<a href=\"https://www.bilibili.com/read/cv11200249\">https://www.bilibili.com/read/cv11200249</a><br>解压码:mpvgg<br>qq:3184207379<br>百度云(提取码yj9y):<a href=\"https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA\">https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA</a></p>\n</li>\n<li><p>白嫖学习版<br>教程:<a href=\"https://www.exception.site/\">https://www.exception.site</a><br>公众号:Java学习者社区(回复:idea)</p>\n</li>\n<li><p>建议正版。。。。。正版比学习版好用多了</p>\n</li>\n</ul>\n<hr>\n"},{"title":"unity学习版","date":"2023-03-12T13:02:56.000Z","_content":"\n# 国际版下载方式 #\n1. 打开全局代理，下载过程需要全程开启\n2. 官方下载地址<https://unity.com/download#how-get-started>\n3. 启动方式(切规则代理)   \n   + 方式一\n   ```CMD\n   @echo off\n   set HTTP_PROXY=http://127.0.0.1:7890\n   set HTTPS_PROXY=http://127.0.0.1:7890\n   start \"\" \"D:\\Unity Hub\\Unity Hub.exe\"\n   ```   \n   + 方式二\n   在Clash for Window里设置代理规则，关键字unity,unityhub\n\n---\n\n# 学习软件 #\n<https://github.com/tylearymf/UniHacker>\n\n---","source":"_posts/我是学生/unity学习版.md","raw":"---\ntitle: unity学习版\ndate: 2023-03-12 21:02:56\ntags: [\"unityHub\"]\ncategories: [\"我是学生\"]\n\n---\n\n# 国际版下载方式 #\n1. 打开全局代理，下载过程需要全程开启\n2. 官方下载地址<https://unity.com/download#how-get-started>\n3. 启动方式(切规则代理)   \n   + 方式一\n   ```CMD\n   @echo off\n   set HTTP_PROXY=http://127.0.0.1:7890\n   set HTTPS_PROXY=http://127.0.0.1:7890\n   start \"\" \"D:\\Unity Hub\\Unity Hub.exe\"\n   ```   \n   + 方式二\n   在Clash for Window里设置代理规则，关键字unity,unityhub\n\n---\n\n# 学习软件 #\n<https://github.com/tylearymf/UniHacker>\n\n---","slug":"我是学生/unity学习版","published":1,"updated":"2023-03-30T06:02:33.042Z","_id":"clfyj4cf5000tt4v6950cbvlo","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"国际版下载方式\"><a href=\"#国际版下载方式\" class=\"headerlink\" title=\"国际版下载方式\"></a>国际版下载方式</h1><ol>\n<li>打开全局代理，下载过程需要全程开启</li>\n<li>官方下载地址<a href=\"https://unity.com/download#how-get-started\">https://unity.com/download#how-get-started</a></li>\n<li>启动方式(切规则代理)   <ul>\n<li>方式一</li>\n</ul>\n<pre><code class=\"CMD\">@echo off\nset HTTP_PROXY=http://127.0.0.1:7890\nset HTTPS_PROXY=http://127.0.0.1:7890\nstart &quot;&quot; &quot;D:\\Unity Hub\\Unity Hub.exe&quot;\n</code></pre>\n<ul>\n<li>方式二<br>在Clash for Window里设置代理规则，关键字unity,unityhub</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"学习软件\"><a href=\"#学习软件\" class=\"headerlink\" title=\"学习软件\"></a>学习软件</h1><p><a href=\"https://github.com/tylearymf/UniHacker\">https://github.com/tylearymf/UniHacker</a></p>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"国际版下载方式\"><a href=\"#国际版下载方式\" class=\"headerlink\" title=\"国际版下载方式\"></a>国际版下载方式</h1><ol>\n<li>打开全局代理，下载过程需要全程开启</li>\n<li>官方下载地址<a href=\"https://unity.com/download#how-get-started\">https://unity.com/download#how-get-started</a></li>\n<li>启动方式(切规则代理)   <ul>\n<li>方式一</li>\n</ul>\n<pre><code class=\"CMD\">@echo off\nset HTTP_PROXY=http://127.0.0.1:7890\nset HTTPS_PROXY=http://127.0.0.1:7890\nstart &quot;&quot; &quot;D:\\Unity Hub\\Unity Hub.exe&quot;\n</code></pre>\n<ul>\n<li>方式二<br>在Clash for Window里设置代理规则，关键字unity,unityhub</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"学习软件\"><a href=\"#学习软件\" class=\"headerlink\" title=\"学习软件\"></a>学习软件</h1><p><a href=\"https://github.com/tylearymf/UniHacker\">https://github.com/tylearymf/UniHacker</a></p>\n<hr>\n"},{"title":"hexo笔记","date":"2023-03-10T06:51:05.000Z","_content":"\n# 常用指令 #   \n\n```PowerShell\n# 生成文章\nhexo new \"文章名\"\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n```   \n\n其他指令参考文档:<https://hexo.io/zh-cn/docs/commands#generate>\n\n---\n\n# 新电脑部署旧网站 #   \n\n> !!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   \n\n## 旧电脑操作 ##   \n   执行``一键部署并同步.bat``脚本\n\n## 新电脑操作 ##   \n1. 安装Node.js环境:<https://nodejs.org/en/download/>   \n2. 在``D:\\Personal Blog``目录, clone Github的``hexo-config``仓库    \n3. 执行``迁移脚本.bat``脚本   \n4. 在``D:\\Personal Blog\\hexo``安装hexo   \n   ```PowerShell\n   npm install hexo-cli -g\n   npm install\n   ```   \n5. 设置脚本执行策略\n   ```PowerShell\n   # 查看脚本执行策略\n   # Restricted: 严格模式\n   # Unrestricted: 下载未签名脚本时会询问\n   # Bypass: 直接执行\n   Get-ExecutionPolicy\n   ```   \n   当策略是Restricted时，将其设置成Unrestricted或Bypass模式   \n   ```PowerShell\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n   ```   \n\n---\n","source":"_posts/网站搭建/hexo笔记.md","raw":"---\ntitle: hexo笔记\ndate: 2023-03-10 14:51:05\ntags: [\"hexo\"]\ncategories: [\"网站搭建\"]\n---\n\n# 常用指令 #   \n\n```PowerShell\n# 生成文章\nhexo new \"文章名\"\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n```   \n\n其他指令参考文档:<https://hexo.io/zh-cn/docs/commands#generate>\n\n---\n\n# 新电脑部署旧网站 #   \n\n> !!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   \n\n## 旧电脑操作 ##   \n   执行``一键部署并同步.bat``脚本\n\n## 新电脑操作 ##   \n1. 安装Node.js环境:<https://nodejs.org/en/download/>   \n2. 在``D:\\Personal Blog``目录, clone Github的``hexo-config``仓库    \n3. 执行``迁移脚本.bat``脚本   \n4. 在``D:\\Personal Blog\\hexo``安装hexo   \n   ```PowerShell\n   npm install hexo-cli -g\n   npm install\n   ```   \n5. 设置脚本执行策略\n   ```PowerShell\n   # 查看脚本执行策略\n   # Restricted: 严格模式\n   # Unrestricted: 下载未签名脚本时会询问\n   # Bypass: 直接执行\n   Get-ExecutionPolicy\n   ```   \n   当策略是Restricted时，将其设置成Unrestricted或Bypass模式   \n   ```PowerShell\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n   ```   \n\n---\n","slug":"网站搭建/hexo笔记","published":1,"updated":"2023-03-31T01:35:05.291Z","_id":"clfyj4cf6000xt4v67fyif1ch","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><pre><code class=\"PowerShell\"># 生成文章\nhexo new &quot;文章名&quot;\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n</code></pre>\n<p>其他指令参考文档:<a href=\"https://hexo.io/zh-cn/docs/commands#generate\">https://hexo.io/zh-cn/docs/commands#generate</a></p>\n<hr>\n<h1 id=\"新电脑部署旧网站\"><a href=\"#新电脑部署旧网站\" class=\"headerlink\" title=\"新电脑部署旧网站\"></a>新电脑部署旧网站</h1><blockquote>\n<p>!!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   </p>\n</blockquote>\n<h2 id=\"旧电脑操作\"><a href=\"#旧电脑操作\" class=\"headerlink\" title=\"旧电脑操作\"></a>旧电脑操作</h2><p>   执行<code>一键部署并同步.bat</code>脚本</p>\n<h2 id=\"新电脑操作\"><a href=\"#新电脑操作\" class=\"headerlink\" title=\"新电脑操作\"></a>新电脑操作</h2><ol>\n<li>安装Node.js环境:<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>   </li>\n<li>在<code>D:\\Personal Blog</code>目录, clone Github的<code>hexo-config</code>仓库    </li>\n<li>执行<code>迁移脚本.bat</code>脚本   </li>\n<li>在<code>D:\\Personal Blog\\hexo</code>安装hexo   <pre><code class=\"PowerShell\">npm install hexo-cli -g\nnpm install\n</code></pre>\n</li>\n<li>设置脚本执行策略<pre><code class=\"PowerShell\"># 查看脚本执行策略\n# Restricted: 严格模式\n# Unrestricted: 下载未签名脚本时会询问\n# Bypass: 直接执行\nGet-ExecutionPolicy\n</code></pre>\n当策略是Restricted时，将其设置成Unrestricted或Bypass模式   <pre><code class=\"PowerShell\">Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\nSet-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n</code></pre>\n</li>\n</ol>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><pre><code class=\"PowerShell\"># 生成文章\nhexo new &quot;文章名&quot;\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n</code></pre>\n<p>其他指令参考文档:<a href=\"https://hexo.io/zh-cn/docs/commands#generate\">https://hexo.io/zh-cn/docs/commands#generate</a></p>\n<hr>\n<h1 id=\"新电脑部署旧网站\"><a href=\"#新电脑部署旧网站\" class=\"headerlink\" title=\"新电脑部署旧网站\"></a>新电脑部署旧网站</h1><blockquote>\n<p>!!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   </p>\n</blockquote>\n<h2 id=\"旧电脑操作\"><a href=\"#旧电脑操作\" class=\"headerlink\" title=\"旧电脑操作\"></a>旧电脑操作</h2><p>   执行<code>一键部署并同步.bat</code>脚本</p>\n<h2 id=\"新电脑操作\"><a href=\"#新电脑操作\" class=\"headerlink\" title=\"新电脑操作\"></a>新电脑操作</h2><ol>\n<li>安装Node.js环境:<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>   </li>\n<li>在<code>D:\\Personal Blog</code>目录, clone Github的<code>hexo-config</code>仓库    </li>\n<li>执行<code>迁移脚本.bat</code>脚本   </li>\n<li>在<code>D:\\Personal Blog\\hexo</code>安装hexo   <pre><code class=\"PowerShell\">npm install hexo-cli -g\nnpm install\n</code></pre>\n</li>\n<li>设置脚本执行策略<pre><code class=\"PowerShell\"># 查看脚本执行策略\n# Restricted: 严格模式\n# Unrestricted: 下载未签名脚本时会询问\n# Bypass: 直接执行\nGet-ExecutionPolicy\n</code></pre>\n当策略是Restricted时，将其设置成Unrestricted或Bypass模式   <pre><code class=\"PowerShell\">Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\nSet-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n</code></pre>\n</li>\n</ol>\n<hr>\n"},{"title":"Markdown常用语法","date":"2023-01-29T07:07:22.000Z","_content":"\n---\n\n# 标题 #\n\n语法如下:\n```Markdown\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n```\n\n效果如下:\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n\n---\n\n# 注释 #\n\n语法如下:\n```Markdown\n<!-- 看不到看不到 -->\n```\n\n效果如下:\n<!-- 看不到看不到 -->\n\n---\n\n# 分割线 #\n\n语法如下:\n``` Markdown\n---\n```\n\n效果如下:\n___\n\n---\n\n# 换行 #\n\n语法如下:\n``` Markdown\n输入三个空格，一个回车\nHello   \nWorld   \n\n或者\n\n输入<br />\nHello<br />World\n```\n\n效果如下:   \nHello   \nWorld   \nHello<br />World\n\n---\n\n# 代码和代码块 #\n\n语法如下:\n```Markdown\n``int a = 1;``\n\n或者\n\n```C++\nint b = 2;\n```             。(这个句号不用写)\n\n```\n\n效果如下:   \n``int a = 1;``   \n```C++\nint b = 2;\n```\n\n---\n\n# 超链接 #\n\n语法如下:\n```Markdown\n双引号中的内容为鼠标悬停时显示的描述\n[个人网站](https://wokaibai.top \"我的个人网站\")\n\n或者\n\n<https://wokaibai.top>\n```\n\n效果如下:   \n[个人网站](https://wokaibai.top \"我的个人网站\")   \n<https://wokaibai.top>\n\n---\n\n# 引用形式的超链接 #\n\n语法如下:\n```Markdown\n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n```\n\n效果如下:   \n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n\n---\n\n# 数学公式 #\n\n语法如下:\n```Markdown\n使用LaTeX公式\n$$\\frac{a}{b}$$ 表示块公式\n$\\frac{a}{b}$   表示行公式\n```\n\n效果如下:   \n(显示异常就是不支持)   \n$$\\frac{a}{b}$$   \n$\\frac{a}{b}$   \n\n注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取   \n[数学公式->LaTeX表达式或图片](https://www.2weima.com/gongshi.html)   \n[图片->LaTeX表达式(需要登录)](https://www.latexlive.com)\n\n---\n\n# 列表 #\n\n语法如下:\n```Markdown\n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n```\n\n效果如下:   \n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n\n---\n\n# 块引用 #\n\n语法如下:\n```Markdown\n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n```\n\n效果如下:   \n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n\n---\n\n# 斜体、粗体、粗斜体、删除线 #\n\n语法如下:\n```Markdown\n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n```\n\n效果如下:   \n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n\n---\n\n# 图片 #\n\n语法如下:\n```Markdown\n通过上传至仓库加载(需要梯子)\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n\n图床加载\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n\nhtml标签图床加载\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n```\n\n效果如下:\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n\n---\n\n# 表格 #\n\n语法如下:\n```Markdown\n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n:--- 表示左对齐\n---  表示居中\n---: 表示右对齐\n```\n\n效果如下:   \n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n\n---\n\n其他Markdown语法的参考:   \n<http://www.zhaowenyu.com/markdown-doc/> 语法较全，质量较高   \n<https://butterfly.js.org/posts/89757140/> Butterfly主题官方出品\n\n\n---\n","source":"_posts/网站搭建/markdown常用语法.md","raw":"---\ntitle: \"Markdown常用语法\"\ndate: 2023-01-29 15:07:22\ntags: [\"Markdown\"]\ncategories: [\"博客搭建\"]\n---\n\n---\n\n# 标题 #\n\n语法如下:\n```Markdown\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n```\n\n效果如下:\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n\n---\n\n# 注释 #\n\n语法如下:\n```Markdown\n<!-- 看不到看不到 -->\n```\n\n效果如下:\n<!-- 看不到看不到 -->\n\n---\n\n# 分割线 #\n\n语法如下:\n``` Markdown\n---\n```\n\n效果如下:\n___\n\n---\n\n# 换行 #\n\n语法如下:\n``` Markdown\n输入三个空格，一个回车\nHello   \nWorld   \n\n或者\n\n输入<br />\nHello<br />World\n```\n\n效果如下:   \nHello   \nWorld   \nHello<br />World\n\n---\n\n# 代码和代码块 #\n\n语法如下:\n```Markdown\n``int a = 1;``\n\n或者\n\n```C++\nint b = 2;\n```             。(这个句号不用写)\n\n```\n\n效果如下:   \n``int a = 1;``   \n```C++\nint b = 2;\n```\n\n---\n\n# 超链接 #\n\n语法如下:\n```Markdown\n双引号中的内容为鼠标悬停时显示的描述\n[个人网站](https://wokaibai.top \"我的个人网站\")\n\n或者\n\n<https://wokaibai.top>\n```\n\n效果如下:   \n[个人网站](https://wokaibai.top \"我的个人网站\")   \n<https://wokaibai.top>\n\n---\n\n# 引用形式的超链接 #\n\n语法如下:\n```Markdown\n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n```\n\n效果如下:   \n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n\n---\n\n# 数学公式 #\n\n语法如下:\n```Markdown\n使用LaTeX公式\n$$\\frac{a}{b}$$ 表示块公式\n$\\frac{a}{b}$   表示行公式\n```\n\n效果如下:   \n(显示异常就是不支持)   \n$$\\frac{a}{b}$$   \n$\\frac{a}{b}$   \n\n注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取   \n[数学公式->LaTeX表达式或图片](https://www.2weima.com/gongshi.html)   \n[图片->LaTeX表达式(需要登录)](https://www.latexlive.com)\n\n---\n\n# 列表 #\n\n语法如下:\n```Markdown\n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n```\n\n效果如下:   \n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n\n---\n\n# 块引用 #\n\n语法如下:\n```Markdown\n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n```\n\n效果如下:   \n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n\n---\n\n# 斜体、粗体、粗斜体、删除线 #\n\n语法如下:\n```Markdown\n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n```\n\n效果如下:   \n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n\n---\n\n# 图片 #\n\n语法如下:\n```Markdown\n通过上传至仓库加载(需要梯子)\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n\n图床加载\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n\nhtml标签图床加载\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n```\n\n效果如下:\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n\n---\n\n# 表格 #\n\n语法如下:\n```Markdown\n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n:--- 表示左对齐\n---  表示居中\n---: 表示右对齐\n```\n\n效果如下:   \n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n\n---\n\n其他Markdown语法的参考:   \n<http://www.zhaowenyu.com/markdown-doc/> 语法较全，质量较高   \n<https://butterfly.js.org/posts/89757140/> Butterfly主题官方出品\n\n\n---\n","slug":"网站搭建/markdown常用语法","published":1,"updated":"2023-01-31T12:20:08.916Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfyj4cf7000yt4v6f54i2tao","content":"<hr>\n<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 一级 #</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 二级 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 三级 ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#### 四级 ####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">##### 五级 #####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">###### 六级 ######</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<h1 id=\"一级\"><a href=\"#一级\" class=\"headerlink\" title=\"一级\"></a>一级</h1><h2 id=\"二级\"><a href=\"#二级\" class=\"headerlink\" title=\"二级\"></a>二级</h2><h3 id=\"三级\"><a href=\"#三级\" class=\"headerlink\" title=\"三级\"></a>三级</h3><h4 id=\"四级\"><a href=\"#四级\" class=\"headerlink\" title=\"四级\"></a>四级</h4><h5 id=\"五级\"><a href=\"#五级\" class=\"headerlink\" title=\"五级\"></a>五级</h5><h6 id=\"六级\"><a href=\"#六级\" class=\"headerlink\" title=\"六级\"></a>六级</h6><hr>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 看不到看不到 --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<!-- 看不到看不到 -->\n\n<hr>\n<h1 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<hr>\n<hr>\n<h1 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入三个空格，一个回车</span><br><span class=\"line\">Hello   </span><br><span class=\"line\">World   </span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\">输入<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\">Hello<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span>World</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>Hello<br>World<br>Hello<br />World</p>\n<hr>\n<h1 id=\"代码和代码块\"><a href=\"#代码和代码块\" class=\"headerlink\" title=\"代码和代码块\"></a>代码和代码块</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">``int a = 1;`</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">```C++</span></span><br><span class=\"line\"><span class=\"code\">int b = 2;</span></span><br><span class=\"line\"><span class=\"code\">```             </span>。(这个句号不用写)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><code>int a = 1;</code>   </p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">双引号中的内容为鼠标悬停时显示的描述</span><br><span class=\"line\">[<span class=\"string\">个人网站</span>](<span class=\"link\">https://wokaibai.top &quot;我的个人网站&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\">&lt;https://wokaibai.top&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\" title=\"我的个人网站\">个人网站</a><br><a href=\"https://wokaibai.top/\">https://wokaibai.top</a></p>\n<hr>\n<h1 id=\"引用形式的超链接\"><a href=\"#引用形式的超链接\" class=\"headerlink\" title=\"引用形式的超链接\"></a>引用形式的超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">个人网站索引</span>]   </span><br><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">个人网站索引</span>]: <span class=\"link\">https://wokaibai.top</span></span><br><span class=\"line\">[<span class=\"symbol\">1</span>]: <span class=\"link\">https://wokaibai.top</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\">个人网站</a><br><a href=\"https://wokaibai.top/\">个人网站</a></p>\n<hr>\n<h1 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用LaTeX公式</span><br><span class=\"line\">$$\\frac&#123;a&#125;&#123;b&#125;$$ 表示块公式</span><br><span class=\"line\">$\\frac&#123;a&#125;&#123;b&#125;$   表示行公式</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>(显示异常就是不支持)<br>$$\\frac{a}{b}$$<br>$\\frac{a}{b}$   </p>\n<p>注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取<br><a href=\"https://www.2weima.com/gongshi.html\">数学公式-&gt;LaTeX表达式或图片</a><br><a href=\"https://www.latexlive.com/\">图片-&gt;LaTeX表达式(需要登录)</a></p>\n<hr>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+</span> 无序列表1</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表3</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 有序列表1</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 有序列表2</span><br><span class=\"line\"><span class=\"bullet\">   1.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">   2.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 有序列表3</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<ul>\n<li>无序列表1</li>\n<li>无序列表2</li>\n<li>无序列表3</li>\n</ul>\n<ol>\n<li>有序列表1</li>\n<li>有序列表2<ol>\n<li>子列表</li>\n<li>子列表</li>\n</ol>\n</li>\n<li>有序列表3</li>\n</ol>\n<hr>\n<h1 id=\"块引用\"><a href=\"#块引用\" class=\"headerlink\" title=\"块引用\"></a>块引用</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 第一行   </span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第二行</span></span><br><span class=\"line\"><span class=\"quote\">&gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第三行</span></span><br><span class=\"line\">&gt;&gt; 嵌套块引用</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<blockquote>\n<p>第一行<br>第二行</p>\n<p>第三行</p>\n<blockquote>\n<p>嵌套块引用</p>\n</blockquote>\n</blockquote>\n<hr>\n<h1 id=\"斜体、粗体、粗斜体、删除线\"><a href=\"#斜体、粗体、粗斜体、删除线\" class=\"headerlink\" title=\"斜体、粗体、粗斜体、删除线\"></a>斜体、粗体、粗斜体、删除线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体*</span>   </span><br><span class=\"line\"><span class=\"strong\">**粗体**</span>   </span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体*</span>**</span>   </span><br><span class=\"line\">~~删除线~~</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><em>斜体</em><br><strong>粗体</strong><br><em><strong>粗斜体</strong></em><br><del>删除线</del></p>\n<hr>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过上传至仓库加载(需要梯子)</span><br><span class=\"line\">![<span class=\"string\">刻晴，图裂了就是没挂梯子</span>](<span class=\"link\">https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp &quot;刻晴&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">图床加载</span><br><span class=\"line\">![<span class=\"string\">背景图片</span>](<span class=\"link\">https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">html标签图床加载</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">300</span> <span class=\"attr\">height</span>=<span class=\"string\">120</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><img src=\"https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp\" alt=\"刻晴，图裂了就是没挂梯子\" title=\"刻晴\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" alt=\"背景图片\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 /></p>\n<hr>\n<h1 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|左对齐  |居中    |右对齐  |</span><br><span class=\"line\">|:---    |---     |---:   |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\"></span><br><span class=\"line\">:--- 表示左对齐</span><br><span class=\"line\">---  表示居中</span><br><span class=\"line\">---: 表示右对齐</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th>居中</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n<tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n</tbody></table>\n<hr>\n<p>其他Markdown语法的参考:<br><a href=\"http://www.zhaowenyu.com/markdown-doc/\">http://www.zhaowenyu.com/markdown-doc/</a> 语法较全，质量较高<br><a href=\"https://butterfly.js.org/posts/89757140/\">https://butterfly.js.org/posts/89757140/</a> Butterfly主题官方出品</p>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<hr>\n<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 一级 #</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 二级 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 三级 ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#### 四级 ####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">##### 五级 #####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">###### 六级 ######</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<h1 id=\"一级\"><a href=\"#一级\" class=\"headerlink\" title=\"一级\"></a>一级</h1><h2 id=\"二级\"><a href=\"#二级\" class=\"headerlink\" title=\"二级\"></a>二级</h2><h3 id=\"三级\"><a href=\"#三级\" class=\"headerlink\" title=\"三级\"></a>三级</h3><h4 id=\"四级\"><a href=\"#四级\" class=\"headerlink\" title=\"四级\"></a>四级</h4><h5 id=\"五级\"><a href=\"#五级\" class=\"headerlink\" title=\"五级\"></a>五级</h5><h6 id=\"六级\"><a href=\"#六级\" class=\"headerlink\" title=\"六级\"></a>六级</h6><hr>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 看不到看不到 --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<!-- 看不到看不到 -->\n\n<hr>\n<h1 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<hr>\n<hr>\n<h1 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入三个空格，一个回车</span><br><span class=\"line\">Hello   </span><br><span class=\"line\">World   </span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\">输入<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\">Hello<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span>World</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>Hello<br>World<br>Hello<br />World</p>\n<hr>\n<h1 id=\"代码和代码块\"><a href=\"#代码和代码块\" class=\"headerlink\" title=\"代码和代码块\"></a>代码和代码块</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">``int a = 1;`</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">```C++</span></span><br><span class=\"line\"><span class=\"code\">int b = 2;</span></span><br><span class=\"line\"><span class=\"code\">```             </span>。(这个句号不用写)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><code>int a = 1;</code>   </p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">双引号中的内容为鼠标悬停时显示的描述</span><br><span class=\"line\">[<span class=\"string\">个人网站</span>](<span class=\"link\">https://wokaibai.top &quot;我的个人网站&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\">&lt;https://wokaibai.top&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\" title=\"我的个人网站\">个人网站</a><br><a href=\"https://wokaibai.top/\">https://wokaibai.top</a></p>\n<hr>\n<h1 id=\"引用形式的超链接\"><a href=\"#引用形式的超链接\" class=\"headerlink\" title=\"引用形式的超链接\"></a>引用形式的超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">个人网站索引</span>]   </span><br><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">个人网站索引</span>]: <span class=\"link\">https://wokaibai.top</span></span><br><span class=\"line\">[<span class=\"symbol\">1</span>]: <span class=\"link\">https://wokaibai.top</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\">个人网站</a><br><a href=\"https://wokaibai.top/\">个人网站</a></p>\n<hr>\n<h1 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用LaTeX公式</span><br><span class=\"line\">$$\\frac&#123;a&#125;&#123;b&#125;$$ 表示块公式</span><br><span class=\"line\">$\\frac&#123;a&#125;&#123;b&#125;$   表示行公式</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>(显示异常就是不支持)<br>$$\\frac{a}{b}$$<br>$\\frac{a}{b}$   </p>\n<p>注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取<br><a href=\"https://www.2weima.com/gongshi.html\">数学公式-&gt;LaTeX表达式或图片</a><br><a href=\"https://www.latexlive.com/\">图片-&gt;LaTeX表达式(需要登录)</a></p>\n<hr>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+</span> 无序列表1</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表3</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 有序列表1</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 有序列表2</span><br><span class=\"line\"><span class=\"bullet\">   1.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">   2.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 有序列表3</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<ul>\n<li>无序列表1</li>\n<li>无序列表2</li>\n<li>无序列表3</li>\n</ul>\n<ol>\n<li>有序列表1</li>\n<li>有序列表2<ol>\n<li>子列表</li>\n<li>子列表</li>\n</ol>\n</li>\n<li>有序列表3</li>\n</ol>\n<hr>\n<h1 id=\"块引用\"><a href=\"#块引用\" class=\"headerlink\" title=\"块引用\"></a>块引用</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 第一行   </span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第二行</span></span><br><span class=\"line\"><span class=\"quote\">&gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第三行</span></span><br><span class=\"line\">&gt;&gt; 嵌套块引用</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<blockquote>\n<p>第一行<br>第二行</p>\n<p>第三行</p>\n<blockquote>\n<p>嵌套块引用</p>\n</blockquote>\n</blockquote>\n<hr>\n<h1 id=\"斜体、粗体、粗斜体、删除线\"><a href=\"#斜体、粗体、粗斜体、删除线\" class=\"headerlink\" title=\"斜体、粗体、粗斜体、删除线\"></a>斜体、粗体、粗斜体、删除线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体*</span>   </span><br><span class=\"line\"><span class=\"strong\">**粗体**</span>   </span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体*</span>**</span>   </span><br><span class=\"line\">~~删除线~~</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><em>斜体</em><br><strong>粗体</strong><br><em><strong>粗斜体</strong></em><br><del>删除线</del></p>\n<hr>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过上传至仓库加载(需要梯子)</span><br><span class=\"line\">![<span class=\"string\">刻晴，图裂了就是没挂梯子</span>](<span class=\"link\">https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp &quot;刻晴&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">图床加载</span><br><span class=\"line\">![<span class=\"string\">背景图片</span>](<span class=\"link\">https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">html标签图床加载</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">300</span> <span class=\"attr\">height</span>=<span class=\"string\">120</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><img src=\"https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp\" alt=\"刻晴，图裂了就是没挂梯子\" title=\"刻晴\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" alt=\"背景图片\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 /></p>\n<hr>\n<h1 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|左对齐  |居中    |右对齐  |</span><br><span class=\"line\">|:---    |---     |---:   |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\"></span><br><span class=\"line\">:--- 表示左对齐</span><br><span class=\"line\">---  表示居中</span><br><span class=\"line\">---: 表示右对齐</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th>居中</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n<tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n</tbody></table>\n<hr>\n<p>其他Markdown语法的参考:<br><a href=\"http://www.zhaowenyu.com/markdown-doc/\">http://www.zhaowenyu.com/markdown-doc/</a> 语法较全，质量较高<br><a href=\"https://butterfly.js.org/posts/89757140/\">https://butterfly.js.org/posts/89757140/</a> Butterfly主题官方出品</p>\n<hr>\n"},{"title":"信息表示","date":"2023-01-29T03:18:17.000Z","_content":"\n# 定点数和浮点数 #\n\n 在计算机中, 含有小数的数根据存储和处理的方式分为两种:   \n 1. 定点数\n 2. 浮点数\n\n## 定点数 ##\n定点数: 小数点的位置是约定好固定的, 按照顶点的位置分隔出整数部分和小数部分.   \n\n如: 25.125 (D, 8bit存储)   \n+ 整数部分: 25使用二进制表示为11001 (B)\n+ 小数部分: 0.125使用二进制表示为 .001 (B)\n+ 合并起来就是: 1 1001.001 (B)   \n\n上面的例子我们约定了8bit中的前5位作为整数部分, 后3位作为小数部分,   \n但是这种方式会有两个缺点, 其一是可能会有被浪费的数据位, 其二就是能表示的精度很小.\n\n## 浮点数 ##\n浮点数: 顾名思义就是小数点的位置不固定, 其表示方式类似于科学计数法(规格化).   \n\n如: 112.5 (D, 单精度IEEE754标准)   \n1. 转二进制 111 0000.1 (B)\n2. 规格化(类似科学计数法) 1.1100 001 * 2^6 其中6是十进制, 其余为二进制\n3. 进行阶码偏移量处理 6 + 127 = 133 (D) = 1000 0101 (B)\n4. 根据 符号位, 阶码, 尾数 的占位进行填充   \n   0(1位符号位) 10000101(8位阶码) 11100001...补0(23位尾数)   \n\n> IEEE754标准 单精度为32位 1位符号位 8位阶码 23位尾数 阶码偏移量为127   \n> 双精度则是64位 1位符号位 11位阶码 52位尾数 阶码偏移量为1023\n\n# 进制 #\n\n## 进制后缀 ##\n1. 二进制(BIN) B   \n2. 八进制(OCT) O或Q\n3. 十进制(DEC) D\n4. 十六进制(HEX) H   \n\n## 进制间相互转换(定点数) ##\n\n1. 二进制转十进制(其他进制同理)   \n   <img src=\"https://s2.loli.net/2023/04/02/lcazhDGxt8JCk3e.webp\"/>\n2. 十进制转二进制(其他进制同理)   \n   <img src=\"https://s2.loli.net/2023/04/02/3EOTAH6iKyUWQf8.webp\"/>\n\n# 机器数 #\n\n## 机器数的相互转换 ##\n\n### 正数 ###\n\n原码, 反码, 补码都一样.\n\n### 负数 ###\n\n#### 反码的转换 ####\n\n1. 原码->反码: 除了符号位外, 所有位取反.   \n2. 反码->原码: 除了符号位外, 所有位取反.   \n\n#### 补码的转换 ####\n\n1. 原码->补码: 除了符号位外, 所有位取反, 最低位+1(也就是反码+1, 注意先取反再+1).\n2. 补码->原码: 除了符号位外, 最低位-1, 所有位取反.   \n\n## 反码和补码的意义 ##\n\n反码和补码的出现都是为了解决计算机不能做减法的问题. 但其实反码已经解决了减法问题了,    \n但是使用反码会出现一个问题, 就是会出现+0和-0, 也就是0000和1111. 这会导致0的编码值在   \n计算机中不是唯一的.\n> 需要注意计算机中的加减法都是使用补码进行运算的, 结果也是补码, 但显示的是原码.\n\n## 补码原理 ##\n\n从结果论的表现的来说, 原理就是利用了模的溢出, 将模的溢出参与到计算当中, 就如同时钟上12-2和12+10的结果是一样的.   \n至于真正为什么补码要这么设计, 可以看看下面引用的链接.\n\n> 计算机补码运算背后的数学原理是什么？ - Sunanki的回答 - 知乎\n> <https://www.zhihu.com/question/30395946/answer/328785755>","source":"_posts/计算机基础/信息表示.md","raw":"---\ntitle: \"信息表示\"\ndate: 2023-01-29 11:18:17\ncategories: [\"计算机基础\"]\ntags: []\n---\n\n# 定点数和浮点数 #\n\n 在计算机中, 含有小数的数根据存储和处理的方式分为两种:   \n 1. 定点数\n 2. 浮点数\n\n## 定点数 ##\n定点数: 小数点的位置是约定好固定的, 按照顶点的位置分隔出整数部分和小数部分.   \n\n如: 25.125 (D, 8bit存储)   \n+ 整数部分: 25使用二进制表示为11001 (B)\n+ 小数部分: 0.125使用二进制表示为 .001 (B)\n+ 合并起来就是: 1 1001.001 (B)   \n\n上面的例子我们约定了8bit中的前5位作为整数部分, 后3位作为小数部分,   \n但是这种方式会有两个缺点, 其一是可能会有被浪费的数据位, 其二就是能表示的精度很小.\n\n## 浮点数 ##\n浮点数: 顾名思义就是小数点的位置不固定, 其表示方式类似于科学计数法(规格化).   \n\n如: 112.5 (D, 单精度IEEE754标准)   \n1. 转二进制 111 0000.1 (B)\n2. 规格化(类似科学计数法) 1.1100 001 * 2^6 其中6是十进制, 其余为二进制\n3. 进行阶码偏移量处理 6 + 127 = 133 (D) = 1000 0101 (B)\n4. 根据 符号位, 阶码, 尾数 的占位进行填充   \n   0(1位符号位) 10000101(8位阶码) 11100001...补0(23位尾数)   \n\n> IEEE754标准 单精度为32位 1位符号位 8位阶码 23位尾数 阶码偏移量为127   \n> 双精度则是64位 1位符号位 11位阶码 52位尾数 阶码偏移量为1023\n\n# 进制 #\n\n## 进制后缀 ##\n1. 二进制(BIN) B   \n2. 八进制(OCT) O或Q\n3. 十进制(DEC) D\n4. 十六进制(HEX) H   \n\n## 进制间相互转换(定点数) ##\n\n1. 二进制转十进制(其他进制同理)   \n   <img src=\"https://s2.loli.net/2023/04/02/lcazhDGxt8JCk3e.webp\"/>\n2. 十进制转二进制(其他进制同理)   \n   <img src=\"https://s2.loli.net/2023/04/02/3EOTAH6iKyUWQf8.webp\"/>\n\n# 机器数 #\n\n## 机器数的相互转换 ##\n\n### 正数 ###\n\n原码, 反码, 补码都一样.\n\n### 负数 ###\n\n#### 反码的转换 ####\n\n1. 原码->反码: 除了符号位外, 所有位取反.   \n2. 反码->原码: 除了符号位外, 所有位取反.   \n\n#### 补码的转换 ####\n\n1. 原码->补码: 除了符号位外, 所有位取反, 最低位+1(也就是反码+1, 注意先取反再+1).\n2. 补码->原码: 除了符号位外, 最低位-1, 所有位取反.   \n\n## 反码和补码的意义 ##\n\n反码和补码的出现都是为了解决计算机不能做减法的问题. 但其实反码已经解决了减法问题了,    \n但是使用反码会出现一个问题, 就是会出现+0和-0, 也就是0000和1111. 这会导致0的编码值在   \n计算机中不是唯一的.\n> 需要注意计算机中的加减法都是使用补码进行运算的, 结果也是补码, 但显示的是原码.\n\n## 补码原理 ##\n\n从结果论的表现的来说, 原理就是利用了模的溢出, 将模的溢出参与到计算当中, 就如同时钟上12-2和12+10的结果是一样的.   \n至于真正为什么补码要这么设计, 可以看看下面引用的链接.\n\n> 计算机补码运算背后的数学原理是什么？ - Sunanki的回答 - 知乎\n> <https://www.zhihu.com/question/30395946/answer/328785755>","slug":"计算机基础/信息表示","published":1,"updated":"2023-04-03T01:28:08.614Z","_id":"clfyj4cf70011t4v6abuqgdal","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"定点数和浮点数\"><a href=\"#定点数和浮点数\" class=\"headerlink\" title=\"定点数和浮点数\"></a>定点数和浮点数</h1><p> 在计算机中, 含有小数的数根据存储和处理的方式分为两种:   </p>\n<ol>\n<li>定点数</li>\n<li>浮点数</li>\n</ol>\n<h2 id=\"定点数\"><a href=\"#定点数\" class=\"headerlink\" title=\"定点数\"></a>定点数</h2><p>定点数: 小数点的位置是约定好固定的, 按照顶点的位置分隔出整数部分和小数部分.   </p>\n<p>如: 25.125 (D, 8bit存储)   </p>\n<ul>\n<li>整数部分: 25使用二进制表示为11001 (B)</li>\n<li>小数部分: 0.125使用二进制表示为 .001 (B)</li>\n<li>合并起来就是: 1 1001.001 (B)</li>\n</ul>\n<p>上面的例子我们约定了8bit中的前5位作为整数部分, 后3位作为小数部分,<br>但是这种方式会有两个缺点, 其一是可能会有被浪费的数据位, 其二就是能表示的精度很小.</p>\n<h2 id=\"浮点数\"><a href=\"#浮点数\" class=\"headerlink\" title=\"浮点数\"></a>浮点数</h2><p>浮点数: 顾名思义就是小数点的位置不固定, 其表示方式类似于科学计数法(规格化).   </p>\n<p>如: 112.5 (D, 单精度IEEE754标准)   </p>\n<ol>\n<li>转二进制 111 0000.1 (B)</li>\n<li>规格化(类似科学计数法) 1.1100 001 * 2^6 其中6是十进制, 其余为二进制</li>\n<li>进行阶码偏移量处理 6 + 127 &#x3D; 133 (D) &#x3D; 1000 0101 (B)</li>\n<li>根据 符号位, 阶码, 尾数 的占位进行填充<br>0(1位符号位) 10000101(8位阶码) 11100001…补0(23位尾数)</li>\n</ol>\n<blockquote>\n<p>IEEE754标准 单精度为32位 1位符号位 8位阶码 23位尾数 阶码偏移量为127<br>双精度则是64位 1位符号位 11位阶码 52位尾数 阶码偏移量为1023</p>\n</blockquote>\n<h1 id=\"进制\"><a href=\"#进制\" class=\"headerlink\" title=\"进制\"></a>进制</h1><h2 id=\"进制后缀\"><a href=\"#进制后缀\" class=\"headerlink\" title=\"进制后缀\"></a>进制后缀</h2><ol>\n<li>二进制(BIN) B   </li>\n<li>八进制(OCT) O或Q</li>\n<li>十进制(DEC) D</li>\n<li>十六进制(HEX) H</li>\n</ol>\n<h2 id=\"进制间相互转换-定点数\"><a href=\"#进制间相互转换-定点数\" class=\"headerlink\" title=\"进制间相互转换(定点数)\"></a>进制间相互转换(定点数)</h2><ol>\n<li>二进制转十进制(其他进制同理)   <img src=\"https://s2.loli.net/2023/04/02/lcazhDGxt8JCk3e.webp\"/></li>\n<li>十进制转二进制(其他进制同理)   <img src=\"https://s2.loli.net/2023/04/02/3EOTAH6iKyUWQf8.webp\"/></li>\n</ol>\n<h1 id=\"机器数\"><a href=\"#机器数\" class=\"headerlink\" title=\"机器数\"></a>机器数</h1><h2 id=\"机器数的相互转换\"><a href=\"#机器数的相互转换\" class=\"headerlink\" title=\"机器数的相互转换\"></a>机器数的相互转换</h2><h3 id=\"正数\"><a href=\"#正数\" class=\"headerlink\" title=\"正数\"></a>正数</h3><p>原码, 反码, 补码都一样.</p>\n<h3 id=\"负数\"><a href=\"#负数\" class=\"headerlink\" title=\"负数\"></a>负数</h3><h4 id=\"反码的转换\"><a href=\"#反码的转换\" class=\"headerlink\" title=\"反码的转换\"></a>反码的转换</h4><ol>\n<li>原码-&gt;反码: 除了符号位外, 所有位取反.   </li>\n<li>反码-&gt;原码: 除了符号位外, 所有位取反.</li>\n</ol>\n<h4 id=\"补码的转换\"><a href=\"#补码的转换\" class=\"headerlink\" title=\"补码的转换\"></a>补码的转换</h4><ol>\n<li>原码-&gt;补码: 除了符号位外, 所有位取反, 最低位+1(也就是反码+1, 注意先取反再+1).</li>\n<li>补码-&gt;原码: 除了符号位外, 最低位-1, 所有位取反.</li>\n</ol>\n<h2 id=\"反码和补码的意义\"><a href=\"#反码和补码的意义\" class=\"headerlink\" title=\"反码和补码的意义\"></a>反码和补码的意义</h2><p>反码和补码的出现都是为了解决计算机不能做减法的问题. 但其实反码已经解决了减法问题了,<br>但是使用反码会出现一个问题, 就是会出现+0和-0, 也就是0000和1111. 这会导致0的编码值在<br>计算机中不是唯一的.</p>\n<blockquote>\n<p>需要注意计算机中的加减法都是使用补码进行运算的, 结果也是补码, 但显示的是原码.</p>\n</blockquote>\n<h2 id=\"补码原理\"><a href=\"#补码原理\" class=\"headerlink\" title=\"补码原理\"></a>补码原理</h2><p>从结果论的表现的来说, 原理就是利用了模的溢出, 将模的溢出参与到计算当中, 就如同时钟上12-2和12+10的结果是一样的.<br>至于真正为什么补码要这么设计, 可以看看下面引用的链接.</p>\n<blockquote>\n<p>计算机补码运算背后的数学原理是什么？ - Sunanki的回答 - 知乎<br><a href=\"https://www.zhihu.com/question/30395946/answer/328785755\">https://www.zhihu.com/question/30395946/answer/328785755</a></p>\n</blockquote>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"定点数和浮点数\"><a href=\"#定点数和浮点数\" class=\"headerlink\" title=\"定点数和浮点数\"></a>定点数和浮点数</h1><p> 在计算机中, 含有小数的数根据存储和处理的方式分为两种:   </p>\n<ol>\n<li>定点数</li>\n<li>浮点数</li>\n</ol>\n<h2 id=\"定点数\"><a href=\"#定点数\" class=\"headerlink\" title=\"定点数\"></a>定点数</h2><p>定点数: 小数点的位置是约定好固定的, 按照顶点的位置分隔出整数部分和小数部分.   </p>\n<p>如: 25.125 (D, 8bit存储)   </p>\n<ul>\n<li>整数部分: 25使用二进制表示为11001 (B)</li>\n<li>小数部分: 0.125使用二进制表示为 .001 (B)</li>\n<li>合并起来就是: 1 1001.001 (B)</li>\n</ul>\n<p>上面的例子我们约定了8bit中的前5位作为整数部分, 后3位作为小数部分,<br>但是这种方式会有两个缺点, 其一是可能会有被浪费的数据位, 其二就是能表示的精度很小.</p>\n<h2 id=\"浮点数\"><a href=\"#浮点数\" class=\"headerlink\" title=\"浮点数\"></a>浮点数</h2><p>浮点数: 顾名思义就是小数点的位置不固定, 其表示方式类似于科学计数法(规格化).   </p>\n<p>如: 112.5 (D, 单精度IEEE754标准)   </p>\n<ol>\n<li>转二进制 111 0000.1 (B)</li>\n<li>规格化(类似科学计数法) 1.1100 001 * 2^6 其中6是十进制, 其余为二进制</li>\n<li>进行阶码偏移量处理 6 + 127 &#x3D; 133 (D) &#x3D; 1000 0101 (B)</li>\n<li>根据 符号位, 阶码, 尾数 的占位进行填充<br>0(1位符号位) 10000101(8位阶码) 11100001…补0(23位尾数)</li>\n</ol>\n<blockquote>\n<p>IEEE754标准 单精度为32位 1位符号位 8位阶码 23位尾数 阶码偏移量为127<br>双精度则是64位 1位符号位 11位阶码 52位尾数 阶码偏移量为1023</p>\n</blockquote>\n<h1 id=\"进制\"><a href=\"#进制\" class=\"headerlink\" title=\"进制\"></a>进制</h1><h2 id=\"进制后缀\"><a href=\"#进制后缀\" class=\"headerlink\" title=\"进制后缀\"></a>进制后缀</h2><ol>\n<li>二进制(BIN) B   </li>\n<li>八进制(OCT) O或Q</li>\n<li>十进制(DEC) D</li>\n<li>十六进制(HEX) H</li>\n</ol>\n<h2 id=\"进制间相互转换-定点数\"><a href=\"#进制间相互转换-定点数\" class=\"headerlink\" title=\"进制间相互转换(定点数)\"></a>进制间相互转换(定点数)</h2><ol>\n<li>二进制转十进制(其他进制同理)   <img src=\"https://s2.loli.net/2023/04/02/lcazhDGxt8JCk3e.webp\"/></li>\n<li>十进制转二进制(其他进制同理)   <img src=\"https://s2.loli.net/2023/04/02/3EOTAH6iKyUWQf8.webp\"/></li>\n</ol>\n<h1 id=\"机器数\"><a href=\"#机器数\" class=\"headerlink\" title=\"机器数\"></a>机器数</h1><h2 id=\"机器数的相互转换\"><a href=\"#机器数的相互转换\" class=\"headerlink\" title=\"机器数的相互转换\"></a>机器数的相互转换</h2><h3 id=\"正数\"><a href=\"#正数\" class=\"headerlink\" title=\"正数\"></a>正数</h3><p>原码, 反码, 补码都一样.</p>\n<h3 id=\"负数\"><a href=\"#负数\" class=\"headerlink\" title=\"负数\"></a>负数</h3><h4 id=\"反码的转换\"><a href=\"#反码的转换\" class=\"headerlink\" title=\"反码的转换\"></a>反码的转换</h4><ol>\n<li>原码-&gt;反码: 除了符号位外, 所有位取反.   </li>\n<li>反码-&gt;原码: 除了符号位外, 所有位取反.</li>\n</ol>\n<h4 id=\"补码的转换\"><a href=\"#补码的转换\" class=\"headerlink\" title=\"补码的转换\"></a>补码的转换</h4><ol>\n<li>原码-&gt;补码: 除了符号位外, 所有位取反, 最低位+1(也就是反码+1, 注意先取反再+1).</li>\n<li>补码-&gt;原码: 除了符号位外, 最低位-1, 所有位取反.</li>\n</ol>\n<h2 id=\"反码和补码的意义\"><a href=\"#反码和补码的意义\" class=\"headerlink\" title=\"反码和补码的意义\"></a>反码和补码的意义</h2><p>反码和补码的出现都是为了解决计算机不能做减法的问题. 但其实反码已经解决了减法问题了,<br>但是使用反码会出现一个问题, 就是会出现+0和-0, 也就是0000和1111. 这会导致0的编码值在<br>计算机中不是唯一的.</p>\n<blockquote>\n<p>需要注意计算机中的加减法都是使用补码进行运算的, 结果也是补码, 但显示的是原码.</p>\n</blockquote>\n<h2 id=\"补码原理\"><a href=\"#补码原理\" class=\"headerlink\" title=\"补码原理\"></a>补码原理</h2><p>从结果论的表现的来说, 原理就是利用了模的溢出, 将模的溢出参与到计算当中, 就如同时钟上12-2和12+10的结果是一样的.<br>至于真正为什么补码要这么设计, 可以看看下面引用的链接.</p>\n<blockquote>\n<p>计算机补码运算背后的数学原理是什么？ - Sunanki的回答 - 知乎<br><a href=\"https://www.zhihu.com/question/30395946/answer/328785755\">https://www.zhihu.com/question/30395946/answer/328785755</a></p>\n</blockquote>\n"},{"title":"信息表示","date":"2023-01-29T03:18:17.000Z","_content":"\n# 常用进制 #\n\n## 二进制 ##\n\n后缀**B**\n\n## 八进制 ##\n\n后缀**O**或者**Q**\n","source":"_posts/信息表示.md","raw":"---\ntitle: \"信息表示\"\ndate: 2023-01-29 11:18:17\ncategories: [\"计算机组成原理\", \"信息表示\"]\ntags: [\"进制\", \"位运算\"]\n---\n\n# 常用进制 #\n\n## 二进制 ##\n\n后缀**B**\n\n## 八进制 ##\n\n后缀**O**或者**Q**\n","slug":"信息表示","published":1,"updated":"2023-01-29T08:18:31.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfzr3zk40000icv69qba9xqm","content":"<h1 id=\"常用进制\"><a href=\"#常用进制\" class=\"headerlink\" title=\"常用进制\"></a>常用进制</h1><h2 id=\"二进制\"><a href=\"#二进制\" class=\"headerlink\" title=\"二进制\"></a>二进制</h2><p>后缀<strong>B</strong></p>\n<h2 id=\"八进制\"><a href=\"#八进制\" class=\"headerlink\" title=\"八进制\"></a>八进制</h2><p>后缀<strong>O</strong>或者<strong>Q</strong></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"常用进制\"><a href=\"#常用进制\" class=\"headerlink\" title=\"常用进制\"></a>常用进制</h1><h2 id=\"二进制\"><a href=\"#二进制\" class=\"headerlink\" title=\"二进制\"></a>二进制</h2><p>后缀<strong>B</strong></p>\n<h2 id=\"八进制\"><a href=\"#八进制\" class=\"headerlink\" title=\"八进制\"></a>八进制</h2><p>后缀<strong>O</strong>或者<strong>Q</strong></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clfyj4cen0001t4v69h3ueejo","category_id":"clfyj4ces0003t4v6hkscfhse","_id":"clfyj4cey000dt4v63spt9agk"},{"post_id":"clfyj4ceu0005t4v6aj2wbqii","category_id":"clfyj4cew0008t4v6cvan87b5","_id":"clfyj4cf1000jt4v667al0rfv"},{"post_id":"clfyj4cev0006t4v65vph25fo","category_id":"clfyj4cez000et4v621xn2lga","_id":"clfyj4cf4000qt4v61bleavnn"},{"post_id":"clfyj4cew0007t4v60s9v12fz","category_id":"clfyj4cez000et4v621xn2lga","_id":"clfyj4cf6000ut4v6456teq3v"},{"post_id":"clfyj4cex000bt4v68w8w37nb","category_id":"clfyj4cf4000pt4v62vcq1bqe","_id":"clfyj4cf70010t4v63km0f66v"},{"post_id":"clfyj4cey000ct4v67evj5wq3","category_id":"clfyj4cf4000pt4v62vcq1bqe","_id":"clfyj4cf90015t4v6ehme4czx"},{"post_id":"clfyj4cf7000yt4v6f54i2tao","category_id":"clfyj4cew0008t4v6cvan87b5","_id":"clfyj4cf90018t4v69pdvdsa5"},{"post_id":"clfyj4cez000gt4v66wbp6rww","category_id":"clfyj4cf4000pt4v62vcq1bqe","_id":"clfyj4cf9001bt4v6443o8ptk"},{"post_id":"clfyj4cf0000it4v6dg7vbi6b","category_id":"clfyj4cf4000pt4v62vcq1bqe","_id":"clfyj4cfa001gt4v610qy19kn"},{"post_id":"clfyj4cf2000mt4v6c3ys8r55","category_id":"clfyj4cf4000pt4v62vcq1bqe","_id":"clfyj4cfb001jt4v6far13o6c"},{"post_id":"clfyj4cf3000ot4v6dsf6a3gx","category_id":"clfyj4cfa001ft4v6ebhy3tcw","_id":"clfyj4cfc001nt4v6do1mfozs"},{"post_id":"clfyj4cf5000st4v6ey7a0si2","category_id":"clfyj4cfb001kt4v6hzbxhqr4","_id":"clfyj4cfc001st4v628gz97uw"},{"post_id":"clfyj4cf5000tt4v6950cbvlo","category_id":"clfyj4cfb001kt4v6hzbxhqr4","_id":"clfyj4cfd001ut4v60wk555s1"},{"post_id":"clfyj4cf6000xt4v67fyif1ch","category_id":"clfyj4cfc001rt4v6gxjmedku","_id":"clfyj4cfd001yt4v634i6eph3"},{"post_id":"clfyj4cf70011t4v6abuqgdal","category_id":"clfyj4cfd001vt4v60l344qmm","_id":"clfyj4cfe0022t4v6447y0alm"},{"post_id":"clfzr3zk40000icv69qba9xqm","category_id":"clfzr3zke0001icv66oa2gsfn","_id":"clfzr3zkm0007icv68liph15l"},{"post_id":"clfzr3zk40000icv69qba9xqm","category_id":"clfzr3zkl0004icv60vh2bmas","_id":"clfzr3zkm0008icv6d6sw4klt"}],"PostTag":[{"post_id":"clfyj4cen0001t4v69h3ueejo","tag_id":"clfyj4cet0004t4v6c9m0fsog","_id":"clfyj4cex000at4v66eyp9skn"},{"post_id":"clfyj4ceu0005t4v6aj2wbqii","tag_id":"clfyj4cew0009t4v60teq4a6p","_id":"clfyj4cf0000ht4v694zw5blf"},{"post_id":"clfyj4cev0006t4v65vph25fo","tag_id":"clfyj4cez000ft4v618xydv07","_id":"clfyj4cf3000nt4v60pqv4nuy"},{"post_id":"clfyj4cew0007t4v60s9v12fz","tag_id":"clfyj4cez000ft4v618xydv07","_id":"clfyj4cf80013t4v660uv5wmq"},{"post_id":"clfyj4cew0007t4v60s9v12fz","tag_id":"clfyj4cf4000rt4v60mtu4idc","_id":"clfyj4cf90016t4v621qw8efn"},{"post_id":"clfyj4cew0007t4v60s9v12fz","tag_id":"clfyj4cf6000wt4v6d161ffuy","_id":"clfyj4cf90019t4v60reaerhn"},{"post_id":"clfyj4cex000bt4v68w8w37nb","tag_id":"clfyj4cf80012t4v68y6ret0e","_id":"clfyj4cfa001ct4v601lgek3h"},{"post_id":"clfyj4cey000ct4v67evj5wq3","tag_id":"clfyj4cf80012t4v68y6ret0e","_id":"clfyj4cfa001et4v68himc7hq"},{"post_id":"clfyj4cez000gt4v66wbp6rww","tag_id":"clfyj4cf80012t4v68y6ret0e","_id":"clfyj4cfb001it4v62406a836"},{"post_id":"clfyj4cf0000it4v6dg7vbi6b","tag_id":"clfyj4cf80012t4v68y6ret0e","_id":"clfyj4cfb001mt4v652nx6xqd"},{"post_id":"clfyj4cf2000mt4v6c3ys8r55","tag_id":"clfyj4cf80012t4v68y6ret0e","_id":"clfyj4cfc001qt4v65mvv4oi0"},{"post_id":"clfyj4cf3000ot4v6dsf6a3gx","tag_id":"clfyj4cfc001pt4v6870v09o4","_id":"clfyj4cfd001xt4v6ec5dhk13"},{"post_id":"clfyj4cf3000ot4v6dsf6a3gx","tag_id":"clfyj4cfc001tt4v66pnhfm76","_id":"clfyj4cfd001zt4v6fyx8gofj"},{"post_id":"clfyj4cf5000st4v6ey7a0si2","tag_id":"clfyj4cfd001wt4v6brrj2txs","_id":"clfyj4cfe0021t4v6eqo83slu"},{"post_id":"clfyj4cf5000tt4v6950cbvlo","tag_id":"clfyj4cfd0020t4v61qxw575d","_id":"clfyj4cfe0024t4v69mzmftwm"},{"post_id":"clfyj4cf6000xt4v67fyif1ch","tag_id":"clfyj4cfe0023t4v6djwv872m","_id":"clfyj4cff0026t4v61mo0a03r"},{"post_id":"clfyj4cf7000yt4v6f54i2tao","tag_id":"clfyj4cfe0025t4v65vzt4pyt","_id":"clfyj4cff0027t4v65wbj3bpu"},{"post_id":"clfzr3zk40000icv69qba9xqm","tag_id":"clfzr3zkj0002icv6064cf4un","_id":"clfzr3zkl0005icv683099cvx"},{"post_id":"clfzr3zk40000icv69qba9xqm","tag_id":"clfzr3zkk0003icv6a32ugfp5","_id":"clfzr3zkm0006icv6hf72eybk"}],"Tag":[{"name":"IDE","_id":"clfyj4cet0004t4v6c9m0fsog"},{"name":"加密","_id":"clfyj4cew0009t4v60teq4a6p"},{"name":"git","_id":"clfyj4cez000ft4v618xydv07"},{"name":"网络代理","_id":"clfyj4cf4000rt4v60mtu4idc"},{"name":"GitHub","_id":"clfyj4cf6000wt4v6d161ffuy"},{"name":"RO","_id":"clfyj4cf80012t4v68y6ret0e"},{"name":"元表","_id":"clfyj4cfc001pt4v6870v09o4"},{"name":"原方法","_id":"clfyj4cfc001tt4v66pnhfm76"},{"name":"rider","_id":"clfyj4cfd001wt4v6brrj2txs"},{"name":"unityHub","_id":"clfyj4cfd0020t4v61qxw575d"},{"name":"hexo","_id":"clfyj4cfe0023t4v6djwv872m"},{"name":"Markdown","_id":"clfyj4cfe0025t4v65vzt4pyt"},{"name":"进制","_id":"clfzr3zkj0002icv6064cf4un"},{"name":"位运算","_id":"clfzr3zkk0003icv6a32ugfp5"}]}}