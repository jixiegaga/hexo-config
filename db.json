{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/keqing1.webp","path":"images/keqing1.webp","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"3eb412d2680b075243a17fa7ece84bf2bbdf1ac2","modified":1674095635729},{"_id":"source/_posts/文章加密.md","hash":"54713a37eeb9f721ead24a812add7392c9ee266a","modified":1675168349346},{"_id":"source/_posts/信息表示.md","hash":"9111fd4b4038e3452ff04be2aa96187b15e215da","modified":1674980311516},{"_id":"source/categories/index.md","hash":"76ade2c3c4e288d8c19276ee831d03374eb6432d","modified":1674973028743},{"_id":"source/_posts/Hello.md","hash":"ab4314159f2245859013a4bd37d1e4951f4fe9c4","modified":1675088655689},{"_id":"source/_posts/Rider 快捷键.md","hash":"98a446da2b2964e88f560bd42de6ca37621949a1","modified":1676545839725},{"_id":"source/_posts/Git/git缓存设置.md","hash":"1b6235ab4e0bd6acb665c8250151f22bb5afdf31","modified":1678626260668},{"_id":"source/_posts/Lua语言/lua元表.md","hash":"76540a394c167d4ab478fbd9aa827f0d09fb0e5c","modified":1675264989771},{"_id":"source/_posts/Git/git网络配置.md","hash":"e844511f08643943ef0fc945ab0627e82c144483","modified":1678626258755},{"_id":"source/_posts/网站搭建/hexo笔记.md","hash":"a601312b390c0a639b01355b3649f317f0d0b79b","modified":1679766331017},{"_id":"source/_posts/网站搭建/markdown常用语法.md","hash":"4f54fcde549169100d2e644b9aee53dcc71b6249","modified":1675167608916},{"_id":"source/_posts/RO/RO上手流程梳理(1).md","hash":"5bda1eff2200a71acbe72356e376df893b5d64d7","modified":1675244486071},{"_id":"source/_posts/RO/RO上手流程梳理(2).md","hash":"c7d31444c4e52e6fe6eea2271ac58c29e78fa93f","modified":1675318460507},{"_id":"source/_posts/RO/RO上手流程梳理(3).md","hash":"ad8b9838d19924be06187d6ca60fe259bc68631c","modified":1675415700417},{"_id":"source/_posts/RO/RO上手流程梳理(4).md","hash":"f435a5de058c7139f60a8fda75a21e1a21b4a547","modified":1677209500996},{"_id":"source/images/keqing1.webp","hash":"f2ea89b3ad10906c588c9d6ea09b34cb29ec1ecf","modified":1674995911886},{"_id":"themes/butterfly/_config.yml","hash":"8bdf336009bab115ec7778d0d4761979c16082a2","modified":1674099156600},{"_id":"themes/butterfly/plugins.yml","hash":"8e3b5e44ff0e7e9c5779234bf21e1e70aeec5ae8","modified":1674099156658},{"_id":"themes/butterfly/languages/default.yml","hash":"a62bfe75c32dd0c2754b6fc70df027947ed1e711","modified":1674099156601},{"_id":"themes/butterfly/package.json","hash":"822d83111feefd6a026b14fedef7871960ab434f","modified":1674099156657},{"_id":"themes/butterfly/languages/en.yml","hash":"9d83a52e3fe3c086eadcdd9bca50829ca9b3a188","modified":1674099156602},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"30b69c969394392e4bdd3763873ceed0d473cfcb","modified":1674099156602},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1674099156603},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1674099156603},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1674099156655},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1674099156656},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1674099156655},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"c2f1111d0cffddbf04248a7daa55c7895b9e4cf3","modified":1674099156602},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1674099156656},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1674099156596},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1674099156598},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1674099156596},{"_id":"themes/butterfly/README_CN.md","hash":"d0f7a24732855ae340f94e8286085d5387850cde","modified":1674099156600},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1674099156597},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1674099156604},{"_id":"themes/butterfly/README.md","hash":"15e7f6386b4fd3fa4a6c179ddf641e1ae57eafa2","modified":1674099156599},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"bfc28cb79e81f55c09672fb8e4372a71e0994761","modified":1674099156605},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1674099156605},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ab32b8d4ef682bd1d9b727b9d25a19dc06f3e68e","modified":1674099156605},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"25cd2d7c4d3f6836a157b73a2442a7712ff40b34","modified":1674099156613},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"5f96a28a4eac046b68ccc10e8c24ab01525e3245","modified":1674099156620},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1674099156658},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1674099156618},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1674099156621},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"39a2f0088841abb89b3b801469266cc9568fced0","modified":1674099156659},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1674099156597},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1674099156660},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1674099156660},{"_id":"themes/butterfly/scripts/events/init.js","hash":"72605a00bf623b6cbc9fa0f90069ea2ae584c5c0","modified":1674099156659},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1674099156661},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"d33f0a055bacaa96ee5b69f821292d87658f4b0c","modified":1674099156661},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1674099156662},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1674099156662},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1674099156662},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"40f85785d041b976f47a2828b0dc54346dcb62b0","modified":1674099156663},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"ade8ce15cc7f41587e616f8e40f565081aee1c37","modified":1674099156664},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1674099156664},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1674099156665},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1674099156665},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1674099156659},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"bc74b7701ac07ff679b699d63e706935b37a8b7b","modified":1674099156665},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1674099156666},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1674099156666},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1674099156667},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1674099156667},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1674099156690},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1674099156668},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1674099156668},{"_id":"themes/butterfly/source/css/var.styl","hash":"63f12a6a847738b1479ce782c8caac5e0cf16a6b","modified":1674099156691},{"_id":"themes/butterfly/source/js/main.js","hash":"f049b166073c4bcdccc6d8348774941a4e2c6d7b","modified":1674099156694},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1674099156667},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"c4dac81869b33fa1590fae60a45b2e915a59c3ec","modified":1674099156695},{"_id":"themes/butterfly/source/js/utils.js","hash":"85a4f6e680ad2500ed114918158557ed85a8d89a","modified":1674099156696},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1674099156606},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"f4b80b4a3ff5dd877b447b42d078f01ee3ecab24","modified":1674099156607},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1674099156598},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1674099156608},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1674099156608},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1674099156608},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1674099156609},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1674099156609},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"e9f952f1b66a0116fccb812b14db0f229666e586","modified":1674099156610},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1674099156609},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1674099156611},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"40efa8e29460746b0d1253ce19b87eb035e25c47","modified":1674099156611},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1674099156606},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1674099156612},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1674099156613},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"767ca9b4dad126ba5fbd2f3ea5ca8d07c0d2b32c","modified":1674099156614},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1674099156615},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"39847b8a1f0fad7889954a4ac936b7681949f16c","modified":1674099156615},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"39c205027296dbd9fc9eb3cfd9d033bc5bd031b7","modified":1674099156616},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1674099156617},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1674099156617},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"a60d9cc9083142e3d92b618561abd557fcab502b","modified":1674099156617},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1674099156618},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1674099156619},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1674099156620},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1674099156616},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1674099156622},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1674099156637},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1674099156644},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1674099156644},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1674099156649},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d4836a2ce1c87a59cfa8e4986346bf353710277f","modified":1674099156649},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1674099156644},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1674099156650},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1674099156651},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1674099156650},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1674099156649},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1674099156651},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1674099156652},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1674099156653},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1674099156652},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1674099156654},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1674099156654},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1674099156654},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1674099156653},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"6a7a926b72c5083aa14051a0eca8d49e1c6261f1","modified":1674099156670},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c424b1a3119ffb8396d80bb3585f48bd6777c917","modified":1674099156670},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1674099156671},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1674099156675},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"7a12719a1ef2bce7d4056f2241251a71e92cd72c","modified":1674099156674},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1674099156674},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1674099156675},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"077ce6932261cf51696834a25d1d988fec6cd7d0","modified":1674099156676},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"d33f2d9001a82d9a72d6f4088743762fbd016e4c","modified":1674099156676},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"b0ba6f72848bc711bcf534c56b04ae14ab21b320","modified":1674099156677},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1674099156677},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1674099156678},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1674099156678},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1674099156676},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1674099156678},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"956ed11cc5d65941b49192b9be47cecfaed57a91","modified":1674099156679},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1674099156679},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"d072872714854cdc3d2975fb131ac31cb82b13e3","modified":1674099156680},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1674099156680},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"5dabc3a5330cc28f0666d1cd8db0d67f553fd854","modified":1674099156679},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1674099156681},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1674099156681},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1674099156681},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d83389e07f8851f1b9afafe0eacd1bf10ad334ef","modified":1674099156683},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1674099156683},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1674099156693},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1674099156682},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1674099156692},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1674099156692},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1674099156685},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1674099156686},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1674099156686},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1674099156687},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1674099156687},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1674099156688},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1674099156688},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1674099156689},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1674099156689},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1674099156690},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"73027a5e8b49d62b5b5a4d51663d5189f8eb7b4c","modified":1674099156694},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"e3e1b234a2595824576b8c9ed87af6d933f4e125","modified":1674099156684},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1674099156622},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1674099156623},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"aff5c34b6061b281c66a986cf017e9021dc11ac6","modified":1674099156624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1674099156624},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1674099156625},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1674099156625},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1674099156626},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3f59333064c4fc754c638f13a417b7be2569ca09","modified":1674099156626},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1674099156627},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1674099156627},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1674099156628},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1674099156628},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"a5ddcf84ce8855c7801289270009e29c3a103150","modified":1674099156628},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e703319ae5395273e81de11ba2366f21a104cf47","modified":1674099156629},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1674099156630},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1674099156637},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1674099156638},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"2a39dd634a80a735359206a2481f8468f34a0b5c","modified":1674099156638},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1674099156639},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"d6a2a828689d619943838d42f2c3a45551e2c6c4","modified":1674099156630},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1674099156631},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"ca1337586aafc85e7f6d730ed0a1984a1a12aba7","modified":1674099156631},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"fe599836225b835bd19fe1a6831fb4d41bcec071","modified":1674099156631},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1674099156632},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"77729ecfae68ad21ff1d22ff2c8aa212f4d405c6","modified":1674099156632},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1674099156633},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1674099156633},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1674099156634},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1674099156634},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1674099156635},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1674099156635},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1674099156635},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"6b0d28671afd5ed286a714f25ba16256a2e7d880","modified":1674099156636},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"77ac27a24b8347668c4df9d5c44c9461c69eaec9","modified":1674099156640},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1674099156641},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1674099156684},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1674099156642},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1674099156642},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1674099156641},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1674099156643},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"f434dce30f8faee0db5a8e4d2c81196b0e3605f4","modified":1674099156643},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1674099156643},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1674099156646},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1674099156646},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1674099156646},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1674099156647},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1674099156647},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1674099156648},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1674099156671},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1674099156672},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1674099156648},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"72a38c1dad7f55564b02c7a23e6ef39219edcd80","modified":1674099156685},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1674099156673},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"44b6d3fb2c9b437d85de751d83e2e92a0830451d","modified":1674099156695},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1674099156673},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1674099156672},{"_id":"public/archives/page/2/index.html","hash":"a636f92c40759e441f8f4dc376dfd75ac26db889","modified":1680185633407},{"_id":"public/archives/2023/page/2/index.html","hash":"7e93499d4c589d86772ecbc5d4f0ccc41c6b8ea5","modified":1680185633407},{"_id":"public/archives/2023/01/index.html","hash":"e15e4d4be41f64b85e824b1c98d36c1e8ea8c898","modified":1680185633407},{"_id":"public/archives/2023/02/index.html","hash":"1a61296170c50e3d58263212e4f5bc3bf30a0d41","modified":1680185633407},{"_id":"public/archives/2023/03/index.html","hash":"fd6184b2a93989dc5531dc6e90853808b1dbb7d0","modified":1680185633407},{"_id":"public/categories/index.html","hash":"c71034199dacfd6e99eb4e744a72be101b846680","modified":1680185633407},{"_id":"public/2023/03/10/网站搭建/hexo笔记/index.html","hash":"dc4ff99ec5a40e1a9ed7178a14903cd3eeea69d6","modified":1680185443372},{"_id":"public/2023/03/10/Git/git缓存设置/index.html","hash":"67ab5d963cbebc15b61bd5c3ed242c2cca1d96ac","modified":1680185443372},{"_id":"public/2023/02/21/RO/RO上手流程梳理(4)/index.html","hash":"98312f34f84e98a54a564aedd2ce28835b3d6876","modified":1680185443372},{"_id":"public/2023/02/16/Rider 快捷键/index.html","hash":"89d4a576314281b079c38e7211492d889528e2f6","modified":1680185443372},{"_id":"public/2023/02/01/Lua语言/lua元表/index.html","hash":"d49f67434aba2f232ce3475dd470cbce69fcbe93","modified":1680185443372},{"_id":"public/2023/02/01/RO/RO上手流程梳理(3)/index.html","hash":"8c7b7c607e8db111d560dfc0e7c7c5c4054d3ae3","modified":1680185443372},{"_id":"public/2023/02/01/RO/RO上手流程梳理(2)/index.html","hash":"cc9f04ed5dcb1d048b742c3533f1c7b72b820939","modified":1680185443372},{"_id":"public/2023/01/31/RO/RO上手流程梳理(1)/index.html","hash":"66dc11894078d06bf67b1f391dcf034722840647","modified":1680185443372},{"_id":"public/2023/01/31/文章加密/index.html","hash":"322e4be55102777e0c473eb3a036a9904ea4b889","modified":1680185443372},{"_id":"public/2023/01/30/Hello/index.html","hash":"d334231b660a2ec596b53979b1c2492306acdabd","modified":1680185443372},{"_id":"public/2023/01/30/Git/git网络配置/index.html","hash":"f91107857e3c15077bd64cd3fb101dc2babba2cc","modified":1680185443372},{"_id":"public/2023/01/29/网站搭建/markdown常用语法/index.html","hash":"dbeeb5cff0dba62c86973efcea5bcea3b86f2ad2","modified":1680185443372},{"_id":"public/2023/01/29/信息表示/index.html","hash":"6025e7109b1a7d0a96391a4c0913601bbb8065e9","modified":1680185443372},{"_id":"public/categories/编辑器/index.html","hash":"91db662bd2812dc8f3d3b387b4a7048d5b5eece1","modified":1680185633407},{"_id":"public/categories/博客搭建/index.html","hash":"5fd6c612334e03bb5538c34cbb49fb4ba6092d93","modified":1680185633407},{"_id":"public/categories/计算机组成原理/index.html","hash":"4ae0740d390299fbacf5788f9011883ea85c90db","modified":1680185633407},{"_id":"public/categories/Git/index.html","hash":"49847c61467cb14b329d1582f8b90caea15e9b41","modified":1678570215643},{"_id":"public/categories/Lua语言/index.html","hash":"6f4bfb495c4d47ca919eee12340ed9798ef28e8f","modified":1680185633407},{"_id":"public/categories/网站搭建/index.html","hash":"bae4903fb719d78e1006e4dd31d1f3b07b69c6b0","modified":1680185633407},{"_id":"public/categories/计算机组成原理/信息表示/index.html","hash":"6bd7bcc98eae33b87070362f7fa51d375279fd89","modified":1680185633407},{"_id":"public/categories/RO/index.html","hash":"a2356578063035a943d262e6f850a9396c9eb6dc","modified":1680185633407},{"_id":"public/index.html","hash":"808143552ebcabeb42a7d1e1ecd12abfecb8076f","modified":1680185633407},{"_id":"public/page/2/index.html","hash":"24d55f2d711300310ebeef5ac2af4418b9fb9fbe","modified":1680185633407},{"_id":"public/tags/IDE/index.html","hash":"7733e54142e887ba87dc65e48973660f8988e4bc","modified":1680185633407},{"_id":"public/tags/加密/index.html","hash":"30de96a93afc4fb3a5a7e65ef4387ef43bfd5005","modified":1680185633407},{"_id":"public/tags/进制/index.html","hash":"ba7fc3931279c67df6b0a71772357926a93743ad","modified":1680185633407},{"_id":"public/tags/位运算/index.html","hash":"38bbc94fcad215d491a65dcb20146ed83a27b9d8","modified":1680185633407},{"_id":"public/tags/Git/index.html","hash":"f632d122e9914a1f0b921b7d418eb55dfe235168","modified":1678570215643},{"_id":"public/tags/网络代理/index.html","hash":"2ffbe0b925e2af81b5fc5df73691e57bc5b0be69","modified":1680185633407},{"_id":"public/tags/Github/index.html","hash":"7bd6fab5ea354ade8a5b64e471a59a981835bb93","modified":1678570215643},{"_id":"public/tags/元表/index.html","hash":"4c99b7fc553ef71f04b62f0ae1cd8d74241c9333","modified":1680185633407},{"_id":"public/tags/原方法/index.html","hash":"797459a912975b653ec0b6025c98c150f48156d4","modified":1680185633407},{"_id":"public/tags/hexo/index.html","hash":"efc152fd61342262f74c96cdd3071fd1aedbb839","modified":1680185633407},{"_id":"public/tags/Markdown/index.html","hash":"9bb7dfb08389b2ff7e7d0823bf0ee9c1ca589d0f","modified":1680185633407},{"_id":"public/tags/RO/index.html","hash":"2a5dc48cdee3510fb74ee3e53dd7fb046ec1839a","modified":1680185633407},{"_id":"public/archives/index.html","hash":"16bcaceaae78fae0516a60738655ff09924cf032","modified":1680185633407},{"_id":"public/archives/2023/index.html","hash":"3528ddfeb98393a4db22e7d74e552e3499ddf82e","modified":1680185633407},{"_id":"public/CNAME","hash":"3eb412d2680b075243a17fa7ece84bf2bbdf1ac2","modified":1678559387221},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1678559387221},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1678559387221},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1678559387221},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1678559387221},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1678559387221},{"_id":"public/js/utils.js","hash":"c9b4d8ec10a74f29cf1f9c4275f0cae3bd93b427","modified":1678559387221},{"_id":"public/js/search/algolia.js","hash":"5f4294337c28324e088908ed0ceb237a2a360ae5","modified":1678559387221},{"_id":"public/js/search/local-search.js","hash":"ee86f52bb6558c51a6f31402c2e4ec1dcb81bb55","modified":1678559387221},{"_id":"public/css/index.css","hash":"7e7ca7d8a1827d845cad2a5376719c497304208e","modified":1678559387221},{"_id":"public/js/tw_cn.js","hash":"76d0c5c172cae44b34b0bd3125fd068b2c3cbd4a","modified":1678559387221},{"_id":"public/js/main.js","hash":"c0a3093c2485fa2121c10741e256170f211c7398","modified":1678559387221},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1678559387221},{"_id":"public/images/keqing1.webp","hash":"f2ea89b3ad10906c588c9d6ea09b34cb29ec1ecf","modified":1678559387221},{"_id":"source/_posts/我是学生/unity学习版.md","hash":"5e48beb638effb225084e5e101c0f52e2887c3c8","modified":1678629518219},{"_id":"public/2023/03/12/我是学生/unity学习版/index.html","hash":"a316171d5c787cb3e55cf3b2e2913f183e87b243","modified":1680185443372},{"_id":"public/categories/git/index.html","hash":"da54e74c06000166fabb14d297bb834e397bf001","modified":1680185633407},{"_id":"public/categories/我是学生/index.html","hash":"a4c7a91d32ad60e8cf467b493c5f00a7571a9d75","modified":1680185633407},{"_id":"public/tags/git/index.html","hash":"dfd4c6e1b7a137257a79236c549bfe2c31776ee1","modified":1680185633407},{"_id":"public/tags/GitHub/index.html","hash":"7324086ba02a6c22d8a6d4114d7df6001d365b6b","modified":1680185633407},{"_id":"public/tags/unityHub/index.html","hash":"dd86312b70771dac865ea6f6206b2787f1f73fc9","modified":1680185633407},{"_id":"source/_posts/我是学生/rider学习版.md","hash":"d12ff9eb5422f719256571423b2d56871b8b3832","modified":1678894464591},{"_id":"public/2023/03/12/我是学生/rider学习版/index.html","hash":"98baf31e7fa1f03ae7a6e82fe1b610ad269bc278","modified":1680185443372},{"_id":"public/tags/rider/index.html","hash":"d25a62896747b32f0f0252adae19a763d86271ed","modified":1680185633407},{"_id":"source/_posts/RO笔记.md","hash":"25ad5463519b29f1057b8d428e6a1b8660a334a0","modified":1680182329973},{"_id":"source/_posts/RO/RO笔记.md","hash":"0c54c1c21493e44dbec3c058a6a2ac6a94b9c2a2","modified":1680180717452},{"_id":"public/2023/03/30/RO笔记/index.html","hash":"af5bc68f216b0934389eaf5c9a683c19b4e64b1f","modified":1680184882968},{"_id":"public/2023/03/30/RO/RO笔记/index.html","hash":"68fb37bc4aa2047ba035d4af1782cc26075f65e3","modified":1680185443372}],"Category":[{"name":"编辑器","_id":"clf4ax4tz000370v6akcchx22"},{"name":"博客搭建","_id":"clf4ax4ua000870v62teq3r99"},{"name":"计算机组成原理","_id":"clf4ax4ud000e70v64roy56in"},{"name":"Git","_id":"clf4ax4uf000k70v6cjfjf2b9"},{"name":"Lua语言","_id":"clf4ax4uk000v70v64hqr6t1r"},{"name":"网站搭建","_id":"clf4ax4ul001070v6druvhuol"},{"name":"信息表示","parent":"clf4ax4ud000e70v64roy56in","_id":"clf4ax4um001370v67xmj3znu"},{"name":"RO","_id":"clf4ax4um001670v65zk38htr"},{"name":"git","_id":"clf5gohit0000ugv66z3w0ij5"},{"name":"我是学生","_id":"clf5gohj10006ugv6b6162neq"}],"Data":[],"Page":[{"title":"分类","date":"2023-01-29T06:15:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-01-29 14:15:07\ntype: \"categories\"\n---\n","updated":"2023-01-29T06:17:08.743Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clf4ax4tn000070v636vkdves","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"Rider 快捷键","date":"2023-02-16T07:06:18.000Z","_content":"\n# Rider 快捷键 #\n\n## 位置相关 ##\n切换上个选项卡 Ctrl + PageUp   \n切换下个选项卡 Ctrl + PageDown   \n后退 Ctrl + -   \n前进 Ctrl + +   \n快速设置书签 Ctrl + K, Ctrl + K   \n显示书签 Ctrl + K, Ctrl + S   \n设置书签 Ctrl + F11   \n快速定义 Alt + F12   \n转到定义 F12   \n\n## 退出 ##\n选项卡关闭 Ctrl + F4   \n退出小窗口 Esc 或 Shift + Esc   \n\n## 提示 ##\n文档提示 Ctrl + K, Ctrl + I   \n\n## 查找替换 ##   \n该文件查找 Ctrl + F   \n全局查找 Shift, Shift   \n该文件内替换 Ctrl + H   \n查找引用 Shift + F12   \n\n## 结构 ##\n折叠 Ctrl + M, Ctrl + M   \n全部收起 Ctrl + M, Ctrl + A   \n全部展开 Ctrl + M, Ctrl + X\n格式化 Ctrl + K, Ctrl + F   ","source":"_posts/Rider 快捷键.md","raw":"---\ntitle: \"Rider 快捷键\"\ndate: 2023-02-16 15:06:18\ntags: [\"IDE\"]\ncategories: [\"编辑器\"]\n---\n\n# Rider 快捷键 #\n\n## 位置相关 ##\n切换上个选项卡 Ctrl + PageUp   \n切换下个选项卡 Ctrl + PageDown   \n后退 Ctrl + -   \n前进 Ctrl + +   \n快速设置书签 Ctrl + K, Ctrl + K   \n显示书签 Ctrl + K, Ctrl + S   \n设置书签 Ctrl + F11   \n快速定义 Alt + F12   \n转到定义 F12   \n\n## 退出 ##\n选项卡关闭 Ctrl + F4   \n退出小窗口 Esc 或 Shift + Esc   \n\n## 提示 ##\n文档提示 Ctrl + K, Ctrl + I   \n\n## 查找替换 ##   \n该文件查找 Ctrl + F   \n全局查找 Shift, Shift   \n该文件内替换 Ctrl + H   \n查找引用 Shift + F12   \n\n## 结构 ##\n折叠 Ctrl + M, Ctrl + M   \n全部收起 Ctrl + M, Ctrl + A   \n全部展开 Ctrl + M, Ctrl + X\n格式化 Ctrl + K, Ctrl + F   ","slug":"Rider 快捷键","published":1,"updated":"2023-02-16T11:10:39.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4tq000170v6d7m5eiw2","content":"<h1 id=\"Rider-快捷键\"><a href=\"#Rider-快捷键\" class=\"headerlink\" title=\"Rider 快捷键\"></a>Rider 快捷键</h1><h2 id=\"位置相关\"><a href=\"#位置相关\" class=\"headerlink\" title=\"位置相关\"></a>位置相关</h2><p>切换上个选项卡 Ctrl + PageUp<br>切换下个选项卡 Ctrl + PageDown<br>后退 Ctrl + -<br>前进 Ctrl + +<br>快速设置书签 Ctrl + K, Ctrl + K<br>显示书签 Ctrl + K, Ctrl + S<br>设置书签 Ctrl + F11<br>快速定义 Alt + F12<br>转到定义 F12   </p>\n<h2 id=\"退出\"><a href=\"#退出\" class=\"headerlink\" title=\"退出\"></a>退出</h2><p>选项卡关闭 Ctrl + F4<br>退出小窗口 Esc 或 Shift + Esc   </p>\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>文档提示 Ctrl + K, Ctrl + I   </p>\n<h2 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h2><p>该文件查找 Ctrl + F<br>全局查找 Shift, Shift<br>该文件内替换 Ctrl + H<br>查找引用 Shift + F12   </p>\n<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><p>折叠 Ctrl + M, Ctrl + M<br>全部收起 Ctrl + M, Ctrl + A<br>全部展开 Ctrl + M, Ctrl + X<br>格式化 Ctrl + K, Ctrl + F   </p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"Rider-快捷键\"><a href=\"#Rider-快捷键\" class=\"headerlink\" title=\"Rider 快捷键\"></a>Rider 快捷键</h1><h2 id=\"位置相关\"><a href=\"#位置相关\" class=\"headerlink\" title=\"位置相关\"></a>位置相关</h2><p>切换上个选项卡 Ctrl + PageUp<br>切换下个选项卡 Ctrl + PageDown<br>后退 Ctrl + -<br>前进 Ctrl + +<br>快速设置书签 Ctrl + K, Ctrl + K<br>显示书签 Ctrl + K, Ctrl + S<br>设置书签 Ctrl + F11<br>快速定义 Alt + F12<br>转到定义 F12   </p>\n<h2 id=\"退出\"><a href=\"#退出\" class=\"headerlink\" title=\"退出\"></a>退出</h2><p>选项卡关闭 Ctrl + F4<br>退出小窗口 Esc 或 Shift + Esc   </p>\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>文档提示 Ctrl + K, Ctrl + I   </p>\n<h2 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h2><p>该文件查找 Ctrl + F<br>全局查找 Shift, Shift<br>该文件内替换 Ctrl + H<br>查找引用 Shift + F12   </p>\n<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><p>折叠 Ctrl + M, Ctrl + M<br>全部收起 Ctrl + M, Ctrl + A<br>全部展开 Ctrl + M, Ctrl + X<br>格式化 Ctrl + K, Ctrl + F   </p>\n"},{"title":"Hello","date":"2023-01-30T13:41:08.000Z","sticky":1,"cover":"https://s2.loli.net/2023/01/30/K3ZALsFq7mk8j12.webp","index_enable":true,"aside_enable":true,"archives_enable":true,"position":"right","toc":true,"toc_number":true,"_content":"\n欢迎来到我的博客，因为本人水平有限，文章中写的东西大部分只作为个人笔记使用，不保证一定是正确的。","source":"_posts/Hello.md","raw":"---\ntitle: Hello\ndate: 2023-01-30 21:41:08\n\n# 置顶优先级\nsticky: 1\n\n# 封面图\ncover: https://s2.loli.net/2023/01/30/K3ZALsFq7mk8j12.webp\n# 主页是否显示封面\nindex_enable: true\n# 侧栏是否显示封面\naside_enable: true\n# 时间轴是否显示封面\narchives_enable: true\n# 封面显示位置\nposition: right\n\ntoc: true\ntoc_number: true\n\n---\n\n欢迎来到我的博客，因为本人水平有限，文章中写的东西大部分只作为个人笔记使用，不保证一定是正确的。","slug":"Hello","published":1,"updated":"2023-01-30T14:24:15.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4tu000270v6h020er9j","content":"<p>欢迎来到我的博客，因为本人水平有限，文章中写的东西大部分只作为个人笔记使用，不保证一定是正确的。</p>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<p>欢迎来到我的博客，因为本人水平有限，文章中写的东西大部分只作为个人笔记使用，不保证一定是正确的。</p>\n"},{"title":"文章加密","date":"2023-01-31T11:39:16.000Z","_content":"\n# 通过 hexo-blog-encrypt 插件快速进行文章加密 #\n\n1. 安装 hexo-blog-encrypt 插件\n    ```DOS\n    npm install --save hexo-blog-encrypt\n    ```\n2. 在需要加密的文章 Post Front-matter 上添加密码\n    ```Markdown\n    password: hello\n    ```\n3. 使用``hexo clean && hexo g && hexo s``进行加密文章的预览。\n\n\n---\n\n# 回车键无反应的问题 #\n\n当问题出现符合下列情况时，   \n1. 在本地预览时正常，通过``hexo d``发布后的文章回车键无反应。\n2. 博客的页面为http非https。\n\n可以尝试将http改为https加载，更改方法如下: ``进入Github博客的代码仓库-> Settings-> Pages -> 勾选Enforce HTTPS``进行强制https加载。\n\n---\n\n其他问题和详细配置请访问插件官网   \n<https://github.com/D0n9X1n/hexo-blog-encrypt>","source":"_posts/文章加密.md","raw":"---\ntitle: 文章加密\ndate: 2023-01-31 19:39:16\ntags: \"加密\"\ncategories: \"博客搭建\"\n---\n\n# 通过 hexo-blog-encrypt 插件快速进行文章加密 #\n\n1. 安装 hexo-blog-encrypt 插件\n    ```DOS\n    npm install --save hexo-blog-encrypt\n    ```\n2. 在需要加密的文章 Post Front-matter 上添加密码\n    ```Markdown\n    password: hello\n    ```\n3. 使用``hexo clean && hexo g && hexo s``进行加密文章的预览。\n\n\n---\n\n# 回车键无反应的问题 #\n\n当问题出现符合下列情况时，   \n1. 在本地预览时正常，通过``hexo d``发布后的文章回车键无反应。\n2. 博客的页面为http非https。\n\n可以尝试将http改为https加载，更改方法如下: ``进入Github博客的代码仓库-> Settings-> Pages -> 勾选Enforce HTTPS``进行强制https加载。\n\n---\n\n其他问题和详细配置请访问插件官网   \n<https://github.com/D0n9X1n/hexo-blog-encrypt>","slug":"文章加密","published":1,"updated":"2023-01-31T12:32:29.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4u2000570v67yq66xw2","content":"<h1 id=\"通过-hexo-blog-encrypt-插件快速进行文章加密\"><a href=\"#通过-hexo-blog-encrypt-插件快速进行文章加密\" class=\"headerlink\" title=\"通过 hexo-blog-encrypt 插件快速进行文章加密\"></a>通过 hexo-blog-encrypt 插件快速进行文章加密</h1><ol>\n<li>安装 hexo-blog-encrypt 插件 <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>\n<li>在需要加密的文章 Post Front-matter 上添加密码 <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: hello</span><br></pre></td></tr></table></figure></li>\n<li>使用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>进行加密文章的预览。</li>\n</ol>\n<hr>\n<h1 id=\"回车键无反应的问题\"><a href=\"#回车键无反应的问题\" class=\"headerlink\" title=\"回车键无反应的问题\"></a>回车键无反应的问题</h1><p>当问题出现符合下列情况时，   </p>\n<ol>\n<li>在本地预览时正常，通过<code>hexo d</code>发布后的文章回车键无反应。</li>\n<li>博客的页面为http非https。</li>\n</ol>\n<p>可以尝试将http改为https加载，更改方法如下: <code>进入Github博客的代码仓库-&gt; Settings-&gt; Pages -&gt; 勾选Enforce HTTPS</code>进行强制https加载。</p>\n<hr>\n<p>其他问题和详细配置请访问插件官网<br><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt\">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"通过-hexo-blog-encrypt-插件快速进行文章加密\"><a href=\"#通过-hexo-blog-encrypt-插件快速进行文章加密\" class=\"headerlink\" title=\"通过 hexo-blog-encrypt 插件快速进行文章加密\"></a>通过 hexo-blog-encrypt 插件快速进行文章加密</h1><ol>\n<li>安装 hexo-blog-encrypt 插件 <figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>\n<li>在需要加密的文章 Post Front-matter 上添加密码 <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: hello</span><br></pre></td></tr></table></figure></li>\n<li>使用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>进行加密文章的预览。</li>\n</ol>\n<hr>\n<h1 id=\"回车键无反应的问题\"><a href=\"#回车键无反应的问题\" class=\"headerlink\" title=\"回车键无反应的问题\"></a>回车键无反应的问题</h1><p>当问题出现符合下列情况时，   </p>\n<ol>\n<li>在本地预览时正常，通过<code>hexo d</code>发布后的文章回车键无反应。</li>\n<li>博客的页面为http非https。</li>\n</ol>\n<p>可以尝试将http改为https加载，更改方法如下: <code>进入Github博客的代码仓库-&gt; Settings-&gt; Pages -&gt; 勾选Enforce HTTPS</code>进行强制https加载。</p>\n<hr>\n<p>其他问题和详细配置请访问插件官网<br><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt\">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p>\n"},{"title":"信息表示","date":"2023-01-29T03:18:17.000Z","_content":"\n# 常用进制 #\n\n## 二进制 ##\n\n后缀**B**\n\n## 八进制 ##\n\n后缀**O**或者**Q**\n","source":"_posts/信息表示.md","raw":"---\ntitle: \"信息表示\"\ndate: 2023-01-29 11:18:17\ncategories: [\"计算机组成原理\", \"信息表示\"]\ntags: [\"进制\", \"位运算\"]\n---\n\n# 常用进制 #\n\n## 二进制 ##\n\n后缀**B**\n\n## 八进制 ##\n\n后缀**O**或者**Q**\n","slug":"信息表示","published":1,"updated":"2023-01-29T08:18:31.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4u8000670v688jp1ek9","content":"<h1 id=\"常用进制\"><a href=\"#常用进制\" class=\"headerlink\" title=\"常用进制\"></a>常用进制</h1><h2 id=\"二进制\"><a href=\"#二进制\" class=\"headerlink\" title=\"二进制\"></a>二进制</h2><p>后缀<strong>B</strong></p>\n<h2 id=\"八进制\"><a href=\"#八进制\" class=\"headerlink\" title=\"八进制\"></a>八进制</h2><p>后缀<strong>O</strong>或者<strong>Q</strong></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"常用进制\"><a href=\"#常用进制\" class=\"headerlink\" title=\"常用进制\"></a>常用进制</h1><h2 id=\"二进制\"><a href=\"#二进制\" class=\"headerlink\" title=\"二进制\"></a>二进制</h2><p>后缀<strong>B</strong></p>\n<h2 id=\"八进制\"><a href=\"#八进制\" class=\"headerlink\" title=\"八进制\"></a>八进制</h2><p>后缀<strong>O</strong>或者<strong>Q</strong></p>\n"},{"title":"git缓存设置","date":"2023-03-10T02:09:17.000Z","_content":"# 修改git缓存 #\n默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   \n```CMD\n# 设置缓存为500MB\ngit config --global http.postBuffer 524288000\n\n# 查看当前缓存\ngit config --global http.postBuffer\n```","source":"_posts/Git/git缓存设置.md","raw":"---\ntitle: git缓存设置\ndate: 2023-03-10 10:09:17\ntags: [\"git\"]\ncategories: [\"git\"]\n\n---\n# 修改git缓存 #\n默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   \n```CMD\n# 设置缓存为500MB\ngit config --global http.postBuffer 524288000\n\n# 查看当前缓存\ngit config --global http.postBuffer\n```","slug":"Git/git缓存设置","published":1,"updated":"2023-03-12T13:04:20.668Z","_id":"clf4ax4ua000770v64q3i7ltz","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"修改git缓存\"><a href=\"#修改git缓存\" class=\"headerlink\" title=\"修改git缓存\"></a>修改git缓存</h1><p>默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 设置缓存为<span class=\"number\">500</span>MB</span><br><span class=\"line\">git config --global http.postBuffer <span class=\"number\">524288000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 查看当前缓存</span><br><span class=\"line\">git config --global http.postBuffer</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"修改git缓存\"><a href=\"#修改git缓存\" class=\"headerlink\" title=\"修改git缓存\"></a>修改git缓存</h1><p>默认git的http post缓存为1MB，使用命令将git的缓存设为500MB   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 设置缓存为<span class=\"number\">500</span>MB</span><br><span class=\"line\">git config --global http.postBuffer <span class=\"number\">524288000</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 查看当前缓存</span><br><span class=\"line\">git config --global http.postBuffer</span><br></pre></td></tr></table></figure>"},{"title":"git网络代理配置","date":"2023-01-30T01:57:08.000Z","_content":"\n# Git网络配置语句 #\n\n```CMD\n# 查看全部配置\ngit config --global -l\n\n# 查看全局代理\ngit config --global http.proxy\ngit config --global https.proxy \n\n# 设置全局代理\ngit config --global http.proxy \"http://127.0.0.1:端口号\"\ngit config --global https.proxy \"https://127.0.0.1:端口号\"\n\n# 取消全局代理\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n```\n\n---\n\n# 解决在Github上的仓库Push或Clone网络错误的问题 #\n\n```CMD\n# 对Github单独设置代理\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:端口号\ngit config --global https.http://github.com.proxy socks5://127.0.0.1:端口号\n\n# 取消代理\ngit config --global --unset http.https://github.com.proxy \ngit config --global --unset https.http://github.com.proxy \n```\n\n由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  \n1. 创建.bat文件,使用UTF-8编码保存。\n2. 复制以下命令，并在更改自己的端口号\n    ```CMD\n    @ echo off\n    set portValue=7890\n\n    :start\n    echo 请输入数字\n    echo 1.显示git全部配置\n    echo 2.设置git对Github代理\n    echo 3.取消git对Github代理\n    echo 4.设置代理服务器端口号(默认%portValue%)\n    echo 5.查看代理服务器端口号\n    echo 6.退出\n    CHOICE /C 123456 /N\n    if errorlevel 6 goto exit\n    if errorlevel 5 goto showProxyPort\n    if errorlevel 4 goto setProxyPort\n    if errorlevel 3 goto unsetProxy\n    if errorlevel 2 goto setProxy\n    if errorlevel 1 goto showProxy\n\n    :showProxy\n    git config --global -l\n    goto start\n\n    :setProxy\n    :: 在两条git语句末尾 填入自己的代理端口号\n    git config --global http.https://github.com.proxy socks5://127.0.0.1:%portValue%\n    git config --global https.http://github.com.proxy socks5://127.0.0.1:%portValue%\n    goto start\n\n    :unsetProxy\n    git config --global --unset http.https://github.com.proxy \n    git config --global --unset https.http://github.com.proxy \n    goto start\n\n    :setProxyPort\n    set /p portValue=请输入端口号:\n    goto start\n\n    :showProxyPort\n    echo %portValue%\n    goto start\n\n    :exit\n    Pause\n    ```\n3. 运行.bat文件，根据提示输入。   \n\n---   \n\n# 解决在Github上的用户验证问题 #   \n1. 进入Github中生成生成token令牌，``Setting-> Developer settings-> Personal access tokens-> Tokens(classic)-> Generate new token-> Generate new token(classic)``\n2. 保存该token令牌，不保存就找不到了!!\n3. 在仓库地址上添加该令牌的值和一个@符号，``https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git``   \n\n> 第二种使用SSH的方式，参考<https://blog.csdn.net/qq_45491549/article/details/128825216>   \n\n---","source":"_posts/Git/git网络配置.md","raw":"---\ntitle: \"git网络代理配置\"\ndate: 2023-01-30 09:57:08\ntags: [\"git\", \"网络代理\", \"GitHub\"]\ncategories: [\"git\"]\n---\n\n# Git网络配置语句 #\n\n```CMD\n# 查看全部配置\ngit config --global -l\n\n# 查看全局代理\ngit config --global http.proxy\ngit config --global https.proxy \n\n# 设置全局代理\ngit config --global http.proxy \"http://127.0.0.1:端口号\"\ngit config --global https.proxy \"https://127.0.0.1:端口号\"\n\n# 取消全局代理\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n```\n\n---\n\n# 解决在Github上的仓库Push或Clone网络错误的问题 #\n\n```CMD\n# 对Github单独设置代理\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:端口号\ngit config --global https.http://github.com.proxy socks5://127.0.0.1:端口号\n\n# 取消代理\ngit config --global --unset http.https://github.com.proxy \ngit config --global --unset https.http://github.com.proxy \n```\n\n由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  \n1. 创建.bat文件,使用UTF-8编码保存。\n2. 复制以下命令，并在更改自己的端口号\n    ```CMD\n    @ echo off\n    set portValue=7890\n\n    :start\n    echo 请输入数字\n    echo 1.显示git全部配置\n    echo 2.设置git对Github代理\n    echo 3.取消git对Github代理\n    echo 4.设置代理服务器端口号(默认%portValue%)\n    echo 5.查看代理服务器端口号\n    echo 6.退出\n    CHOICE /C 123456 /N\n    if errorlevel 6 goto exit\n    if errorlevel 5 goto showProxyPort\n    if errorlevel 4 goto setProxyPort\n    if errorlevel 3 goto unsetProxy\n    if errorlevel 2 goto setProxy\n    if errorlevel 1 goto showProxy\n\n    :showProxy\n    git config --global -l\n    goto start\n\n    :setProxy\n    :: 在两条git语句末尾 填入自己的代理端口号\n    git config --global http.https://github.com.proxy socks5://127.0.0.1:%portValue%\n    git config --global https.http://github.com.proxy socks5://127.0.0.1:%portValue%\n    goto start\n\n    :unsetProxy\n    git config --global --unset http.https://github.com.proxy \n    git config --global --unset https.http://github.com.proxy \n    goto start\n\n    :setProxyPort\n    set /p portValue=请输入端口号:\n    goto start\n\n    :showProxyPort\n    echo %portValue%\n    goto start\n\n    :exit\n    Pause\n    ```\n3. 运行.bat文件，根据提示输入。   \n\n---   \n\n# 解决在Github上的用户验证问题 #   \n1. 进入Github中生成生成token令牌，``Setting-> Developer settings-> Personal access tokens-> Tokens(classic)-> Generate new token-> Generate new token(classic)``\n2. 保存该token令牌，不保存就找不到了!!\n3. 在仓库地址上添加该令牌的值和一个@符号，``https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git``   \n\n> 第二种使用SSH的方式，参考<https://blog.csdn.net/qq_45491549/article/details/128825216>   \n\n---","slug":"Git/git网络配置","published":1,"updated":"2023-03-12T13:04:18.755Z","_id":"clf4ax4ub000b70v69ycbd7qv","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Git网络配置语句\"><a href=\"#Git网络配置语句\" class=\"headerlink\" title=\"Git网络配置语句\"></a>Git网络配置语句</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看全部配置</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看全局代理</span><br><span class=\"line\">git config --global http.proxy</span><br><span class=\"line\">git config --global https.proxy </span><br><span class=\"line\"></span><br><span class=\"line\"># 设置全局代理</span><br><span class=\"line\">git config --global http.proxy &quot;http://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\">git config --global https.proxy &quot;https://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消全局代理</span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"解决在Github上的仓库Push或Clone网络错误的问题\"><a href=\"#解决在Github上的仓库Push或Clone网络错误的问题\" class=\"headerlink\" title=\"解决在Github上的仓库Push或Clone网络错误的问题\"></a>解决在Github上的仓库Push或Clone网络错误的问题</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 对Github单独设置代理</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消代理</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br></pre></td></tr></table></figure>\n\n<p>由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  </p>\n<ol>\n<li>创建.bat文件,使用UTF-8编码保存。</li>\n<li>复制以下命令，并在更改自己的端口号 <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ <span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">set</span> portValue=<span class=\"number\">7890</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"built_in\">start</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 请输入数字</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">1</span>.显示git全部配置</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">2</span>.设置git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">3</span>.取消git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">4</span>.设置代理服务器端口号(默认<span class=\"variable\">%portValue%</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">5</span>.查看代理服务器端口号</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">6</span>.退出</span><br><span class=\"line\">CHOICE /C <span class=\"number\">123456</span> /N</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">6</span> <span class=\"keyword\">goto</span> <span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">5</span> <span class=\"keyword\">goto</span> showProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">4</span> <span class=\"keyword\">goto</span> setProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">3</span> <span class=\"keyword\">goto</span> unsetProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">2</span> <span class=\"keyword\">goto</span> setProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">1</span> <span class=\"keyword\">goto</span> showProxy</span><br><span class=\"line\"></span><br><span class=\"line\">:showProxy</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxy</span><br><span class=\"line\">:: 在两条git语句末尾 填入自己的代理端口号</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:unsetProxy</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxyPort</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p portValue=请输入端口号:</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:showProxyPort</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"built_in\">Pause</span></span><br></pre></td></tr></table></figure></li>\n<li>运行.bat文件，根据提示输入。</li>\n</ol>\n<hr>\n<h1 id=\"解决在Github上的用户验证问题\"><a href=\"#解决在Github上的用户验证问题\" class=\"headerlink\" title=\"解决在Github上的用户验证问题\"></a>解决在Github上的用户验证问题</h1><ol>\n<li>进入Github中生成生成token令牌，<code>Setting-&gt; Developer settings-&gt; Personal access tokens-&gt; Tokens(classic)-&gt; Generate new token-&gt; Generate new token(classic)</code></li>\n<li>保存该token令牌，不保存就找不到了!!</li>\n<li>在仓库地址上添加该令牌的值和一个@符号，<code>https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git</code></li>\n</ol>\n<blockquote>\n<p>第二种使用SSH的方式，参考<a href=\"https://blog.csdn.net/qq_45491549/article/details/128825216\">https://blog.csdn.net/qq_45491549/article/details/128825216</a>   </p>\n</blockquote>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"Git网络配置语句\"><a href=\"#Git网络配置语句\" class=\"headerlink\" title=\"Git网络配置语句\"></a>Git网络配置语句</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看全部配置</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看全局代理</span><br><span class=\"line\">git config --global http.proxy</span><br><span class=\"line\">git config --global https.proxy </span><br><span class=\"line\"></span><br><span class=\"line\"># 设置全局代理</span><br><span class=\"line\">git config --global http.proxy &quot;http://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\">git config --global https.proxy &quot;https://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消全局代理</span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"解决在Github上的仓库Push或Clone网络错误的问题\"><a href=\"#解决在Github上的仓库Push或Clone网络错误的问题\" class=\"headerlink\" title=\"解决在Github上的仓库Push或Clone网络错误的问题\"></a>解决在Github上的仓库Push或Clone网络错误的问题</h1><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 对Github单独设置代理</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:端口号</span><br><span class=\"line\"></span><br><span class=\"line\"># 取消代理</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br></pre></td></tr></table></figure>\n\n<p>由于需要反复设置对Github的代理，所以可以创建.bat程序减少重复命令输入 。  </p>\n<ol>\n<li>创建.bat文件,使用UTF-8编码保存。</li>\n<li>复制以下命令，并在更改自己的端口号 <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ <span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">set</span> portValue=<span class=\"number\">7890</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"built_in\">start</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> 请输入数字</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">1</span>.显示git全部配置</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">2</span>.设置git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">3</span>.取消git对Github代理</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">4</span>.设置代理服务器端口号(默认<span class=\"variable\">%portValue%</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">5</span>.查看代理服务器端口号</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"number\">6</span>.退出</span><br><span class=\"line\">CHOICE /C <span class=\"number\">123456</span> /N</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">6</span> <span class=\"keyword\">goto</span> <span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">5</span> <span class=\"keyword\">goto</span> showProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">4</span> <span class=\"keyword\">goto</span> setProxyPort</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">3</span> <span class=\"keyword\">goto</span> unsetProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">2</span> <span class=\"keyword\">goto</span> setProxy</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">errorlevel</span> <span class=\"number\">1</span> <span class=\"keyword\">goto</span> showProxy</span><br><span class=\"line\"></span><br><span class=\"line\">:showProxy</span><br><span class=\"line\">git config --global -l</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxy</span><br><span class=\"line\">:: 在两条git语句末尾 填入自己的代理端口号</span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\">git config --global https.http://github.com.proxy socks5://<span class=\"number\">127</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>:<span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:unsetProxy</span><br><span class=\"line\">git config --global --unset http.https://github.com.proxy </span><br><span class=\"line\">git config --global --unset https.http://github.com.proxy </span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:setProxyPort</span><br><span class=\"line\"><span class=\"built_in\">set</span> /p portValue=请输入端口号:</span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:showProxyPort</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">%portValue%</span></span><br><span class=\"line\"><span class=\"keyword\">goto</span> <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\">:<span class=\"keyword\">exit</span></span><br><span class=\"line\"><span class=\"built_in\">Pause</span></span><br></pre></td></tr></table></figure></li>\n<li>运行.bat文件，根据提示输入。</li>\n</ol>\n<hr>\n<h1 id=\"解决在Github上的用户验证问题\"><a href=\"#解决在Github上的用户验证问题\" class=\"headerlink\" title=\"解决在Github上的用户验证问题\"></a>解决在Github上的用户验证问题</h1><ol>\n<li>进入Github中生成生成token令牌，<code>Setting-&gt; Developer settings-&gt; Personal access tokens-&gt; Tokens(classic)-&gt; Generate new token-&gt; Generate new token(classic)</code></li>\n<li>保存该token令牌，不保存就找不到了!!</li>\n<li>在仓库地址上添加该令牌的值和一个@符号，<code>https://在这里添加令牌@github.com/jixiegaga/jixiegaga.github.io.git</code></li>\n</ol>\n<blockquote>\n<p>第二种使用SSH的方式，参考<a href=\"https://blog.csdn.net/qq_45491549/article/details/128825216\">https://blog.csdn.net/qq_45491549/article/details/128825216</a>   </p>\n</blockquote>\n<hr>\n"},{"title":"lua元表","date":"2023-02-01T13:29:31.000Z","_content":"\n---\n\n# 元表 #\n\n**元表**: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。\n**设置元表 setmetatable(table, metatable)**: 当table已经设置过元表，并且元表内定义了``__metatable``时，再次``setmetatable()``会报错。   \n**获取元表 getmetatable(table)**: 当元表没有使用``setmetatable()``设置过时会返回nil。\n\n# 元方法 #\n**元方法**: 元表中的key表示**事件名**，value表示**元方法**，**元方法既可以是table也可以是function**\n\n# 常用事件名 #\n+ **__index**: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__index是table，那么会输出__index[key]\n  2. 如果__index是function，那么会执行__index(t, key)\n+ **__newindex**: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__newindex是table，那么会赋值给__newindex[key]\n  2. 如果__newindex是function，那么会执行__newindex[t, key, value]\n+ **__metatable**: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身\n+ **__add**: 当t1 + t2时，会执行__add(t1, t2)   \n\n其他事件名请按Lua版本参考   \n5.1: <https://www.codingnow.com/2000/download/lua_manual.html>   \n5.3: <https://www.runoob.com/manual/lua53doc/contents.html>\n","source":"_posts/Lua语言/lua元表.md","raw":"---\ntitle: lua元表\ndate: 2023-02-01 21:29:31\ntags: [元表, 原方法]\ncategories: [Lua语言]\n---\n\n---\n\n# 元表 #\n\n**元表**: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。\n**设置元表 setmetatable(table, metatable)**: 当table已经设置过元表，并且元表内定义了``__metatable``时，再次``setmetatable()``会报错。   \n**获取元表 getmetatable(table)**: 当元表没有使用``setmetatable()``设置过时会返回nil。\n\n# 元方法 #\n**元方法**: 元表中的key表示**事件名**，value表示**元方法**，**元方法既可以是table也可以是function**\n\n# 常用事件名 #\n+ **__index**: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__index是table，那么会输出__index[key]\n  2. 如果__index是function，那么会执行__index(t, key)\n+ **__newindex**: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况\n  1. 如果__newindex是table，那么会赋值给__newindex[key]\n  2. 如果__newindex是function，那么会执行__newindex[t, key, value]\n+ **__metatable**: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身\n+ **__add**: 当t1 + t2时，会执行__add(t1, t2)   \n\n其他事件名请按Lua版本参考   \n5.1: <https://www.codingnow.com/2000/download/lua_manual.html>   \n5.3: <https://www.runoob.com/manual/lua53doc/contents.html>\n","slug":"Lua语言/lua元表","published":1,"updated":"2023-02-01T15:23:09.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4uc000c70v61ll84juq","content":"<hr>\n<h1 id=\"元表\"><a href=\"#元表\" class=\"headerlink\" title=\"元表\"></a>元表</h1><p><strong>元表</strong>: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。<br><strong>设置元表 setmetatable(table, metatable)</strong>: 当table已经设置过元表，并且元表内定义了<code>__metatable</code>时，再次<code>setmetatable()</code>会报错。<br><strong>获取元表 getmetatable(table)</strong>: 当元表没有使用<code>setmetatable()</code>设置过时会返回nil。</p>\n<h1 id=\"元方法\"><a href=\"#元方法\" class=\"headerlink\" title=\"元方法\"></a>元方法</h1><p><strong>元方法</strong>: 元表中的key表示<strong>事件名</strong>，value表示<strong>元方法</strong>，<strong>元方法既可以是table也可以是function</strong></p>\n<h1 id=\"常用事件名\"><a href=\"#常用事件名\" class=\"headerlink\" title=\"常用事件名\"></a>常用事件名</h1><ul>\n<li><strong>__index</strong>: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__index是table，那么会输出__index[key]</li>\n<li>如果__index是function，那么会执行__index(t, key)</li>\n</ol>\n</li>\n<li><strong>__newindex</strong>: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__newindex是table，那么会赋值给__newindex[key]</li>\n<li>如果__newindex是function，那么会执行__newindex[t, key, value]</li>\n</ol>\n</li>\n<li><strong>__metatable</strong>: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身</li>\n<li><strong>__add</strong>: 当t1 + t2时，会执行__add(t1, t2)</li>\n</ul>\n<p>其他事件名请按Lua版本参考<br>5.1: <a href=\"https://www.codingnow.com/2000/download/lua_manual.html\">https://www.codingnow.com/2000/download/lua_manual.html</a><br>5.3: <a href=\"https://www.runoob.com/manual/lua53doc/contents.html\">https://www.runoob.com/manual/lua53doc/contents.html</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<hr>\n<h1 id=\"元表\"><a href=\"#元表\" class=\"headerlink\" title=\"元表\"></a>元表</h1><p><strong>元表</strong>: 元表是一个与指定table相关联的table，它用于定义指定table的某些特定操作的行为。table默认的元表是nil。<br><strong>设置元表 setmetatable(table, metatable)</strong>: 当table已经设置过元表，并且元表内定义了<code>__metatable</code>时，再次<code>setmetatable()</code>会报错。<br><strong>获取元表 getmetatable(table)</strong>: 当元表没有使用<code>setmetatable()</code>设置过时会返回nil。</p>\n<h1 id=\"元方法\"><a href=\"#元方法\" class=\"headerlink\" title=\"元方法\"></a>元方法</h1><p><strong>元方法</strong>: 元表中的key表示<strong>事件名</strong>，value表示<strong>元方法</strong>，<strong>元方法既可以是table也可以是function</strong></p>\n<h1 id=\"常用事件名\"><a href=\"#常用事件名\" class=\"headerlink\" title=\"常用事件名\"></a>常用事件名</h1><ul>\n<li><strong>__index</strong>: 当读取t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__index是table，那么会输出__index[key]</li>\n<li>如果__index是function，那么会执行__index(t, key)</li>\n</ol>\n</li>\n<li><strong>__newindex</strong>: 当赋值t[key]时，key不存在或者t不是table，那么会出现两种情况<ol>\n<li>如果__newindex是table，那么会赋值给__newindex[key]</li>\n<li>如果__newindex是function，那么会执行__newindex[t, key, value]</li>\n</ol>\n</li>\n<li><strong>__metatable</strong>: 当getmetatable(table)时，会返回__metatable而不是设置的元表本身</li>\n<li><strong>__add</strong>: 当t1 + t2时，会执行__add(t1, t2)</li>\n</ul>\n<p>其他事件名请按Lua版本参考<br>5.1: <a href=\"https://www.codingnow.com/2000/download/lua_manual.html\">https://www.codingnow.com/2000/download/lua_manual.html</a><br>5.3: <a href=\"https://www.runoob.com/manual/lua53doc/contents.html\">https://www.runoob.com/manual/lua53doc/contents.html</a></p>\n"},{"title":"hexo笔记","date":"2023-03-10T06:51:05.000Z","_content":"\n# 常用指令 #   \n\n```PowerShell\n# 生成文章\nhexo new \"文章名\"\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n```   \n\n其他指令参考文档:<https://hexo.io/zh-cn/docs/commands#generate>\n\n---\n\n# 新电脑部署旧网站 #   \n\n> !!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   \n\n## 旧电脑操作 ##   \n   执行``一键部署并同步.bat``脚本\n\n## 新电脑操作 ##   \n1. 安装Node.js环境:<https://nodejs.org/en/download/>   \n2. 在``D:\\Personal Blog``目录, clone Github的``hexo-config``仓库    \n3. 执行``迁移脚本.bat``脚本   \n4. 在``D:\\Personal Blog\\hexo``安装hexo   \n   ```PowerShell\n   npm install hexo-cli -g\n   npm install\n   ```   \n5. 设置脚本执行策略\n   ```PowerShell\n   # 查看脚本执行策略\n   # Restricted: 严格模式\n   # Unrestricted: 下载未签名脚本时会询问\n   # Bypass: 直接执行\n   Get-ExecutionPolicy\n   ```   \n   当策略是Restricted时，将其设置成Unrestricted或Bypass模式   \n   ```PowerShell\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n   ```   \n\n---\n","source":"_posts/网站搭建/hexo笔记.md","raw":"---\ntitle: hexo笔记\ndate: 2023-03-10 14:51:05\ntags: [\"hexo\"]\ncategories: [\"网站搭建\"]\n---\n\n# 常用指令 #   \n\n```PowerShell\n# 生成文章\nhexo new \"文章名\"\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n```   \n\n其他指令参考文档:<https://hexo.io/zh-cn/docs/commands#generate>\n\n---\n\n# 新电脑部署旧网站 #   \n\n> !!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   \n\n## 旧电脑操作 ##   \n   执行``一键部署并同步.bat``脚本\n\n## 新电脑操作 ##   \n1. 安装Node.js环境:<https://nodejs.org/en/download/>   \n2. 在``D:\\Personal Blog``目录, clone Github的``hexo-config``仓库    \n3. 执行``迁移脚本.bat``脚本   \n4. 在``D:\\Personal Blog\\hexo``安装hexo   \n   ```PowerShell\n   npm install hexo-cli -g\n   npm install\n   ```   \n5. 设置脚本执行策略\n   ```PowerShell\n   # 查看脚本执行策略\n   # Restricted: 严格模式\n   # Unrestricted: 下载未签名脚本时会询问\n   # Bypass: 直接执行\n   Get-ExecutionPolicy\n   ```   \n   当策略是Restricted时，将其设置成Unrestricted或Bypass模式   \n   ```PowerShell\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\n   Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n   ```   \n\n---\n","slug":"网站搭建/hexo笔记","published":1,"updated":"2023-03-25T17:45:31.017Z","_id":"clf4ax4ud000g70v6gv8v3d1u","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><pre><code class=\"PowerShell\"># 生成文章\nhexo new &quot;文章名&quot;\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n</code></pre>\n<p>其他指令参考文档:<a href=\"https://hexo.io/zh-cn/docs/commands#generate\">https://hexo.io/zh-cn/docs/commands#generate</a></p>\n<hr>\n<h1 id=\"新电脑部署旧网站\"><a href=\"#新电脑部署旧网站\" class=\"headerlink\" title=\"新电脑部署旧网站\"></a>新电脑部署旧网站</h1><blockquote>\n<p>!!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   </p>\n</blockquote>\n<h2 id=\"旧电脑操作\"><a href=\"#旧电脑操作\" class=\"headerlink\" title=\"旧电脑操作\"></a>旧电脑操作</h2><p>   执行<code>一键部署并同步.bat</code>脚本</p>\n<h2 id=\"新电脑操作\"><a href=\"#新电脑操作\" class=\"headerlink\" title=\"新电脑操作\"></a>新电脑操作</h2><ol>\n<li>安装Node.js环境:<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>   </li>\n<li>在<code>D:\\Personal Blog</code>目录, clone Github的<code>hexo-config</code>仓库    </li>\n<li>执行<code>迁移脚本.bat</code>脚本   </li>\n<li>在<code>D:\\Personal Blog\\hexo</code>安装hexo   <pre><code class=\"PowerShell\">npm install hexo-cli -g\nnpm install\n</code></pre>\n</li>\n<li>设置脚本执行策略<pre><code class=\"PowerShell\"># 查看脚本执行策略\n# Restricted: 严格模式\n# Unrestricted: 下载未签名脚本时会询问\n# Bypass: 直接执行\nGet-ExecutionPolicy\n</code></pre>\n当策略是Restricted时，将其设置成Unrestricted或Bypass模式   <pre><code class=\"PowerShell\">Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\nSet-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n</code></pre>\n</li>\n</ol>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"常用指令\"><a href=\"#常用指令\" class=\"headerlink\" title=\"常用指令\"></a>常用指令</h1><pre><code class=\"PowerShell\"># 生成文章\nhexo new &quot;文章名&quot;\n\n# 部署本地服务器\nhexo s\n\n# 清楚缓存\nhexo clean\n\n# 生成静态文件\nhexo g\n\n# 部署远端服务器\nhexo d\n\n# 常用二连, 生成并部署, 以下两条作用一样\nhexo g -d\nhexo d -g\n</code></pre>\n<p>其他指令参考文档:<a href=\"https://hexo.io/zh-cn/docs/commands#generate\">https://hexo.io/zh-cn/docs/commands#generate</a></p>\n<hr>\n<h1 id=\"新电脑部署旧网站\"><a href=\"#新电脑部署旧网站\" class=\"headerlink\" title=\"新电脑部署旧网站\"></a>新电脑部署旧网站</h1><blockquote>\n<p>!!注意以下文件目录不可变更, 如需变更则要更改所有脚本的内的文件路径   </p>\n</blockquote>\n<h2 id=\"旧电脑操作\"><a href=\"#旧电脑操作\" class=\"headerlink\" title=\"旧电脑操作\"></a>旧电脑操作</h2><p>   执行<code>一键部署并同步.bat</code>脚本</p>\n<h2 id=\"新电脑操作\"><a href=\"#新电脑操作\" class=\"headerlink\" title=\"新电脑操作\"></a>新电脑操作</h2><ol>\n<li>安装Node.js环境:<a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>   </li>\n<li>在<code>D:\\Personal Blog</code>目录, clone Github的<code>hexo-config</code>仓库    </li>\n<li>执行<code>迁移脚本.bat</code>脚本   </li>\n<li>在<code>D:\\Personal Blog\\hexo</code>安装hexo   <pre><code class=\"PowerShell\">npm install hexo-cli -g\nnpm install\n</code></pre>\n</li>\n<li>设置脚本执行策略<pre><code class=\"PowerShell\"># 查看脚本执行策略\n# Restricted: 严格模式\n# Unrestricted: 下载未签名脚本时会询问\n# Bypass: 直接执行\nGet-ExecutionPolicy\n</code></pre>\n当策略是Restricted时，将其设置成Unrestricted或Bypass模式   <pre><code class=\"PowerShell\">Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force\nSet-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force\n</code></pre>\n</li>\n</ol>\n<hr>\n"},{"title":"Markdown常用语法","date":"2023-01-29T07:07:22.000Z","_content":"\n---\n\n# 标题 #\n\n语法如下:\n```Markdown\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n```\n\n效果如下:\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n\n---\n\n# 注释 #\n\n语法如下:\n```Markdown\n<!-- 看不到看不到 -->\n```\n\n效果如下:\n<!-- 看不到看不到 -->\n\n---\n\n# 分割线 #\n\n语法如下:\n``` Markdown\n---\n```\n\n效果如下:\n___\n\n---\n\n# 换行 #\n\n语法如下:\n``` Markdown\n输入三个空格，一个回车\nHello   \nWorld   \n\n或者\n\n输入<br />\nHello<br />World\n```\n\n效果如下:   \nHello   \nWorld   \nHello<br />World\n\n---\n\n# 代码和代码块 #\n\n语法如下:\n```Markdown\n``int a = 1;``\n\n或者\n\n```C++\nint b = 2;\n```             。(这个句号不用写)\n\n```\n\n效果如下:   \n``int a = 1;``   \n```C++\nint b = 2;\n```\n\n---\n\n# 超链接 #\n\n语法如下:\n```Markdown\n双引号中的内容为鼠标悬停时显示的描述\n[个人网站](https://wokaibai.top \"我的个人网站\")\n\n或者\n\n<https://wokaibai.top>\n```\n\n效果如下:   \n[个人网站](https://wokaibai.top \"我的个人网站\")   \n<https://wokaibai.top>\n\n---\n\n# 引用形式的超链接 #\n\n语法如下:\n```Markdown\n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n```\n\n效果如下:   \n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n\n---\n\n# 数学公式 #\n\n语法如下:\n```Markdown\n使用LaTeX公式\n$$\\frac{a}{b}$$ 表示块公式\n$\\frac{a}{b}$   表示行公式\n```\n\n效果如下:   \n(显示异常就是不支持)   \n$$\\frac{a}{b}$$   \n$\\frac{a}{b}$   \n\n注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取   \n[数学公式->LaTeX表达式或图片](https://www.2weima.com/gongshi.html)   \n[图片->LaTeX表达式(需要登录)](https://www.latexlive.com)\n\n---\n\n# 列表 #\n\n语法如下:\n```Markdown\n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n```\n\n效果如下:   \n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n\n---\n\n# 块引用 #\n\n语法如下:\n```Markdown\n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n```\n\n效果如下:   \n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n\n---\n\n# 斜体、粗体、粗斜体、删除线 #\n\n语法如下:\n```Markdown\n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n```\n\n效果如下:   \n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n\n---\n\n# 图片 #\n\n语法如下:\n```Markdown\n通过上传至仓库加载(需要梯子)\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n\n图床加载\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n\nhtml标签图床加载\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n```\n\n效果如下:\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n\n---\n\n# 表格 #\n\n语法如下:\n```Markdown\n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n:--- 表示左对齐\n---  表示居中\n---: 表示右对齐\n```\n\n效果如下:   \n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n\n---\n\n其他Markdown语法的参考:   \n<http://www.zhaowenyu.com/markdown-doc/> 语法较全，质量较高   \n<https://butterfly.js.org/posts/89757140/> Butterfly主题官方出品\n\n\n---\n","source":"_posts/网站搭建/markdown常用语法.md","raw":"---\ntitle: \"Markdown常用语法\"\ndate: 2023-01-29 15:07:22\ntags: [\"Markdown\"]\ncategories: [\"博客搭建\"]\n---\n\n---\n\n# 标题 #\n\n语法如下:\n```Markdown\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n```\n\n效果如下:\n# 一级 #\n\n## 二级 ##\n\n### 三级 ###\n\n#### 四级 ####\n\n##### 五级 #####\n\n###### 六级 ######\n\n---\n\n# 注释 #\n\n语法如下:\n```Markdown\n<!-- 看不到看不到 -->\n```\n\n效果如下:\n<!-- 看不到看不到 -->\n\n---\n\n# 分割线 #\n\n语法如下:\n``` Markdown\n---\n```\n\n效果如下:\n___\n\n---\n\n# 换行 #\n\n语法如下:\n``` Markdown\n输入三个空格，一个回车\nHello   \nWorld   \n\n或者\n\n输入<br />\nHello<br />World\n```\n\n效果如下:   \nHello   \nWorld   \nHello<br />World\n\n---\n\n# 代码和代码块 #\n\n语法如下:\n```Markdown\n``int a = 1;``\n\n或者\n\n```C++\nint b = 2;\n```             。(这个句号不用写)\n\n```\n\n效果如下:   \n``int a = 1;``   \n```C++\nint b = 2;\n```\n\n---\n\n# 超链接 #\n\n语法如下:\n```Markdown\n双引号中的内容为鼠标悬停时显示的描述\n[个人网站](https://wokaibai.top \"我的个人网站\")\n\n或者\n\n<https://wokaibai.top>\n```\n\n效果如下:   \n[个人网站](https://wokaibai.top \"我的个人网站\")   \n<https://wokaibai.top>\n\n---\n\n# 引用形式的超链接 #\n\n语法如下:\n```Markdown\n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n```\n\n效果如下:   \n[个人网站][个人网站索引]   \n[个人网站][1]\n\n[个人网站索引]: https://wokaibai.top\n[1]: https://wokaibai.top\n\n---\n\n# 数学公式 #\n\n语法如下:\n```Markdown\n使用LaTeX公式\n$$\\frac{a}{b}$$ 表示块公式\n$\\frac{a}{b}$   表示行公式\n```\n\n效果如下:   \n(显示异常就是不支持)   \n$$\\frac{a}{b}$$   \n$\\frac{a}{b}$   \n\n注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取   \n[数学公式->LaTeX表达式或图片](https://www.2weima.com/gongshi.html)   \n[图片->LaTeX表达式(需要登录)](https://www.latexlive.com)\n\n---\n\n# 列表 #\n\n语法如下:\n```Markdown\n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n```\n\n效果如下:   \n+ 无序列表1\n+ 无序列表2\n+ 无序列表3\n1. 有序列表1\n2. 有序列表2\n   1. 子列表\n   2. 子列表\n3. 有序列表3\n\n---\n\n# 块引用 #\n\n语法如下:\n```Markdown\n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n```\n\n效果如下:   \n> 第一行   \n> 第二行\n>\n> 第三行\n>> 嵌套块引用\n\n---\n\n# 斜体、粗体、粗斜体、删除线 #\n\n语法如下:\n```Markdown\n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n```\n\n效果如下:   \n*斜体*   \n**粗体**   \n***粗斜体***   \n~~删除线~~\n\n---\n\n# 图片 #\n\n语法如下:\n```Markdown\n通过上传至仓库加载(需要梯子)\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n\n图床加载\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n\nhtml标签图床加载\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n```\n\n效果如下:\n![刻晴，图裂了就是没挂梯子](https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp \"刻晴\")\n![背景图片](https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg)\n<img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 />\n\n---\n\n# 表格 #\n\n语法如下:\n```Markdown\n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n:--- 表示左对齐\n---  表示居中\n---: 表示右对齐\n```\n\n效果如下:   \n|左对齐  |居中    |右对齐  |\n|:---    |---     |---:   |\n|单元格  |单元格  |单元格  |\n|单元格  |单元格  |单元格  |\n\n\n---\n\n其他Markdown语法的参考:   \n<http://www.zhaowenyu.com/markdown-doc/> 语法较全，质量较高   \n<https://butterfly.js.org/posts/89757140/> Butterfly主题官方出品\n\n\n---\n","slug":"网站搭建/markdown常用语法","published":1,"updated":"2023-01-31T12:20:08.916Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4ue000i70v65tqfhbdl","content":"<hr>\n<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 一级 #</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 二级 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 三级 ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#### 四级 ####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">##### 五级 #####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">###### 六级 ######</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<h1 id=\"一级\"><a href=\"#一级\" class=\"headerlink\" title=\"一级\"></a>一级</h1><h2 id=\"二级\"><a href=\"#二级\" class=\"headerlink\" title=\"二级\"></a>二级</h2><h3 id=\"三级\"><a href=\"#三级\" class=\"headerlink\" title=\"三级\"></a>三级</h3><h4 id=\"四级\"><a href=\"#四级\" class=\"headerlink\" title=\"四级\"></a>四级</h4><h5 id=\"五级\"><a href=\"#五级\" class=\"headerlink\" title=\"五级\"></a>五级</h5><h6 id=\"六级\"><a href=\"#六级\" class=\"headerlink\" title=\"六级\"></a>六级</h6><hr>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 看不到看不到 --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<!-- 看不到看不到 -->\n\n<hr>\n<h1 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<hr>\n<hr>\n<h1 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入三个空格，一个回车</span><br><span class=\"line\">Hello   </span><br><span class=\"line\">World   </span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\">输入<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\">Hello<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span>World</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>Hello<br>World<br>Hello<br />World</p>\n<hr>\n<h1 id=\"代码和代码块\"><a href=\"#代码和代码块\" class=\"headerlink\" title=\"代码和代码块\"></a>代码和代码块</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">``int a = 1;`</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">```C++</span></span><br><span class=\"line\"><span class=\"code\">int b = 2;</span></span><br><span class=\"line\"><span class=\"code\">```             </span>。(这个句号不用写)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><code>int a = 1;</code>   </p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">双引号中的内容为鼠标悬停时显示的描述</span><br><span class=\"line\">[<span class=\"string\">个人网站</span>](<span class=\"link\">https://wokaibai.top &quot;我的个人网站&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\">&lt;https://wokaibai.top&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\" title=\"我的个人网站\">个人网站</a><br><a href=\"https://wokaibai.top/\">https://wokaibai.top</a></p>\n<hr>\n<h1 id=\"引用形式的超链接\"><a href=\"#引用形式的超链接\" class=\"headerlink\" title=\"引用形式的超链接\"></a>引用形式的超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">个人网站索引</span>]   </span><br><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">个人网站索引</span>]: <span class=\"link\">https://wokaibai.top</span></span><br><span class=\"line\">[<span class=\"symbol\">1</span>]: <span class=\"link\">https://wokaibai.top</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\">个人网站</a><br><a href=\"https://wokaibai.top/\">个人网站</a></p>\n<hr>\n<h1 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用LaTeX公式</span><br><span class=\"line\">$$\\frac&#123;a&#125;&#123;b&#125;$$ 表示块公式</span><br><span class=\"line\">$\\frac&#123;a&#125;&#123;b&#125;$   表示行公式</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>(显示异常就是不支持)<br>$$\\frac{a}{b}$$<br>$\\frac{a}{b}$   </p>\n<p>注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取<br><a href=\"https://www.2weima.com/gongshi.html\">数学公式-&gt;LaTeX表达式或图片</a><br><a href=\"https://www.latexlive.com/\">图片-&gt;LaTeX表达式(需要登录)</a></p>\n<hr>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+</span> 无序列表1</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表3</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 有序列表1</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 有序列表2</span><br><span class=\"line\"><span class=\"bullet\">   1.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">   2.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 有序列表3</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<ul>\n<li>无序列表1</li>\n<li>无序列表2</li>\n<li>无序列表3</li>\n</ul>\n<ol>\n<li>有序列表1</li>\n<li>有序列表2<ol>\n<li>子列表</li>\n<li>子列表</li>\n</ol>\n</li>\n<li>有序列表3</li>\n</ol>\n<hr>\n<h1 id=\"块引用\"><a href=\"#块引用\" class=\"headerlink\" title=\"块引用\"></a>块引用</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 第一行   </span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第二行</span></span><br><span class=\"line\"><span class=\"quote\">&gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第三行</span></span><br><span class=\"line\">&gt;&gt; 嵌套块引用</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<blockquote>\n<p>第一行<br>第二行</p>\n<p>第三行</p>\n<blockquote>\n<p>嵌套块引用</p>\n</blockquote>\n</blockquote>\n<hr>\n<h1 id=\"斜体、粗体、粗斜体、删除线\"><a href=\"#斜体、粗体、粗斜体、删除线\" class=\"headerlink\" title=\"斜体、粗体、粗斜体、删除线\"></a>斜体、粗体、粗斜体、删除线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体*</span>   </span><br><span class=\"line\"><span class=\"strong\">**粗体**</span>   </span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体*</span>**</span>   </span><br><span class=\"line\">~~删除线~~</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><em>斜体</em><br><strong>粗体</strong><br><em><strong>粗斜体</strong></em><br><del>删除线</del></p>\n<hr>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过上传至仓库加载(需要梯子)</span><br><span class=\"line\">![<span class=\"string\">刻晴，图裂了就是没挂梯子</span>](<span class=\"link\">https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp &quot;刻晴&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">图床加载</span><br><span class=\"line\">![<span class=\"string\">背景图片</span>](<span class=\"link\">https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">html标签图床加载</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">300</span> <span class=\"attr\">height</span>=<span class=\"string\">120</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><img src=\"https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp\" alt=\"刻晴，图裂了就是没挂梯子\" title=\"刻晴\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" alt=\"背景图片\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 /></p>\n<hr>\n<h1 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|左对齐  |居中    |右对齐  |</span><br><span class=\"line\">|:---    |---     |---:   |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\"></span><br><span class=\"line\">:--- 表示左对齐</span><br><span class=\"line\">---  表示居中</span><br><span class=\"line\">---: 表示右对齐</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th>居中</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n<tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n</tbody></table>\n<hr>\n<p>其他Markdown语法的参考:<br><a href=\"http://www.zhaowenyu.com/markdown-doc/\">http://www.zhaowenyu.com/markdown-doc/</a> 语法较全，质量较高<br><a href=\"https://butterfly.js.org/posts/89757140/\">https://butterfly.js.org/posts/89757140/</a> Butterfly主题官方出品</p>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<hr>\n<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 一级 #</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 二级 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 三级 ###</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#### 四级 ####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">##### 五级 #####</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">###### 六级 ######</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<h1 id=\"一级\"><a href=\"#一级\" class=\"headerlink\" title=\"一级\"></a>一级</h1><h2 id=\"二级\"><a href=\"#二级\" class=\"headerlink\" title=\"二级\"></a>二级</h2><h3 id=\"三级\"><a href=\"#三级\" class=\"headerlink\" title=\"三级\"></a>三级</h3><h4 id=\"四级\"><a href=\"#四级\" class=\"headerlink\" title=\"四级\"></a>四级</h4><h5 id=\"五级\"><a href=\"#五级\" class=\"headerlink\" title=\"五级\"></a>五级</h5><h6 id=\"六级\"><a href=\"#六级\" class=\"headerlink\" title=\"六级\"></a>六级</h6><hr>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 看不到看不到 --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<!-- 看不到看不到 -->\n\n<hr>\n<h1 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:</p>\n<hr>\n<hr>\n<h1 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入三个空格，一个回车</span><br><span class=\"line\">Hello   </span><br><span class=\"line\">World   </span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\">输入<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\">Hello<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span>World</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>Hello<br>World<br>Hello<br />World</p>\n<hr>\n<h1 id=\"代码和代码块\"><a href=\"#代码和代码块\" class=\"headerlink\" title=\"代码和代码块\"></a>代码和代码块</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">``int a = 1;`</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">```C++</span></span><br><span class=\"line\"><span class=\"code\">int b = 2;</span></span><br><span class=\"line\"><span class=\"code\">```             </span>。(这个句号不用写)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><code>int a = 1;</code>   </p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> b = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">双引号中的内容为鼠标悬停时显示的描述</span><br><span class=\"line\">[<span class=\"string\">个人网站</span>](<span class=\"link\">https://wokaibai.top &quot;我的个人网站&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\">&lt;https://wokaibai.top&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\" title=\"我的个人网站\">个人网站</a><br><a href=\"https://wokaibai.top/\">https://wokaibai.top</a></p>\n<hr>\n<h1 id=\"引用形式的超链接\"><a href=\"#引用形式的超链接\" class=\"headerlink\" title=\"引用形式的超链接\"></a>引用形式的超链接</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">个人网站索引</span>]   </span><br><span class=\"line\">[<span class=\"string\">个人网站</span>][<span class=\"symbol\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">个人网站索引</span>]: <span class=\"link\">https://wokaibai.top</span></span><br><span class=\"line\">[<span class=\"symbol\">1</span>]: <span class=\"link\">https://wokaibai.top</span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><a href=\"https://wokaibai.top/\">个人网站</a><br><a href=\"https://wokaibai.top/\">个人网站</a></p>\n<hr>\n<h1 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用LaTeX公式</span><br><span class=\"line\">$$\\frac&#123;a&#125;&#123;b&#125;$$ 表示块公式</span><br><span class=\"line\">$\\frac&#123;a&#125;&#123;b&#125;$   表示行公式</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br>(显示异常就是不支持)<br>$$\\frac{a}{b}$$<br>$\\frac{a}{b}$   </p>\n<p>注意事项：LaTeX公式需要解析工具的支持。LaTeX公式可以通过以下在线网站获取<br><a href=\"https://www.2weima.com/gongshi.html\">数学公式-&gt;LaTeX表达式或图片</a><br><a href=\"https://www.latexlive.com/\">图片-&gt;LaTeX表达式(需要登录)</a></p>\n<hr>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">+</span> 无序列表1</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表2</span><br><span class=\"line\"><span class=\"bullet\">+</span> 无序列表3</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 有序列表1</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 有序列表2</span><br><span class=\"line\"><span class=\"bullet\">   1.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">   2.</span> 子列表</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 有序列表3</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<ul>\n<li>无序列表1</li>\n<li>无序列表2</li>\n<li>无序列表3</li>\n</ul>\n<ol>\n<li>有序列表1</li>\n<li>有序列表2<ol>\n<li>子列表</li>\n<li>子列表</li>\n</ol>\n</li>\n<li>有序列表3</li>\n</ol>\n<hr>\n<h1 id=\"块引用\"><a href=\"#块引用\" class=\"headerlink\" title=\"块引用\"></a>块引用</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 第一行   </span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第二行</span></span><br><span class=\"line\"><span class=\"quote\">&gt;</span></span><br><span class=\"line\"><span class=\"quote\">&gt; 第三行</span></span><br><span class=\"line\">&gt;&gt; 嵌套块引用</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<blockquote>\n<p>第一行<br>第二行</p>\n<p>第三行</p>\n<blockquote>\n<p>嵌套块引用</p>\n</blockquote>\n</blockquote>\n<hr>\n<h1 id=\"斜体、粗体、粗斜体、删除线\"><a href=\"#斜体、粗体、粗斜体、删除线\" class=\"headerlink\" title=\"斜体、粗体、粗斜体、删除线\"></a>斜体、粗体、粗斜体、删除线</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体*</span>   </span><br><span class=\"line\"><span class=\"strong\">**粗体**</span>   </span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体*</span>**</span>   </span><br><span class=\"line\">~~删除线~~</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><em>斜体</em><br><strong>粗体</strong><br><em><strong>粗斜体</strong></em><br><del>删除线</del></p>\n<hr>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过上传至仓库加载(需要梯子)</span><br><span class=\"line\">![<span class=\"string\">刻晴，图裂了就是没挂梯子</span>](<span class=\"link\">https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp &quot;刻晴&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">图床加载</span><br><span class=\"line\">![<span class=\"string\">背景图片</span>](<span class=\"link\">https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">html标签图床加载</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">300</span> <span class=\"attr\">height</span>=<span class=\"string\">120</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>效果如下:<br><img src=\"https://raw.githubusercontent.com/jixiegaga/jixiegaga.github.io/master/images/keqing1.webp\" alt=\"刻晴，图裂了就是没挂梯子\" title=\"刻晴\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" alt=\"背景图片\"><br><img src=\"https://s2.loli.net/2023/01/19/Jj2HgaZkGq5nAI3.jpg\" width=300 height=120 /></p>\n<hr>\n<h1 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h1><p>语法如下:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|左对齐  |居中    |右对齐  |</span><br><span class=\"line\">|:---    |---     |---:   |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\">|单元格  |单元格  |单元格  |</span><br><span class=\"line\"></span><br><span class=\"line\">:--- 表示左对齐</span><br><span class=\"line\">---  表示居中</span><br><span class=\"line\">---: 表示右对齐</span><br></pre></td></tr></table></figure>\n\n<p>效果如下:   </p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th>居中</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n<tr>\n<td align=\"left\">单元格</td>\n<td>单元格</td>\n<td align=\"right\">单元格</td>\n</tr>\n</tbody></table>\n<hr>\n<p>其他Markdown语法的参考:<br><a href=\"http://www.zhaowenyu.com/markdown-doc/\">http://www.zhaowenyu.com/markdown-doc/</a> 语法较全，质量较高<br><a href=\"https://butterfly.js.org/posts/89757140/\">https://butterfly.js.org/posts/89757140/</a> Butterfly主题官方出品</p>\n<hr>\n"},{"title":"RO上手流程梳理(1)","date":"2023-01-31T12:17:33.000Z","abstract":"不要看不要看!","message":"RO的SVN密码","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# WIN_DEV环境下的流程 #\nmain场景中的SceneControlNode挂载着程序入口脚本GameEntry.cs。   \nGameEntry.cs位于Assets/Runtime/Game/目录下   \n\n## GameEntry.cs生命周期函数 ##\n\n**Start()方法**\n1. 执行``this.Start();``，初始化工作\n   1. 执行``this.initAttr();``，通过Find()获取场景中重要节点的transform\n   2. 执行``this.InitManager();``，初始化各种管理器，一部分管理器通过AddComponent()挂载，一部分直接当成员变量new()出来\n   3. 执行``loadManager.loadVersion(scb, fcb);``，加载版本文件\n      1. scb为加载成功的回调函数\n      2. fcb为加载失败的回调函数\n      3. 这里会直接调用scb\n2. 在scb中执行``this.StartGame();``\n   1. 执行``ResourcesManager.loadFile(path, scb, fcb);``\n      1. 执行``this.editorModelLoadFunctionList.Add();``，将一个匿名的加载函数Add()到List中\n\n**Update()方法**   \n1. 执行加载函数``this._loadFunction();``\n   1. 依次调用this.editorModelLoadFuncitionList链表中的函数，并清空List\n2. 更新组件，遍历m_UpdateComponentList链表的元素(双向链表，非数组)，调用元素的``OnUpdate();``\n3. 更新Socket，原理同上调用元素的``OnUpdate();``\n4. 更新Lua，调用``loop.Update();``，loop为MyLuaLooper类型的变量\n\n## 解析``this.StartGame()``中的``ResourcesManager.loadFile()`` ##\n由上可知执行ResourcesManager.loadFile()实际就是把一个匿名函数交给了一个List，然后在Update()中调用匿名函数。\n但其实在**WIN_DEV**环境下啥也没加载。   \n接着会调用``LuaManager.StartLua();``,一套下去会走执行``require(\"src/updatePackage/updataMain\")``，也就是Lua中的\n```Lua\nrequire('src/updatePackage/updataMain.lua')\n```\n\n## 解析``updataMain.lua`` ##\n1. 执行updateMain.lua的``UpdateMain();``\n2. 执行updateMain.lua的``startMainPackage();``\n3. 执行LuaManager.cs的``StartMain();``\n4. ``require('src/basePackage/mainGame.lua')``\n\n## 解析``mainGame.lua`` ##\n1. ``require(\"src/basePackage/init.lua\")``，在该.lua中主要是使用``require(\"src/basePackage/xxx\")``去加载初始化basePackage目录下的各种模块\n2. 执行mainGame.lua的``Main();``，这里是回到C#层调用的，不太理解为什么不直接在Lua层调用\n3. 执行mainGame.lua的``loadMainRes();``，在该函数内添加下载任务，好像是只下载了一些语言字符串。\n4. 任务下载成功后回调，gameManager.lua的``startGame()``\n\n## 解析gameManager.lua的``startGame()``方法 ##\n1. 使用event.lua模拟mono生命周期的Update, FixedUpdate 和 LateUpdate函数\n    1. event的UpdateBeat，可以看作成Update事件。然后``startGame()``方法会将其他``xxxManager:Update()``方法当成监听者来监听UpdateBeat()\n    2. event的FixedUpdateBeat同上\n    3. event的LateUpdateBeat同上\n2. 执行ProcedureManager.lua的``start();``\n   1. 执行procedureManager.lua的``createProcedureFsm();``，通过fsm.lua来创建 游戏流程状态机\n   2. 执行procedureManager.lua的``changeState(初始状态)``->fsm.lua的``changeState(初始状态)``，设置初始状态","source":"_posts/RO/RO上手流程梳理(1).md","raw":"---\ntitle: RO上手流程梳理(1)\ndate: 2023-01-31 20:17:33\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的SVN密码\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# WIN_DEV环境下的流程 #\nmain场景中的SceneControlNode挂载着程序入口脚本GameEntry.cs。   \nGameEntry.cs位于Assets/Runtime/Game/目录下   \n\n## GameEntry.cs生命周期函数 ##\n\n**Start()方法**\n1. 执行``this.Start();``，初始化工作\n   1. 执行``this.initAttr();``，通过Find()获取场景中重要节点的transform\n   2. 执行``this.InitManager();``，初始化各种管理器，一部分管理器通过AddComponent()挂载，一部分直接当成员变量new()出来\n   3. 执行``loadManager.loadVersion(scb, fcb);``，加载版本文件\n      1. scb为加载成功的回调函数\n      2. fcb为加载失败的回调函数\n      3. 这里会直接调用scb\n2. 在scb中执行``this.StartGame();``\n   1. 执行``ResourcesManager.loadFile(path, scb, fcb);``\n      1. 执行``this.editorModelLoadFunctionList.Add();``，将一个匿名的加载函数Add()到List中\n\n**Update()方法**   \n1. 执行加载函数``this._loadFunction();``\n   1. 依次调用this.editorModelLoadFuncitionList链表中的函数，并清空List\n2. 更新组件，遍历m_UpdateComponentList链表的元素(双向链表，非数组)，调用元素的``OnUpdate();``\n3. 更新Socket，原理同上调用元素的``OnUpdate();``\n4. 更新Lua，调用``loop.Update();``，loop为MyLuaLooper类型的变量\n\n## 解析``this.StartGame()``中的``ResourcesManager.loadFile()`` ##\n由上可知执行ResourcesManager.loadFile()实际就是把一个匿名函数交给了一个List，然后在Update()中调用匿名函数。\n但其实在**WIN_DEV**环境下啥也没加载。   \n接着会调用``LuaManager.StartLua();``,一套下去会走执行``require(\"src/updatePackage/updataMain\")``，也就是Lua中的\n```Lua\nrequire('src/updatePackage/updataMain.lua')\n```\n\n## 解析``updataMain.lua`` ##\n1. 执行updateMain.lua的``UpdateMain();``\n2. 执行updateMain.lua的``startMainPackage();``\n3. 执行LuaManager.cs的``StartMain();``\n4. ``require('src/basePackage/mainGame.lua')``\n\n## 解析``mainGame.lua`` ##\n1. ``require(\"src/basePackage/init.lua\")``，在该.lua中主要是使用``require(\"src/basePackage/xxx\")``去加载初始化basePackage目录下的各种模块\n2. 执行mainGame.lua的``Main();``，这里是回到C#层调用的，不太理解为什么不直接在Lua层调用\n3. 执行mainGame.lua的``loadMainRes();``，在该函数内添加下载任务，好像是只下载了一些语言字符串。\n4. 任务下载成功后回调，gameManager.lua的``startGame()``\n\n## 解析gameManager.lua的``startGame()``方法 ##\n1. 使用event.lua模拟mono生命周期的Update, FixedUpdate 和 LateUpdate函数\n    1. event的UpdateBeat，可以看作成Update事件。然后``startGame()``方法会将其他``xxxManager:Update()``方法当成监听者来监听UpdateBeat()\n    2. event的FixedUpdateBeat同上\n    3. event的LateUpdateBeat同上\n2. 执行ProcedureManager.lua的``start();``\n   1. 执行procedureManager.lua的``createProcedureFsm();``，通过fsm.lua来创建 游戏流程状态机\n   2. 执行procedureManager.lua的``changeState(初始状态)``->fsm.lua的``changeState(初始状态)``，设置初始状态","slug":"RO/RO上手流程梳理(1)","published":1,"updated":"2023-02-01T09:41:26.071Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4ug000m70v60bkx0hoo","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"32675a917b85624655c14648f6b03cf31f1aba2ee82dcb8c8a5b1b510d3a922c\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的SVN密码</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"WIN-DEV环境下的流程\"><a href=\"#WIN-DEV环境下的流程\" class=\"headerlink\" title=\"WIN_DEV环境下的流程\"></a>WIN_DEV环境下的流程</h1><p>main场景中的SceneControlNode挂载着程序入口脚本GameEntry.cs。<br>GameEntry.cs位于Assets&#x2F;Runtime&#x2F;Game&#x2F;目录下   </p>\n<h2 id=\"GameEntry-cs生命周期函数\"><a href=\"#GameEntry-cs生命周期函数\" class=\"headerlink\" title=\"GameEntry.cs生命周期函数\"></a>GameEntry.cs生命周期函数</h2><p><strong>Start()方法</strong></p>\n<ol>\n<li>执行<code>this.Start();</code>，初始化工作<ol>\n<li>执行<code>this.initAttr();</code>，通过Find()获取场景中重要节点的transform</li>\n<li>执行<code>this.InitManager();</code>，初始化各种管理器，一部分管理器通过AddComponent()挂载，一部分直接当成员变量new()出来</li>\n<li>执行<code>loadManager.loadVersion(scb, fcb);</code>，加载版本文件<ol>\n<li>scb为加载成功的回调函数</li>\n<li>fcb为加载失败的回调函数</li>\n<li>这里会直接调用scb</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>在scb中执行<code>this.StartGame();</code><ol>\n<li>执行<code>ResourcesManager.loadFile(path, scb, fcb);</code><ol>\n<li>执行<code>this.editorModelLoadFunctionList.Add();</code>，将一个匿名的加载函数Add()到List中</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p><strong>Update()方法</strong>   </p>\n<ol>\n<li>执行加载函数<code>this._loadFunction();</code><ol>\n<li>依次调用this.editorModelLoadFuncitionList链表中的函数，并清空List</li>\n</ol>\n</li>\n<li>更新组件，遍历m_UpdateComponentList链表的元素(双向链表，非数组)，调用元素的<code>OnUpdate();</code></li>\n<li>更新Socket，原理同上调用元素的<code>OnUpdate();</code></li>\n<li>更新Lua，调用<code>loop.Update();</code>，loop为MyLuaLooper类型的变量</li>\n</ol>\n<h2 id=\"解析this-StartGame-中的ResourcesManager-loadFile\"><a href=\"#解析this-StartGame-中的ResourcesManager-loadFile\" class=\"headerlink\" title=\"解析this.StartGame()中的ResourcesManager.loadFile()\"></a>解析<code>this.StartGame()</code>中的<code>ResourcesManager.loadFile()</code></h2><p>由上可知执行ResourcesManager.loadFile()实际就是把一个匿名函数交给了一个List，然后在Update()中调用匿名函数。<br>但其实在<strong>WIN_DEV</strong>环境下啥也没加载。<br>接着会调用<code>LuaManager.StartLua();</code>,一套下去会走执行<code>require(&quot;src/updatePackage/updataMain&quot;)</code>，也就是Lua中的</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;src/updatePackage/updataMain.lua&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解析updataMain-lua\"><a href=\"#解析updataMain-lua\" class=\"headerlink\" title=\"解析updataMain.lua\"></a>解析<code>updataMain.lua</code></h2><ol>\n<li>执行updateMain.lua的<code>UpdateMain();</code></li>\n<li>执行updateMain.lua的<code>startMainPackage();</code></li>\n<li>执行LuaManager.cs的<code>StartMain();</code></li>\n<li><code>require(&#39;src/basePackage/mainGame.lua&#39;)</code></li>\n</ol>\n<h2 id=\"解析mainGame-lua\"><a href=\"#解析mainGame-lua\" class=\"headerlink\" title=\"解析mainGame.lua\"></a>解析<code>mainGame.lua</code></h2><ol>\n<li><code>require(&quot;src/basePackage/init.lua&quot;)</code>，在该.lua中主要是使用<code>require(&quot;src/basePackage/xxx&quot;)</code>去加载初始化basePackage目录下的各种模块</li>\n<li>执行mainGame.lua的<code>Main();</code>，这里是回到C#层调用的，不太理解为什么不直接在Lua层调用</li>\n<li>执行mainGame.lua的<code>loadMainRes();</code>，在该函数内添加下载任务，好像是只下载了一些语言字符串。</li>\n<li>任务下载成功后回调，gameManager.lua的<code>startGame()</code></li>\n</ol>\n<h2 id=\"解析gameManager-lua的startGame-方法\"><a href=\"#解析gameManager-lua的startGame-方法\" class=\"headerlink\" title=\"解析gameManager.lua的startGame()方法\"></a>解析gameManager.lua的<code>startGame()</code>方法</h2><ol>\n<li>使用event.lua模拟mono生命周期的Update, FixedUpdate 和 LateUpdate函数<ol>\n<li>event的UpdateBeat，可以看作成Update事件。然后<code>startGame()</code>方法会将其他<code>xxxManager:Update()</code>方法当成监听者来监听UpdateBeat()</li>\n<li>event的FixedUpdateBeat同上</li>\n<li>event的LateUpdateBeat同上</li>\n</ol>\n</li>\n<li>执行ProcedureManager.lua的<code>start();</code><ol>\n<li>执行procedureManager.lua的<code>createProcedureFsm();</code>，通过fsm.lua来创建 游戏流程状态机</li>\n<li>执行procedureManager.lua的<code>changeState(初始状态)</code>-&gt;fsm.lua的<code>changeState(初始状态)</code>，设置初始状态</li>\n</ol>\n</li>\n</ol>\n","encrypt":true},{"title":"RO上手流程梳理(2)","date":"2023-02-01T09:42:45.000Z","abstract":"不要看不要看!","message":"RO的SVN密码","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# RO中的Lua面向对象 #\n目录位置 ``src\\basePackage\\core\\luaCore.lua``\n\n## _baseClass ##\n```Lua\nlocal _baseClass = {}\n_bassClass.__index = _baseClass\n\nfunction _bassClass:new(...)\n    local t = {}\n    setmetatable(t, self)\n\n    -- 构造函数会在class定义的时候就执行\n    if t.ctor then\n        t:ctor(...)\n    end\n\n    return t\nend\n\n-- 跟 new(...) 完全相同\nfunction _baseClass:create(...) \n    ...\nend\n```\n\n## class(...) ##\n```Lua\n-- 定义一个class, 参数表示基类\nfunction class(...)\n    local t = {}    -- 用于返回这个 class\n    t.__index = t\n    local supers = {...}    -- 将 ... 参数构造成索引从1开始的表, 表示基类数组\n\n    -- 将 ...表示的基类, 放进 t.__supers表里\n    -- 并将 ...里第一个类作为 t的基类\n    for _, super in ipairs(supers) do\n        t.__supers = t.__supers or {} -- 如果t.__supers是 nil, 则让他为 {}, 否则不变\n        t.__supers[#t.__supers + 1] = super -- 将基类添加到 __supers里\n\n        -- 将 ...中第一个类作为 t的基类\n        if not t.super then\n            t.super = super\n        end\n    end\n\n    -- 第一个条件: 如果 ...没有东西\n    -- 第二个条件: 无法理解为什么还要判断\n    -- 总得来说就是这个 class 没有基类的话\n    if not t.__supers or #t.__supers == 0 then\n        setmetatable(t, _baseClass)\n    else\n    -- 这个 class 有基类的话\n    -- 这里元表的__index的元方法是，从第一个基类开始，遍历所有基类去看有无这个key\n        setmetatable(t,{\n            __index = function(_, key)\n                local supers = t.__supers   -- 拿出t的全部基类\n                for i = 1, #supers do\n                    local super = supers[i]\n                    if super[key] then\n                        return super[key]\n                    end\n                end\n            end\n        })\n\n        -- 是否t以及t的基类是否有new()函数，没有则定义一个，同_bassClass中的new()一样\n        if t.new == nil then\n            t.new = function(myself, ...)\n                local ins = {}\n                setmetatable(ins, t)\n                if ins.ctor then\n                    ins:ctor(...)\n                end\n                return ins\n            end\n        end\n    end\n    return t\nend\n```\nclass(...)中的t的结构    \nt.__index = 自己  \nt.__supers = {表示全部的基类}   \n{__index = 从基类中拿一个 }当有继承时的元表","source":"_posts/RO/RO上手流程梳理(2).md","raw":"---\ntitle: RO上手流程梳理(2)\ndate: 2023-02-01 17:42:45\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的SVN密码\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# RO中的Lua面向对象 #\n目录位置 ``src\\basePackage\\core\\luaCore.lua``\n\n## _baseClass ##\n```Lua\nlocal _baseClass = {}\n_bassClass.__index = _baseClass\n\nfunction _bassClass:new(...)\n    local t = {}\n    setmetatable(t, self)\n\n    -- 构造函数会在class定义的时候就执行\n    if t.ctor then\n        t:ctor(...)\n    end\n\n    return t\nend\n\n-- 跟 new(...) 完全相同\nfunction _baseClass:create(...) \n    ...\nend\n```\n\n## class(...) ##\n```Lua\n-- 定义一个class, 参数表示基类\nfunction class(...)\n    local t = {}    -- 用于返回这个 class\n    t.__index = t\n    local supers = {...}    -- 将 ... 参数构造成索引从1开始的表, 表示基类数组\n\n    -- 将 ...表示的基类, 放进 t.__supers表里\n    -- 并将 ...里第一个类作为 t的基类\n    for _, super in ipairs(supers) do\n        t.__supers = t.__supers or {} -- 如果t.__supers是 nil, 则让他为 {}, 否则不变\n        t.__supers[#t.__supers + 1] = super -- 将基类添加到 __supers里\n\n        -- 将 ...中第一个类作为 t的基类\n        if not t.super then\n            t.super = super\n        end\n    end\n\n    -- 第一个条件: 如果 ...没有东西\n    -- 第二个条件: 无法理解为什么还要判断\n    -- 总得来说就是这个 class 没有基类的话\n    if not t.__supers or #t.__supers == 0 then\n        setmetatable(t, _baseClass)\n    else\n    -- 这个 class 有基类的话\n    -- 这里元表的__index的元方法是，从第一个基类开始，遍历所有基类去看有无这个key\n        setmetatable(t,{\n            __index = function(_, key)\n                local supers = t.__supers   -- 拿出t的全部基类\n                for i = 1, #supers do\n                    local super = supers[i]\n                    if super[key] then\n                        return super[key]\n                    end\n                end\n            end\n        })\n\n        -- 是否t以及t的基类是否有new()函数，没有则定义一个，同_bassClass中的new()一样\n        if t.new == nil then\n            t.new = function(myself, ...)\n                local ins = {}\n                setmetatable(ins, t)\n                if ins.ctor then\n                    ins:ctor(...)\n                end\n                return ins\n            end\n        end\n    end\n    return t\nend\n```\nclass(...)中的t的结构    \nt.__index = 自己  \nt.__supers = {表示全部的基类}   \n{__index = 从基类中拿一个 }当有继承时的元表","slug":"RO/RO上手流程梳理(2)","published":1,"updated":"2023-02-02T06:14:20.507Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4uh000n70v6g2g4hcwq","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"cbe24c993c9a7fd00f813f868feba3010185738c8cad9cebf834bf4210ecde9d\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的SVN密码</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"RO中的Lua面向对象\"><a href=\"#RO中的Lua面向对象\" class=\"headerlink\" title=\"RO中的Lua面向对象\"></a>RO中的Lua面向对象</h1><p>目录位置 <code>src\\basePackage\\core\\luaCore.lua</code></p>\n<h2 id=\"baseClass\"><a href=\"#baseClass\" class=\"headerlink\" title=\"_baseClass\"></a>_baseClass</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> _baseClass = &#123;&#125;</span><br><span class=\"line\">_bassClass.<span class=\"built_in\">__index</span> = _baseClass</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_bassClass:new</span><span class=\"params\">(...)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = &#123;&#125;</span><br><span class=\"line\">    <span class=\"built_in\">setmetatable</span>(t, <span class=\"built_in\">self</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- 构造函数会在class定义的时候就执行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> t.ctor <span class=\"keyword\">then</span></span><br><span class=\"line\">        t:ctor(...)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 跟 new(...) 完全相同</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_baseClass:create</span><span class=\"params\">(...)</span></span> </span><br><span class=\"line\">    ...</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"class-…\"><a href=\"#class-…\" class=\"headerlink\" title=\"class(…)\"></a>class(…)</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 定义一个class, 参数表示基类</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">class</span><span class=\"params\">(...)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = &#123;&#125;    <span class=\"comment\">-- 用于返回这个 class</span></span><br><span class=\"line\">    t.<span class=\"built_in\">__index</span> = t</span><br><span class=\"line\">    <span class=\"keyword\">local</span> supers = &#123;...&#125;    <span class=\"comment\">-- 将 ... 参数构造成索引从1开始的表, 表示基类数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- 将 ...表示的基类, 放进 t.__supers表里</span></span><br><span class=\"line\">    <span class=\"comment\">-- 并将 ...里第一个类作为 t的基类</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _, super <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(supers) <span class=\"keyword\">do</span></span><br><span class=\"line\">        t.__supers = t.__supers <span class=\"keyword\">or</span> &#123;&#125; <span class=\"comment\">-- 如果t.__supers是 nil, 则让他为 &#123;&#125;, 否则不变</span></span><br><span class=\"line\">        t.__supers[#t.__supers + <span class=\"number\">1</span>] = super <span class=\"comment\">-- 将基类添加到 __supers里</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">-- 将 ...中第一个类作为 t的基类</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> t.super <span class=\"keyword\">then</span></span><br><span class=\"line\">            t.super = super</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- 第一个条件: 如果 ...没有东西</span></span><br><span class=\"line\">    <span class=\"comment\">-- 第二个条件: 无法理解为什么还要判断</span></span><br><span class=\"line\">    <span class=\"comment\">-- 总得来说就是这个 class 没有基类的话</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> t.__supers <span class=\"keyword\">or</span> #t.__supers == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(t, _baseClass)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"comment\">-- 这个 class 有基类的话</span></span><br><span class=\"line\">    <span class=\"comment\">-- 这里元表的__index的元方法是，从第一个基类开始，遍历所有基类去看有无这个key</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(t,&#123;</span><br><span class=\"line\">            <span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(_, key)</span></span></span><br><span class=\"line\">                <span class=\"keyword\">local</span> supers = t.__supers   <span class=\"comment\">-- 拿出t的全部基类</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, #supers <span class=\"keyword\">do</span></span><br><span class=\"line\">                    <span class=\"keyword\">local</span> super = supers[i]</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> super[key] <span class=\"keyword\">then</span></span><br><span class=\"line\">                        <span class=\"keyword\">return</span> super[key]</span><br><span class=\"line\">                    <span class=\"keyword\">end</span></span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">-- 是否t以及t的基类是否有new()函数，没有则定义一个，同_bassClass中的new()一样</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> t.new == <span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">            t.new = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(myself, ...)</span></span></span><br><span class=\"line\">                <span class=\"keyword\">local</span> ins = &#123;&#125;</span><br><span class=\"line\">                <span class=\"built_in\">setmetatable</span>(ins, t)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ins.ctor <span class=\"keyword\">then</span></span><br><span class=\"line\">                    ins:ctor(...)</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> ins</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>class(…)中的t的结构<br>t.__index &#x3D; 自己<br>t.__supers &#x3D; {表示全部的基类}<br>{__index &#x3D; 从基类中拿一个 }当有继承时的元表</p>\n","encrypt":true},{"title":"RO上手流程梳理(4)","date":"2023-02-21T08:57:38.000Z","abstract":"不要看不要看!","message":"RO的SVN密码","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# 项目笔记 #\n","source":"_posts/RO/RO上手流程梳理(4).md","raw":"---\ntitle: RO上手流程梳理(4)\ndate: 2023-02-21 16:57:38\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的SVN密码\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# 项目笔记 #\n","slug":"RO/RO上手流程梳理(4)","published":1,"updated":"2023-02-24T03:31:40.996Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4ui000q70v67b2q5ukb","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"0ac14ce9c1b780d1b095eaa14f2fb008234a304252d83b90ac12217d6034ecd4\">53686cb3e6c0919ada695e59b6c12acfeec7fed8c5c31bfb2e56cec4acc6d7bed1d7cbee28c584812028166eba8ab7e5de9be3ddf320ea867393cbb648666704bd520852d414630d6b17a3855129b3f604ad08cc3e1c17170a86a2ed6aa4944af6ea3c5bba0f1f5e718415f4b6d51dc7ab3e1b9915bf7025f12a2fc8582f0c80eeb4d4ff98cc52ddc1f9f499c402dd0b</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的SVN密码</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"项目笔记\"><a href=\"#项目笔记\" class=\"headerlink\" title=\"项目笔记\"></a>项目笔记</h1>","encrypt":true},{"title":"RO上手流程梳理(3)","date":"2023-02-01T11:40:38.000Z","abstract":"不要看不要看!","message":"RO的SVN密码","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n---\n\n# WIN_DEV环境下的流程 #\n以下内容为梳理**fsm**、**procedureManager**和**procedureXXX**的关系，这三者构建成了一个类似有限状态机的模式.   \n**fsm**的目录为 **src\\basePackage\\core\\fsm**   \n**procedureManager**的目录为 **src\\basePackage\\manager**   \n**procedureXXX**的目录为 **src\\basePackage\\procedure**\n\n## FsmBaseState 和 ProcedureXXX ##\n``FsmBaseState``可以当做成状态基类   \n``ProcedureXXX``则是具体的状态类   \n1. ``FsmBaseState``状态基类的方法和变量\n   1. 变量\n      1. ``stateType``表示状态类型\n      2. ``fsm``表示状态机\n   2. 方法\n      1. ``ctor()``构造函数，会在new()的时候执行\n      2. ``init(stateType, fsm)``初始化函数，然后执行onInit()\n      3. ``canChageFrom(lastState)``判断能否转换状态，相同状态不能转换\n      4. ``onInit()``会在init()函数中调用\n      5. ``onEnter(lastState)``进入该状态时调用\n      6. ``onLeave(lastState)``退出该状态时调用\n      7. ``onUpdate(dt, unScaledDt)``每帧调用\n      8. ``onDestroy()``销毁该状态时调用\n2. ``ProcedureXXX``具体状态类,不难理解\n\n## Fsm ##\n\n\n","source":"_posts/RO/RO上手流程梳理(3).md","raw":"---\ntitle: RO上手流程梳理(3)\ndate: 2023-02-01 19:40:38\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的SVN密码\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n---\n\n# WIN_DEV环境下的流程 #\n以下内容为梳理**fsm**、**procedureManager**和**procedureXXX**的关系，这三者构建成了一个类似有限状态机的模式.   \n**fsm**的目录为 **src\\basePackage\\core\\fsm**   \n**procedureManager**的目录为 **src\\basePackage\\manager**   \n**procedureXXX**的目录为 **src\\basePackage\\procedure**\n\n## FsmBaseState 和 ProcedureXXX ##\n``FsmBaseState``可以当做成状态基类   \n``ProcedureXXX``则是具体的状态类   \n1. ``FsmBaseState``状态基类的方法和变量\n   1. 变量\n      1. ``stateType``表示状态类型\n      2. ``fsm``表示状态机\n   2. 方法\n      1. ``ctor()``构造函数，会在new()的时候执行\n      2. ``init(stateType, fsm)``初始化函数，然后执行onInit()\n      3. ``canChageFrom(lastState)``判断能否转换状态，相同状态不能转换\n      4. ``onInit()``会在init()函数中调用\n      5. ``onEnter(lastState)``进入该状态时调用\n      6. ``onLeave(lastState)``退出该状态时调用\n      7. ``onUpdate(dt, unScaledDt)``每帧调用\n      8. ``onDestroy()``销毁该状态时调用\n2. ``ProcedureXXX``具体状态类,不难理解\n\n## Fsm ##\n\n\n","slug":"RO/RO上手流程梳理(3)","published":1,"updated":"2023-02-03T09:15:00.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf4ax4uk000t70v6crz60ry1","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"52f50d5949f7d893300c9de450ffa65bf4e0ed67ddd02f46d8ce60a2828d02a3\">53686cb3e6c0919ada695e59b6c12acfeec7fed8c5c31bfb2e56cec4acc6d7be2c6511454982ecdbfe159bc0872822841157e1dcf22f6ea406de7b9600086ffe9fce444a80806dc65a1357bda64d1ba342f1f145006d25f491c3b8148f9af79ec2fb52431369bbb8ba8088f687a533ce5d674fc16ae0b5b9b28b1664178687039eb37183c7272e4f3250ed02f1b0819883104c4c707253d0dfd9f17e7a7f4e9f7d553a6e325276f05c47ba7ab0a77733fc97d477bb18a5dd12ae907a0d65bab12db2362c2f6a35c378524cda28e4007483a18d03269e2e2adc71f995a9a13026de35f268effa5dd588a662092094844f262f4f63b076a4ef7d6aff573dd9ac7269b74e4656bdfb6b8b34251822447ca0b41ae8308b7597f12c28a498d28478eaa8348c67c99f1cb2eef9f78552f92eb46cfa15eeb4ccc2e43db861c20ec9c639e3bc80f558019d21fbb4c700101d9387c09a4d2e348fe2691b1b42d8ca8b6492acf9d3e201bc58045c8034e76dd72e1117e844cddd25d68ecac9c71df36f38a237a62801ecef40cd279354b44921189ebd2652f5307682510472776f638f4053212a0bd5a7a20f97fcfcff4a005e37ee5ec0e8ee4a69fb6686e3658d558c16e7ecff02123d6c2a9ee3d718415cedc42d84a6760fed6a1c457a8db5bdbfd23767fb9083c2a8894c71cb7cb4ea26cc7432a556f6af773493b6d0b93d55201476694304f247aa70e07def5f9c9619da060a7ceaa62830ff4422fd82cdcaeedcf21086451c36841111f886c052b5823ced7c6e13c3060214221de033449695011d1353487bd61f69a475da119cc175b32249adb91f5d456194853ed3298bb6d09377d62296ac00338dc9502561b7464b07007e126c19f90024305e29527db389b90aef2c48312a8e39125247395d26465bf96784ff432d5b1a00e61178b62c5a5b83c836f3058cb4a5cdbc61884d0e11fa68e09d77257439dc06505c2da5bde5042d4d46ec13327784d919c298f4977aaa81314d9c862b0db00c647c1803a673d4450c90e37e633d17745d946a20f1f23f64dfefc22bcc0c3c750dc4e69714b4ddaaa92cb3001485add764027bdcc703e9690090eb2c739d4e368eb775ca9af555e05533372d0a29a5edd1ef6bd1329edd82e7bdab24794d56fc192148afd5afc570a18be7e2837b3ca2ac0ff73fadc1f9c7c2e072f4416610ed4fcbf135e27d451c57680bff4bf9701753806621f7a76ee0e8fa112ce7994e8935077fda7144d32610cb081993f617792aa7c21c466db655bc65992bc5eadce9fc4f6a1e25a675ece8c2c222ce25a502bb650597d499830b011ddf17c3cc1162e5b2dc8b3942c6f1dcd4725b2ad80bb2cb1925139e33caf3281d3a01004deef7f1ffbeae90ff2e2fcea1d8579ad197ec9644e60463fb38b441a6244ceb9d65556c7ae331b1df3facca9df11b394f57980a45eaf7ffa5fffd5769b206f93a5e7b93a83e602c11732f1ed7c8ddc82507bf02a568e43eb4c652d6a5c83230ecfd53f8b5f2abe6fc2f81bc7ee6ce4ec15a6eb5aa58e2380853883fb3b4a90b9aa39e570acf68339745d9117ba3aec3df8bf3163ced36811111db99b4fedcf210fd2865fbb14680decba46f91d4a0486e0cf1e7253e226ef2f34c7ab17b7fa8711df243726b230d07b53ae079f4d79f2c34bf41e12132fb432285a04aba76885f4230800965058673500d96ab8caa57ac3742076a2dfedec45c2b8b0cf038a46f0bf7e94455034bfbcb61c745b12baab92182def681cab036bbcaa72ebffd5ac787f4bd5bd26b480f9a93135520c339042f232b7a3cca97a82d103a4390f25fa7edcf0d0b4c8869646e475f74bf50cf3de2b1bf0ed47a4da913313eafd97f6dec535b70ea978d6a3984253e24d804636a6fe5e77565fd53ac080fb939dfd451d6a9dd8f5b607e71c99bad97001977f91b0ffd4e758ca56e5bbd8fdc7cf338c901c875dcb97ba229cda292a6ac30c358855326d31d18fbc0c8e07fc940aeb26322f9283b90c91a219a67c27a06936b9051d6415b61eca4843b9fa5cf2d436b1529874e9dcb68c9bd4d00417e81c99be5ddeb0f5de30a78ebc5ccee6d657325eb32b61221fd09160227e3a2449650761940423342d4ac50de74297c278d002b5ad031632f3513396c6cede94a8dcf68040f4f226af3d329a03d14c66113429957950020fa274a8c235a4f3bcca88c2c3c136d68268d267327f998b4b224ea2154fd6de47a07b7a332c199bded6ec0d121af6803512ad76351c25ab3e3419d674560c23d50a0789274238c8cee9f9de657cce1e583fd609137af45381d75ac83e3c961a9ea7426b7d505ae6b90f222e34fe29c494188c3aa25d6e00a1ee21a2383e06410ba957449804717fd3eafe8224099ec0e60d810565d07599f964fa186d29160f9e663b32afc926a16c59e61f3e269786f41c73eb79f1dbc70039979eebac74fb2d03254d9bfacf074b3632602f4bb194e464ad64cff57f2c84c2b1a5928cf4df44326726cda08b0b16427ad59f25c4b59e8b938326e61acb4fa1e831aa9e0ed67d8c44679b24741cc792c80a33a0df9f4cdcf6909e0322f3bc76d626c13410764d7404cf0ccd70aae</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的SVN密码</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<hr>\n<h1 id=\"WIN-DEV环境下的流程\"><a href=\"#WIN-DEV环境下的流程\" class=\"headerlink\" title=\"WIN_DEV环境下的流程\"></a>WIN_DEV环境下的流程</h1><p>以下内容为梳理<strong>fsm</strong>、<strong>procedureManager</strong>和<strong>procedureXXX</strong>的关系，这三者构建成了一个类似有限状态机的模式.<br><strong>fsm</strong>的目录为 <strong>src\\basePackage\\core\\fsm</strong><br><strong>procedureManager</strong>的目录为 <strong>src\\basePackage\\manager</strong><br><strong>procedureXXX</strong>的目录为 <strong>src\\basePackage\\procedure</strong></p>\n<h2 id=\"FsmBaseState-和-ProcedureXXX\"><a href=\"#FsmBaseState-和-ProcedureXXX\" class=\"headerlink\" title=\"FsmBaseState 和 ProcedureXXX\"></a>FsmBaseState 和 ProcedureXXX</h2><p><code>FsmBaseState</code>可以当做成状态基类<br><code>ProcedureXXX</code>则是具体的状态类   </p>\n<ol>\n<li><code>FsmBaseState</code>状态基类的方法和变量<ol>\n<li>变量<ol>\n<li><code>stateType</code>表示状态类型</li>\n<li><code>fsm</code>表示状态机</li>\n</ol>\n</li>\n<li>方法<ol>\n<li><code>ctor()</code>构造函数，会在new()的时候执行</li>\n<li><code>init(stateType, fsm)</code>初始化函数，然后执行onInit()</li>\n<li><code>canChageFrom(lastState)</code>判断能否转换状态，相同状态不能转换</li>\n<li><code>onInit()</code>会在init()函数中调用</li>\n<li><code>onEnter(lastState)</code>进入该状态时调用</li>\n<li><code>onLeave(lastState)</code>退出该状态时调用</li>\n<li><code>onUpdate(dt, unScaledDt)</code>每帧调用</li>\n<li><code>onDestroy()</code>销毁该状态时调用</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><code>ProcedureXXX</code>具体状态类,不难理解</li>\n</ol>\n<h2 id=\"Fsm\"><a href=\"#Fsm\" class=\"headerlink\" title=\"Fsm\"></a>Fsm</h2>","encrypt":true},{"title":"unity学习版","date":"2023-03-12T13:02:56.000Z","_content":"\n# 国际版下载方式 #\n1. 打开全局代理，下载过程需要全程开启\n2. 官方下载地址<https://unity.com/download#how-get-started>\n3. 启动方式(切规则代理)   \n   + 方式一\n   ```CMD\n   @echo off\n   set HTTP_PROXY=http://127.0.0.1:7890\n   set HTTPS_PROXY=http://127.0.0.1:7890\n   start \"\" \"D:\\Unity Hub\\Unity Hub.exe\"\n   ```   \n   + 方式二\n   在Clash for Window里设置代理规则，关键字unity,unityhub\n\n---\n\n# 学习软件 #\n<https://github.com/tylearymf/UniHacker>\n\n---","source":"_posts/我是学生/unity学习版.md","raw":"---\ntitle: unity学习版\ndate: 2023-03-12 21:02:56\ntags: [\"unityHub\"]\ncategories: [\"我是学生\"]\n\n---\n\n# 国际版下载方式 #\n1. 打开全局代理，下载过程需要全程开启\n2. 官方下载地址<https://unity.com/download#how-get-started>\n3. 启动方式(切规则代理)   \n   + 方式一\n   ```CMD\n   @echo off\n   set HTTP_PROXY=http://127.0.0.1:7890\n   set HTTPS_PROXY=http://127.0.0.1:7890\n   start \"\" \"D:\\Unity Hub\\Unity Hub.exe\"\n   ```   \n   + 方式二\n   在Clash for Window里设置代理规则，关键字unity,unityhub\n\n---\n\n# 学习软件 #\n<https://github.com/tylearymf/UniHacker>\n\n---","slug":"我是学生/unity学习版","published":1,"updated":"2023-03-12T13:58:38.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf5gohix0002ugv6dg7v93z3","content":"<h1 id=\"国际版下载方式\"><a href=\"#国际版下载方式\" class=\"headerlink\" title=\"国际版下载方式\"></a>国际版下载方式</h1><ol>\n<li>打开全局代理，下载过程需要全程开启</li>\n<li>官方下载地址<a href=\"https://unity.com/download#how-get-started\">https://unity.com/download#how-get-started</a></li>\n<li>启动方式(切规则代理)   <ul>\n<li>方式一</li>\n</ul>\n<pre><code class=\"CMD\">@echo off\nset HTTP_PROXY=http://127.0.0.1:7890\nset HTTPS_PROXY=http://127.0.0.1:7890\nstart &quot;&quot; &quot;D:\\Unity Hub\\Unity Hub.exe&quot;\n</code></pre>\n<ul>\n<li>方式二<br>在Clash for Window里设置代理规则，关键字unity,unityhub</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"学习软件\"><a href=\"#学习软件\" class=\"headerlink\" title=\"学习软件\"></a>学习软件</h1><p><a href=\"https://github.com/tylearymf/UniHacker\">https://github.com/tylearymf/UniHacker</a></p>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"国际版下载方式\"><a href=\"#国际版下载方式\" class=\"headerlink\" title=\"国际版下载方式\"></a>国际版下载方式</h1><ol>\n<li>打开全局代理，下载过程需要全程开启</li>\n<li>官方下载地址<a href=\"https://unity.com/download#how-get-started\">https://unity.com/download#how-get-started</a></li>\n<li>启动方式(切规则代理)   <ul>\n<li>方式一</li>\n</ul>\n<pre><code class=\"CMD\">@echo off\nset HTTP_PROXY=http://127.0.0.1:7890\nset HTTPS_PROXY=http://127.0.0.1:7890\nstart &quot;&quot; &quot;D:\\Unity Hub\\Unity Hub.exe&quot;\n</code></pre>\n<ul>\n<li>方式二<br>在Clash for Window里设置代理规则，关键字unity,unityhub</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"学习软件\"><a href=\"#学习软件\" class=\"headerlink\" title=\"学习软件\"></a>学习软件</h1><p><a href=\"https://github.com/tylearymf/UniHacker\">https://github.com/tylearymf/UniHacker</a></p>\n<hr>\n"},{"title":"rider学习版","date":"2023-03-12T15:02:56.000Z","_content":"\n# 本体下载 #   \n<https://www.jetbrains.com/rider/download/#section=windows>\n\n---\n\n# 学习信息 #   \n+ 学习付费版   \nbilibili:<https://www.bilibili.com/read/cv11200249>   \n解压码:mpvgg   \nqq:3184207379   \n百度云(提取码yj9y):<https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA>\n\n+ 白嫖学习版   \n教程:<https://www.exception.site>   \n公众号:Java学习者社区(回复:idea)\n\n+ 建议正版。。。。。正版比学习版好用多了\n---","source":"_posts/我是学生/rider学习版.md","raw":"---\ntitle: rider学习版\ndate: 2023-03-12 23:02:56\ntags: [\"rider\"]\ncategories: [\"我是学生\"]\n\n---\n\n# 本体下载 #   \n<https://www.jetbrains.com/rider/download/#section=windows>\n\n---\n\n# 学习信息 #   \n+ 学习付费版   \nbilibili:<https://www.bilibili.com/read/cv11200249>   \n解压码:mpvgg   \nqq:3184207379   \n百度云(提取码yj9y):<https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA>\n\n+ 白嫖学习版   \n教程:<https://www.exception.site>   \n公众号:Java学习者社区(回复:idea)\n\n+ 建议正版。。。。。正版比学习版好用多了\n---","slug":"我是学生/rider学习版","published":1,"updated":"2023-03-15T15:34:24.591Z","_id":"clf5phhh30000jsv600662gys","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"本体下载\"><a href=\"#本体下载\" class=\"headerlink\" title=\"本体下载\"></a>本体下载</h1><p><a href=\"https://www.jetbrains.com/rider/download/#section=windows\">https://www.jetbrains.com/rider/download/#section=windows</a></p>\n<hr>\n<h1 id=\"学习信息\"><a href=\"#学习信息\" class=\"headerlink\" title=\"学习信息\"></a>学习信息</h1><ul>\n<li><p>学习付费版<br>bilibili:<a href=\"https://www.bilibili.com/read/cv11200249\">https://www.bilibili.com/read/cv11200249</a><br>解压码:mpvgg<br>qq:3184207379<br>百度云(提取码yj9y):<a href=\"https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA\">https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA</a></p>\n</li>\n<li><p>白嫖学习版<br>教程:<a href=\"https://www.exception.site/\">https://www.exception.site</a><br>公众号:Java学习者社区(回复:idea)</p>\n</li>\n<li><p>建议正版。。。。。正版比学习版好用多了</p>\n</li>\n</ul>\n<hr>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"本体下载\"><a href=\"#本体下载\" class=\"headerlink\" title=\"本体下载\"></a>本体下载</h1><p><a href=\"https://www.jetbrains.com/rider/download/#section=windows\">https://www.jetbrains.com/rider/download/#section=windows</a></p>\n<hr>\n<h1 id=\"学习信息\"><a href=\"#学习信息\" class=\"headerlink\" title=\"学习信息\"></a>学习信息</h1><ul>\n<li><p>学习付费版<br>bilibili:<a href=\"https://www.bilibili.com/read/cv11200249\">https://www.bilibili.com/read/cv11200249</a><br>解压码:mpvgg<br>qq:3184207379<br>百度云(提取码yj9y):<a href=\"https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA\">https://pan.baidu.com/s/166rVZexR_-LB7Dc1czesmA</a></p>\n</li>\n<li><p>白嫖学习版<br>教程:<a href=\"https://www.exception.site/\">https://www.exception.site</a><br>公众号:Java学习者社区(回复:idea)</p>\n</li>\n<li><p>建议正版。。。。。正版比学习版好用多了</p>\n</li>\n</ul>\n<hr>\n"},{"title":"RO笔记","date":"2023-03-30T06:30:47.000Z","abstract":"不要看不要看!","message":"RO的SVN密码","wrong_pass_message":"别看！","wrong_hash_message":"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.","_content":"\n[toc]   \n\n# UI #\n## BaseGameNode类 底层基类 ##\n\n1. 初始化\n```Lua\n--[[\n    直接在Scene上创建一个Prefab(WIN_DEV下直接同步加载原始资源)\n    然后调用initGameObject()将这个GameObject绑定\n    -@return GameObject\n]]\nBaseGameNode:initPrefabGameObject(path)\n\n\n--[[\n    直接在Scene上创建一个空的GameObject\n    然后调用initGameObject()将这个GameObject绑定\n]]\nBaseGameNode:initEmptyGameObject(name)\n\n\n--[[\n    绑定transform和gameObject到\n    self.pTrasnform和self.pGameObject上\n    -@param obj GameObject\n]]\nBaseGameNode:initGameObject(obj)\n```\n\n3. 子父节点   \n```Lua\n--[[\n    第1种情况:\n        -@param nodeChild nil\n        -@param transformChild Transform\n        作用: self.pTransform当作transformChild的父节点,\n                子节点的世界坐标保持不变.\n    第2种情况:\n        -@param nodeChild BaseGameNode\n        -@param transformChild nil\n        作用: self.pTransform当做nodeChild.pTransform的父节点,\n                子节点的世界坐标保持不变,\n                并且self.children会加入nodeChild,\n                nodeChild.parent设置成self\n]]\nBaseGameNode:addChild(nodeChild, transformChild)\n\n\n--[[\n    第1种情况:\n        -@param nodeParent nil\n        -@param transformParent Transform\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变.\n    第2种情况:\n        -@param nodeParent BaseGameNode\n        -@param transformParent Transform | nil\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变,\n                并且self.parent = nodeParent,\n                nodeParent.children会加入self.\n                注意当transformParent为nil时,\n                nodeParent.pTransform会作为self.pTransform的父节点.\n]]\nBaseGameNode.setParent(nodeParent, transformParent)\n\n\n--[[\n    通过cleanup()销毁self.children中所有的BaseGameNode\n]]\nBaseGameNode:removeAllChildren()\n\n\n--[[\n    通过cleanup()销毁self.children中的某个BaseGameNode\n    -@param cleanup boolean 当cleanup为false时,\n        不会使用cleanup()销毁该节点, 只会将该节点从self.children中移除.\n]]\nBaseGameNode:removeChild(child, cleanup)\n\n\n--[[\n    第1种情况:\n        -@param cleanup true\n        作用: 通过cleanup()销毁自己\n    第2中情况:\n        -@param cleanup false\n        作用: 不会是用cleanup()销毁自己, 但会置空self.parent = nil\n]]\nBaseGameNode:removeFromParent(cleanup)\n```\n\n4. 销毁\n```Lua\n--[[\n    销毁self.pGameObject  \n    流程:\n        调用回调onCleanUp()\n        移除update事件,\n        移除Action事件,\n        移除监听message事件(只能移除通过self的on监听的事件, 通过messageManager的on监听的事件不行),\n        杀死DOTween动画,\n        销毁GameObject(DestroyImmediate()方法销毁),\n        将所有属性 = nil置空\n]]\nBaseGameNode:cleanup()\nBaseGameNode:onCleanUp()    -- 默认空, 自行重写\n```\n\n5. 状态\n```Lua\n--[[\n    设置self.pGameObject的active\n    执行完毕后回调onActiveChange()\n]]\nBaseGameNode:setActive(ac)\nBaseGameNode:onActiveChange(bValue) -- 默认空, 自行重写\n```","source":"_posts/RO/RO笔记.md","raw":"---\ntitle: RO笔记\ndate: 2023-03-30 14:30:47\ntags:\n- RO\ncategories: \"RO\"\nabstract: 不要看不要看!\nmessage: RO的SVN密码\nwrong_pass_message: 别看！\nwrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n---\n\n[toc]   \n\n# UI #\n## BaseGameNode类 底层基类 ##\n\n1. 初始化\n```Lua\n--[[\n    直接在Scene上创建一个Prefab(WIN_DEV下直接同步加载原始资源)\n    然后调用initGameObject()将这个GameObject绑定\n    -@return GameObject\n]]\nBaseGameNode:initPrefabGameObject(path)\n\n\n--[[\n    直接在Scene上创建一个空的GameObject\n    然后调用initGameObject()将这个GameObject绑定\n]]\nBaseGameNode:initEmptyGameObject(name)\n\n\n--[[\n    绑定transform和gameObject到\n    self.pTrasnform和self.pGameObject上\n    -@param obj GameObject\n]]\nBaseGameNode:initGameObject(obj)\n```\n\n3. 子父节点   \n```Lua\n--[[\n    第1种情况:\n        -@param nodeChild nil\n        -@param transformChild Transform\n        作用: self.pTransform当作transformChild的父节点,\n                子节点的世界坐标保持不变.\n    第2种情况:\n        -@param nodeChild BaseGameNode\n        -@param transformChild nil\n        作用: self.pTransform当做nodeChild.pTransform的父节点,\n                子节点的世界坐标保持不变,\n                并且self.children会加入nodeChild,\n                nodeChild.parent设置成self\n]]\nBaseGameNode:addChild(nodeChild, transformChild)\n\n\n--[[\n    第1种情况:\n        -@param nodeParent nil\n        -@param transformParent Transform\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变.\n    第2种情况:\n        -@param nodeParent BaseGameNode\n        -@param transformParent Transform | nil\n        作用: transformParent当做self.pTransform的父节点,\n                自身的世界坐标保持不变,\n                并且self.parent = nodeParent,\n                nodeParent.children会加入self.\n                注意当transformParent为nil时,\n                nodeParent.pTransform会作为self.pTransform的父节点.\n]]\nBaseGameNode.setParent(nodeParent, transformParent)\n\n\n--[[\n    通过cleanup()销毁self.children中所有的BaseGameNode\n]]\nBaseGameNode:removeAllChildren()\n\n\n--[[\n    通过cleanup()销毁self.children中的某个BaseGameNode\n    -@param cleanup boolean 当cleanup为false时,\n        不会使用cleanup()销毁该节点, 只会将该节点从self.children中移除.\n]]\nBaseGameNode:removeChild(child, cleanup)\n\n\n--[[\n    第1种情况:\n        -@param cleanup true\n        作用: 通过cleanup()销毁自己\n    第2中情况:\n        -@param cleanup false\n        作用: 不会是用cleanup()销毁自己, 但会置空self.parent = nil\n]]\nBaseGameNode:removeFromParent(cleanup)\n```\n\n4. 销毁\n```Lua\n--[[\n    销毁self.pGameObject  \n    流程:\n        调用回调onCleanUp()\n        移除update事件,\n        移除Action事件,\n        移除监听message事件(只能移除通过self的on监听的事件, 通过messageManager的on监听的事件不行),\n        杀死DOTween动画,\n        销毁GameObject(DestroyImmediate()方法销毁),\n        将所有属性 = nil置空\n]]\nBaseGameNode:cleanup()\nBaseGameNode:onCleanUp()    -- 默认空, 自行重写\n```\n\n5. 状态\n```Lua\n--[[\n    设置self.pGameObject的active\n    执行完毕后回调onActiveChange()\n]]\nBaseGameNode:setActive(ac)\nBaseGameNode:onActiveChange(bValue) -- 默认空, 自行重写\n```","slug":"RO/RO笔记","published":1,"updated":"2023-03-30T12:51:57.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clfv6p94l0001x0v67wa08q6h","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"别看！\" data-whm=\"抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"7b10f900051ad0c463e2f8cf2e346307877913a1ff794c74273da6e89eaebc17\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">RO的SVN密码</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"cover":false,"excerpt":"不要看不要看!","more":"不要看不要看!","origin":"<p>[toc]   </p>\n<h1 id=\"UI\"><a href=\"#UI\" class=\"headerlink\" title=\"UI\"></a>UI</h1><h2 id=\"BaseGameNode类-底层基类\"><a href=\"#BaseGameNode类-底层基类\" class=\"headerlink\" title=\"BaseGameNode类 底层基类\"></a>BaseGameNode类 底层基类</h2><ol>\n<li><p>初始化</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    直接在Scene上创建一个Prefab(WIN_DEV下直接同步加载原始资源)</span></span><br><span class=\"line\"><span class=\"comment\">    然后调用initGameObject()将这个GameObject绑定</span></span><br><span class=\"line\"><span class=\"comment\">    -@return GameObject</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:initPrefabGameObject(<span class=\"built_in\">path</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    直接在Scene上创建一个空的GameObject</span></span><br><span class=\"line\"><span class=\"comment\">    然后调用initGameObject()将这个GameObject绑定</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:initEmptyGameObject(name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    绑定transform和gameObject到</span></span><br><span class=\"line\"><span class=\"comment\">    self.pTrasnform和self.pGameObject上</span></span><br><span class=\"line\"><span class=\"comment\">    -@param obj GameObject</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:initGameObject(obj)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>子父节点   </p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    第1种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeChild nil</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformChild Transform</span></span><br><span class=\"line\"><span class=\"comment\">        作用: self.pTransform当作transformChild的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                子节点的世界坐标保持不变.</span></span><br><span class=\"line\"><span class=\"comment\">    第2种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeChild BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformChild nil</span></span><br><span class=\"line\"><span class=\"comment\">        作用: self.pTransform当做nodeChild.pTransform的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                子节点的世界坐标保持不变,</span></span><br><span class=\"line\"><span class=\"comment\">                并且self.children会加入nodeChild,</span></span><br><span class=\"line\"><span class=\"comment\">                nodeChild.parent设置成self</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:addChild(nodeChild, transformChild)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    第1种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeParent nil</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformParent Transform</span></span><br><span class=\"line\"><span class=\"comment\">        作用: transformParent当做self.pTransform的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                自身的世界坐标保持不变.</span></span><br><span class=\"line\"><span class=\"comment\">    第2种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param nodeParent BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">        -@param transformParent Transform | nil</span></span><br><span class=\"line\"><span class=\"comment\">        作用: transformParent当做self.pTransform的父节点,</span></span><br><span class=\"line\"><span class=\"comment\">                自身的世界坐标保持不变,</span></span><br><span class=\"line\"><span class=\"comment\">                并且self.parent = nodeParent,</span></span><br><span class=\"line\"><span class=\"comment\">                nodeParent.children会加入self.</span></span><br><span class=\"line\"><span class=\"comment\">                注意当transformParent为nil时,</span></span><br><span class=\"line\"><span class=\"comment\">                nodeParent.pTransform会作为self.pTransform的父节点.</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode.setParent(nodeParent, transformParent)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    通过cleanup()销毁self.children中所有的BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeAllChildren()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    通过cleanup()销毁self.children中的某个BaseGameNode</span></span><br><span class=\"line\"><span class=\"comment\">    -@param cleanup boolean 当cleanup为false时,</span></span><br><span class=\"line\"><span class=\"comment\">        不会使用cleanup()销毁该节点, 只会将该节点从self.children中移除.</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeChild(child, cleanup)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    第1种情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param cleanup true</span></span><br><span class=\"line\"><span class=\"comment\">        作用: 通过cleanup()销毁自己</span></span><br><span class=\"line\"><span class=\"comment\">    第2中情况:</span></span><br><span class=\"line\"><span class=\"comment\">        -@param cleanup false</span></span><br><span class=\"line\"><span class=\"comment\">        作用: 不会是用cleanup()销毁自己, 但会置空self.parent = nil</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:removeFromParent(cleanup)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>销毁</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    销毁self.pGameObject  </span></span><br><span class=\"line\"><span class=\"comment\">    流程:</span></span><br><span class=\"line\"><span class=\"comment\">        调用回调onCleanUp()</span></span><br><span class=\"line\"><span class=\"comment\">        移除update事件,</span></span><br><span class=\"line\"><span class=\"comment\">        移除Action事件,</span></span><br><span class=\"line\"><span class=\"comment\">        移除监听message事件(只能移除通过self的on监听的事件, 通过messageManager的on监听的事件不行),</span></span><br><span class=\"line\"><span class=\"comment\">        杀死DOTween动画,</span></span><br><span class=\"line\"><span class=\"comment\">        销毁GameObject(DestroyImmediate()方法销毁),</span></span><br><span class=\"line\"><span class=\"comment\">        将所有属性 = nil置空</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:cleanup()</span><br><span class=\"line\">BaseGameNode:onCleanUp()    <span class=\"comment\">-- 默认空, 自行重写</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>状态</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">    设置self.pGameObject的active</span></span><br><span class=\"line\"><span class=\"comment\">    执行完毕后回调onActiveChange()</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\">BaseGameNode:setActive(ac)</span><br><span class=\"line\">BaseGameNode:onActiveChange(bValue) <span class=\"comment\">-- 默认空, 自行重写</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","encrypt":true}],"PostAsset":[],"PostCategory":[{"post_id":"clf4ax4tq000170v6d7m5eiw2","category_id":"clf4ax4tz000370v6akcchx22","_id":"clf4ax4uc000d70v6ae8f2bsk"},{"post_id":"clf4ax4u2000570v67yq66xw2","category_id":"clf4ax4ua000870v62teq3r99","_id":"clf4ax4uf000j70v64fyobaxp"},{"post_id":"clf4ax4ue000i70v65tqfhbdl","category_id":"clf4ax4ua000870v62teq3r99","_id":"clf4ax4ui000r70v65ayj7i8t"},{"post_id":"clf4ax4uc000c70v61ll84juq","category_id":"clf4ax4uk000v70v64hqr6t1r","_id":"clf4ax4um001270v6h7x05nop"},{"post_id":"clf4ax4ud000g70v6gv8v3d1u","category_id":"clf4ax4ul001070v6druvhuol","_id":"clf4ax4um001570v6cbthfjih"},{"post_id":"clf4ax4u8000670v688jp1ek9","category_id":"clf4ax4ud000e70v64roy56in","_id":"clf4ax4un001a70v6c5u1b13u"},{"post_id":"clf4ax4u8000670v688jp1ek9","category_id":"clf4ax4um001370v67xmj3znu","_id":"clf4ax4un001e70v6bzxr1u6k"},{"post_id":"clf4ax4ug000m70v60bkx0hoo","category_id":"clf4ax4um001670v65zk38htr","_id":"clf4ax4uo001g70v6dvzc0zp2"},{"post_id":"clf4ax4uh000n70v6g2g4hcwq","category_id":"clf4ax4um001670v65zk38htr","_id":"clf4ax4uo001k70v69kozb8mg"},{"post_id":"clf4ax4ui000q70v67b2q5ukb","category_id":"clf4ax4um001670v65zk38htr","_id":"clf4ax4up001o70v61azqaznm"},{"post_id":"clf4ax4uk000t70v6crz60ry1","category_id":"clf4ax4um001670v65zk38htr","_id":"clf4ax4up001r70v6hrl9g8i1"},{"post_id":"clf4ax4ua000770v64q3i7ltz","category_id":"clf5gohit0000ugv66z3w0ij5","_id":"clf5gohj20007ugv65s2yczyh"},{"post_id":"clf4ax4ub000b70v69ycbd7qv","category_id":"clf5gohit0000ugv66z3w0ij5","_id":"clf5gohj3000augv64vqaep0l"},{"post_id":"clf5gohix0002ugv6dg7v93z3","category_id":"clf5gohj10006ugv6b6162neq","_id":"clf5gohj4000dugv6h3o5a3va"},{"post_id":"clf5phhh30000jsv600662gys","category_id":"clf5gohj10006ugv6b6162neq","_id":"clf5phhhl0002jsv6aljhcqm6"},{"post_id":"clfv6p94l0001x0v67wa08q6h","category_id":"clf4ax4um001670v65zk38htr","_id":"clfv6p94p0005x0v6bhom5f2f"}],"PostTag":[{"post_id":"clf4ax4tq000170v6d7m5eiw2","tag_id":"clf4ax4u0000470v63ni9ebig","_id":"clf4ax4ub000a70v600frccom"},{"post_id":"clf4ax4u2000570v67yq66xw2","tag_id":"clf4ax4ua000970v60bemgn80","_id":"clf4ax4ue000h70v62d7ngvq8"},{"post_id":"clf4ax4u8000670v688jp1ek9","tag_id":"clf4ax4ud000f70v6hs7k32l7","_id":"clf4ax4uj000s70v68q2q94yt"},{"post_id":"clf4ax4u8000670v688jp1ek9","tag_id":"clf4ax4uf000l70v6dpyn89db","_id":"clf4ax4uk000u70v67oimfcb8"},{"post_id":"clf4ax4ub000b70v69ycbd7qv","tag_id":"clf4ax4ul001170v68ll7dvt3","_id":"clf4ax4un001970v69wb4dxps"},{"post_id":"clf4ax4uc000c70v61ll84juq","tag_id":"clf4ax4um001770v63rn880zp","_id":"clf4ax4uo001i70v6g4zy5d6k"},{"post_id":"clf4ax4uc000c70v61ll84juq","tag_id":"clf4ax4un001c70v6dgwmbiu0","_id":"clf4ax4uo001l70v60pb51cq6"},{"post_id":"clf4ax4ud000g70v6gv8v3d1u","tag_id":"clf4ax4uo001h70v6h6h54vg7","_id":"clf4ax4up001n70v62du9bphc"},{"post_id":"clf4ax4ue000i70v65tqfhbdl","tag_id":"clf4ax4up001m70v6div64a2h","_id":"clf4ax4up001q70v6181qh1nu"},{"post_id":"clf4ax4ug000m70v60bkx0hoo","tag_id":"clf4ax4up001p70v6cohb3ltd","_id":"clf4ax4up001t70v696cg5jal"},{"post_id":"clf4ax4uh000n70v6g2g4hcwq","tag_id":"clf4ax4up001p70v6cohb3ltd","_id":"clf4ax4uq001v70v67f0g430p"},{"post_id":"clf4ax4ui000q70v67b2q5ukb","tag_id":"clf4ax4up001p70v6cohb3ltd","_id":"clf4ax4uq001x70v6ete52y5r"},{"post_id":"clf4ax4uk000t70v6crz60ry1","tag_id":"clf4ax4up001p70v6cohb3ltd","_id":"clf4ax4uq001y70v6ayphg308"},{"post_id":"clf4ax4ua000770v64q3i7ltz","tag_id":"clf5gohiw0001ugv6biv05wi2","_id":"clf5gohj10005ugv6ecacb63n"},{"post_id":"clf4ax4ub000b70v69ycbd7qv","tag_id":"clf5gohiw0001ugv6biv05wi2","_id":"clf5gohj4000bugv63m655t63"},{"post_id":"clf4ax4ub000b70v69ycbd7qv","tag_id":"clf5gohj20008ugv67uxtd6v9","_id":"clf5gohj4000cugv6drkj298j"},{"post_id":"clf5gohix0002ugv6dg7v93z3","tag_id":"clf5gohj30009ugv6bkg9f1qn","_id":"clf5gohj4000eugv6blex4mcu"},{"post_id":"clf5phhh30000jsv600662gys","tag_id":"clf5phhhb0001jsv6gvry2s4i","_id":"clf5phhhl0003jsv6dacx3uv5"},{"post_id":"clfv6p94l0001x0v67wa08q6h","tag_id":"clf4ax4up001p70v6cohb3ltd","_id":"clfv6p94o0003x0v6d5qc1k7z"}],"Tag":[{"name":"IDE","_id":"clf4ax4u0000470v63ni9ebig"},{"name":"加密","_id":"clf4ax4ua000970v60bemgn80"},{"name":"进制","_id":"clf4ax4ud000f70v6hs7k32l7"},{"name":"位运算","_id":"clf4ax4uf000l70v6dpyn89db"},{"name":"Git","_id":"clf4ax4uh000p70v6e6bh04ir"},{"name":"网络代理","_id":"clf4ax4ul001170v68ll7dvt3"},{"name":"Github","_id":"clf4ax4um001470v6cvl8ct2g"},{"name":"元表","_id":"clf4ax4um001770v63rn880zp"},{"name":"原方法","_id":"clf4ax4un001c70v6dgwmbiu0"},{"name":"hexo","_id":"clf4ax4uo001h70v6h6h54vg7"},{"name":"Markdown","_id":"clf4ax4up001m70v6div64a2h"},{"name":"RO","_id":"clf4ax4up001p70v6cohb3ltd"},{"name":"git","_id":"clf5gohiw0001ugv6biv05wi2"},{"name":"GitHub","_id":"clf5gohj20008ugv67uxtd6v9"},{"name":"unityHub","_id":"clf5gohj30009ugv6bkg9f1qn"},{"name":"rider","_id":"clf5phhhb0001jsv6gvry2s4i"}]}}